#!/usr/bin/env python3

# Copyright (c) 2023 Trevor Taylor
# coding: utf-8
# 
# Permission to use, copy, modify, and/or distribute this software for
# any purpose with or without fee is hereby granted, provided that all
# copyright notices and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
from sys import path
from os.path import dirname
if path[0]==dirname(__file__): path.pop(0)
from xju.cmc.signal import SIGTERM, AsyncSignalLatch
import signal
from xju.assert_ import Assert
import asyncio
from os import kill, getpid

async def main():
    with AsyncSignalLatch(SIGTERM) as signalled:
        # nothing yet...
        Assert(signalled.done()) == False
        kill(getpid(), signal.SIGTERM)
        # note still nothing, the signal is not delivered till we wait
        Assert(signalled.done()) == False
        # now it's there...
        Assert(await signalled) == SIGTERM
        Assert(signalled.done()) == True
        pass

asyncio.run(main())
