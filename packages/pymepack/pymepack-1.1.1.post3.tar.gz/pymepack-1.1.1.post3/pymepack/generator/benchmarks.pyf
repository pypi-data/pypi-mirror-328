!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module benchmarks ! in 
    interface  ! in :benchmarks
        subroutine bb03ad(def,nr,dpar,ipar,vec,n,m,e,lde,a,lda,y,ldy,b,ldb,x,ldx,u,ldu,note,dwork,ldwork,info) ! in :benchmarks:BB03AD.f
            character :: def
            integer dimension(*) :: nr
            double precision dimension(*) :: dpar
            integer dimension(*) :: ipar
            logical dimension(8) :: vec
            integer :: n
            integer :: m
            double precision intent(in,out,copy),dimension(lde,*) :: e
            integer, optional,check(shape(e,0)==lde),depend(e) :: lde=shape(e,0)
            double precision intent(in,out,copy),dimension(lda,*) :: a
            integer, optional,check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
            double precision intent(in,out,copy),dimension(ldy,*) :: y
            integer, optional,check(shape(y,0)==ldy),depend(y) :: ldy=shape(y,0)
            double precision dimension(ldb,*) :: b
            integer, optional,check(shape(b,0)==ldb),depend(b) :: ldb=shape(b,0)
            double precision intent(in,out,copy),dimension(ldx,*) :: x
            integer, optional,check(shape(x,0)==ldx),depend(x) :: ldx=shape(x,0)
            double precision dimension(ldu,*) :: u
            integer, optional,check(shape(u,0)==ldu),depend(u) :: ldu=shape(u,0)
            character*70, optional :: note
            double precision dimension(ldwork) :: dwork
            integer, optional,check(len(dwork)>=ldwork),depend(dwork) :: ldwork=len(dwork)
            integer, optional :: info
        end subroutine bb03ad
        subroutine bb04ad(def,nr,dpar,ipar,vec,n,m,e,lde,a,lda,y,ldy,b,ldb,x,ldx,u,ldu,note,dwork,ldwork,info) ! in :benchmarks:BB04AD.f
            character :: def
            integer dimension(*) :: nr
            double precision dimension(*) :: dpar
            integer dimension(*) :: ipar
            logical dimension(8) :: vec
            integer :: n
            integer :: m
            double precision intent(in,out,copy),dimension(lde,*) :: e
            integer, optional,check(shape(e,0)==lde),depend(e) :: lde=shape(e,0)
            double precision intent(in,out,copy),dimension(lda,*) :: a
            integer, optional,check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
            double precision intent(in,out,copy),dimension(ldy,*) :: y
            integer, optional,check(shape(y,0)==ldy),depend(y) :: ldy=shape(y,0)
            double precision dimension(ldb,*) :: b
            integer, optional,check(shape(b,0)==ldb),depend(b) :: ldb=shape(b,0)
            double precision intent(in,out,copy),dimension(ldx,*) :: x
            integer, optional,check(shape(x,0)==ldx),depend(x) :: ldx=shape(x,0)
            double precision dimension(ldu,*) :: u
            integer, optional,check(shape(u,0)==ldu),depend(u) :: ldu=shape(u,0)
            character*70, optional :: note
            double precision dimension(ldwork) :: dwork
            integer, optional,check(len(dwork)>=ldwork),depend(dwork) :: ldwork=len(dwork)
            integer, optional :: info
        end subroutine bb04ad
    end interface 
end python module benchmarks

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
