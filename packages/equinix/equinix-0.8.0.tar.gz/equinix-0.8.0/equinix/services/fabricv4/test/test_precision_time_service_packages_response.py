# coding: utf-8

"""
    Equinix Fabric API v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.fabricv4.models.precision_time_service_packages_response import PrecisionTimeServicePackagesResponse

class TestPrecisionTimeServicePackagesResponse(unittest.TestCase):
    """PrecisionTimeServicePackagesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrecisionTimeServicePackagesResponse:
        """Test PrecisionTimeServicePackagesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrecisionTimeServicePackagesResponse`
        """
        model = PrecisionTimeServicePackagesResponse()
        if include_optional:
            return PrecisionTimeServicePackagesResponse(
                pagination = equinix.services.fabricv4.models.pagination.Pagination(
                    offset = 0, 
                    limit = 0, 
                    total = 0, 
                    next = '', 
                    previous = '', ),
                data = [
                    {"href":"https://api.equinix.com/fabric/v4/timeServicePackage/NTP_STANDARD","type":"TIME_SERVICE_PACKAGE","code":"NTP_STANDARD","bandwidth":10,"accuracySlaUnit":"microseconds","accuracySla":50,"accuracySlaMin":1,"accuracySlaMax":10,"clientsPerSecondMax":100,"redundancySupported":true,"multiSubnetSupported":true,"changeLog":{"createdDateTime":"2023-05-16T07:50:49.749Z","updatedDateTime":"2023-05-17T07:50:49.749Z"}}
                    ]
            )
        else:
            return PrecisionTimeServicePackagesResponse(
        )
        """

    def testPrecisionTimeServicePackagesResponse(self):
        """Test PrecisionTimeServicePackagesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
