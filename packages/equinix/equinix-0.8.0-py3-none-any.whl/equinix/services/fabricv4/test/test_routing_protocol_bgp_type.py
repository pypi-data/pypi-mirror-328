# coding: utf-8

"""
    Equinix Fabric API v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.fabricv4.models.routing_protocol_bgp_type import RoutingProtocolBGPType

class TestRoutingProtocolBGPType(unittest.TestCase):
    """RoutingProtocolBGPType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoutingProtocolBGPType:
        """Test RoutingProtocolBGPType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoutingProtocolBGPType`
        """
        model = RoutingProtocolBGPType()
        if include_optional:
            return RoutingProtocolBGPType(
                type = 'BGP',
                name = 'My-BGP-route-1',
                bgp_ipv4 = equinix.services.fabricv4.models.bgp_connection_ipv4.BGPConnectionIpv4(
                    customer_peer_ip = '10.1.1.2', 
                    equinix_peer_ip = '10.1.1.3', 
                    enabled = True, 
                    outbound_as_prepend_count = 3, 
                    inbound_med = 1000, 
                    outbound_med = 2000, 
                    routes_max = 1000, 
                    operation = equinix.services.fabricv4.models.bgp_connection_operation.BGPConnectionOperation(
                        operational_status = 'UP', 
                        op_status_changed_at = '2021-10-30T07:21:39Z', ), ),
                bgp_ipv6 = equinix.services.fabricv4.models.bgp_connection_ipv6.BGPConnectionIpv6(
                    customer_peer_ip = '2001:db8:c59b::1', 
                    equinix_peer_ip = '2001:db8:c59b::1', 
                    enabled = True, 
                    outbound_as_prepend_count = 3, 
                    inbound_med = 1000, 
                    outbound_med = 2000, 
                    routes_max = 1000, 
                    operation = equinix.services.fabricv4.models.bgp_connection_operation.BGPConnectionOperation(
                        operational_status = 'UP', 
                        op_status_changed_at = '2021-10-30T07:21:39Z', ), ),
                customer_asn = 56,
                equinix_asn = 56,
                bgp_auth_key = '',
                as_override_enabled = True,
                bfd = equinix.services.fabricv4.models.routing_protocol_bfd.RoutingProtocolBFD(
                    enabled = True, 
                    interval = '100', )
            )
        else:
            return RoutingProtocolBGPType(
                type = 'BGP',
        )
        """

    def testRoutingProtocolBGPType(self):
        """Test RoutingProtocolBGPType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
