# coding: utf-8

"""
    Equinix Fabric API v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.fabricv4.models.route_aggregation_rules_post_request import RouteAggregationRulesPostRequest

class TestRouteAggregationRulesPostRequest(unittest.TestCase):
    """RouteAggregationRulesPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RouteAggregationRulesPostRequest:
        """Test RouteAggregationRulesPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RouteAggregationRulesPostRequest`
        """
        model = RouteAggregationRulesPostRequest()
        if include_optional:
            return RouteAggregationRulesPostRequest(
                data = [
                    equinix.services.fabricv4.models.route_aggregation_rules_base.RouteAggregationRulesBase(
                        name = 'Private-subnet-Aggregation', 
                        description = '', 
                        prefix = '192.168.0.0/24', )
                    ]
            )
        else:
            return RouteAggregationRulesPostRequest(
        )
        """

    def testRouteAggregationRulesPostRequest(self):
        """Test RouteAggregationRulesPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
