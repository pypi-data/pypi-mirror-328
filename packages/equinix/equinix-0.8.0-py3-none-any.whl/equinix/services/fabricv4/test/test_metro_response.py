# coding: utf-8

"""
    Equinix Fabric API v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.fabricv4.models.metro_response import MetroResponse

class TestMetroResponse(unittest.TestCase):
    """MetroResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetroResponse:
        """Test MetroResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetroResponse`
        """
        model = MetroResponse()
        if include_optional:
            return MetroResponse(
                pagination = equinix.services.fabricv4.models.pagination.Pagination(
                    offset = 0, 
                    limit = 0, 
                    total = 0, 
                    next = '', 
                    previous = '', ),
                data = [
                    equinix.services.fabricv4.models.metro.Metro(
                        href = '', 
                        type = '', 
                        code = '', 
                        region = '', 
                        name = '', 
                        equinix_asn = 56, 
                        local_vc_bandwidth_max = 56, 
                        geo_coordinates = equinix.services.fabricv4.models.geo_coordinates.GeoCoordinates(
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        connected_metros = [
                            equinix.services.fabricv4.models.connected_metro.ConnectedMetro(
                                href = '', 
                                code = '', 
                                avg_latency = 1.337, 
                                remote_vc_bandwidth_max = 56, )
                            ], 
                        geo_scopes = [
                            'CANADA'
                            ], )
                    ]
            )
        else:
            return MetroResponse(
        )
        """

    def testMetroResponse(self):
        """Test MetroResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
