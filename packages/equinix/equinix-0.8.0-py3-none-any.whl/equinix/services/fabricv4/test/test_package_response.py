# coding: utf-8

"""
    Equinix Fabric API v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.fabricv4.models.package_response import PackageResponse

class TestPackageResponse(unittest.TestCase):
    """PackageResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PackageResponse:
        """Test PackageResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PackageResponse`
        """
        model = PackageResponse()
        if include_optional:
            return PackageResponse(
                pagination = equinix.services.fabricv4.models.pagination.Pagination(
                    offset = 0, 
                    limit = 0, 
                    total = 0, 
                    next = '', 
                    previous = '', ),
                data = [
                    equinix.services.fabricv4.models.cloud_router_package.CloudRouterPackage(
                        href = 'https://api.equinix.com/fabric/v4/routerPackages/LAB', 
                        type = 'ROUTER_PACKAGE', 
                        code = 'LAB', 
                        description = '', 
                        total_ipv4_routes_max = 50, 
                        total_ipv6_routes_max = 50, 
                        route_filter_supported = True, 
                        vc_count_max = 10, 
                        cr_count_max = 3, 
                        vc_bandwidth_max = 50, 
                        change_log = equinix.services.fabricv4.models.package_change_log.PackageChangeLog(
                            created_date_time = '2020-11-06T07:00Z', 
                            updated_date_time = '2020-11-06T07:00Z', ), )
                    ]
            )
        else:
            return PackageResponse(
        )
        """

    def testPackageResponse(self):
        """Test PackageResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
