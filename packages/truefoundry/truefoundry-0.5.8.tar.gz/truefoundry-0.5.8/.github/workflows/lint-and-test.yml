name: Lint and Test TrueFoundry CLI on multiple platforms
on:
  pull_request:
    branches:
      - "main"

  push:
    branches:
      - "main"

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv venv --python ${{ matrix.python-version }} --seed

      - name: Install the project
        run: uv sync --locked  --all-extras --dev

      - name: Check files with pre-commit
        run: |
          uv run pre-commit run --all-files --show-diff-on-failure -v

  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv venv --python ${{ matrix.python-version }} --seed

      - name: Install the project
        run: uv sync --locked  --all-extras --dev

      - name: Run mypy
        run: |
          uv run bash run_mypy.sh

  test-cli:
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv venv --python ${{ matrix.python-version }} --seed

      - name: Install non dev dependencies
        run: uv sync --locked --no-dev

      - name: Test TrueFoundry CLI invocations
        run: |
          uv run --no-dev tfy --help
          uv run --no-dev tfy deploy --help
          uv run --no-dev tfy ml --help

  test:
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.12"]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv venv --python ${{ matrix.python-version }} --seed

      # Install libomp for macOS
      - name: Install libomp on macOS
        if: runner.os == 'macOS'
        run: |
          brew install libomp

      - name: Install the project
        run: uv sync --locked  --all-extras --dev

      - name: Run tests
        run: |
          uv run pytest -m "not integration" --durations=0 tests/
