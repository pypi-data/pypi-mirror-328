Metadata-Version: 2.3
Name: swarmauri_vectorstore_tfidf
Version: 0.6.1.dev16
Summary: A Tfidf based Vector Store and Tfidf Based Embedding Model.
License: Apache-2.0
Author: Jacob Stewart
Author-email: jacob@swarmauri.com
Requires-Python: >=3.10,<3.13
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: swarmauri_base (>=0.6.1.dev16,<0.7.0)
Requires-Dist: swarmauri_core (>=0.6.1.dev16,<0.7.0)
Requires-Dist: swarmauri_embedding_tfidf (>=0.6.1.dev16,<0.7.0)
Requires-Dist: swarmauri_standard (>=0.6.1.dev3,<0.7.0)
Project-URL: Repository, http://github.com/swarmauri/swarmauri-sdk
Description-Content-Type: text/markdown

![Swarmauri Logo](https://res.cloudinary.com/dbjmpekvl/image/upload/v1730099724/Swarmauri-logo-lockup-2048x757_hww01w.png)

<div align="center">

![PyPI - Downloads](https://img.shields.io/pypi/dm/swarmauri_vectorstore_tfidf)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/swarmauri_vectorstore_tfidf)
![PyPI - License](https://img.shields.io/pypi/l/swarmauri_vectorstore_tfidf)
![PyPI - Version](https://img.shields.io/pypi/v/swarmauri_vectorstore_tfidf?label=swarmauri_vectorstore_tfidf&color=green)

</div>

---

# TF-IDF Vector Store

A vector store implementation using TF-IDF (Term Frequency-Inverse Document Frequency) for document embedding and retrieval. This package provides efficient document storage and similarity-based retrieval using the TF-IDF algorithm.

## Installation

```bash
pip install swarmauri_vectorstore_tfidf
```

## Usage

Here's a basic example of how to use the TF-IDF Vector Store:

```python
from swarmauri.vector_stores.TfidfVectorStore import TfidfVectorStore
from swarmauri.documents.Document import Document

# Initialize the vector store
vector_store = TfidfVectorStore()

# Add documents
documents = [
    Document(content="Machine learning basics"),
    Document(content="Python programming guide"),
    Document(content="Data science tutorial")
]
vector_store.add_documents(documents)

# Retrieve similar documents
results = vector_store.retrieve(query="python tutorial", top_k=2)
```

## Want to help?

If you want to contribute to swarmauri-sdk, read up on our [guidelines for contributing](https://github.com/swarmauri/swarmauri-sdk/blob/master/contributing.md) that will help you get started.

