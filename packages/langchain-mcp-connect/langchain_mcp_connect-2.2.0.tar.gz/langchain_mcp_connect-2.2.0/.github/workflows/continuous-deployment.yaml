name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - .pre-commit-config.yaml

permissions:
  id-token: write # This is required for requesting credentials for trusted publishers
  contents: write # This is required for actions/checkout

jobs:
  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment: pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          version: 0.5.24

      - name: Set up Python
        run: uv python install

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          version=$(grep -m1 'version = ' pyproject.toml | cut -d'"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and publish
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          uv build
          uv publish

      - name: Create Release
        if: steps.check_tag.outputs.exists == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          version="${{ steps.get_version.outputs.version }}"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Create and push tag
          git tag -a "v${version}" -m "Release v${version}"
          git push origin "v${version}"
          
          # Create release
          gh release create "v${version}" \
            --title "Release v${version}" \
            --generate-notes \
            ./dist/*