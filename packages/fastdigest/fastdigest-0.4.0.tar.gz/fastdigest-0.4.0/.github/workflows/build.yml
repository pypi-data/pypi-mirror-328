name: build

on:
  push:
    tags:
      - "v*"  # Trigger only on version tags

jobs:
  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install maturin
        run: pip install maturin

      - name: Build source distribution
        run: maturin build --release --sdist --out dist

      - name: Upload source distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-sdist
          path: dist/*.tar.gz

  wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels on Linux
        if: runner.os == 'Linux'
        run: |
          docker run --rm -v $(pwd):/io ghcr.io/pyo3/maturin build --release --manylinux 2_28 --out /io/dist

      - name: Build wheels on macOS
        if: runner.os == 'macOS'
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.12
          export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          rustup target add x86_64-apple-darwin
          maturin build --release --target universal2-apple-darwin --out dist

      - name: Build wheels on Windows
        if: runner.os == 'Windows'
        run: maturin build --release --target x86_64-pc-windows-msvc --out dist

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/

  publish:
    name: Retrieve and publish
    runs-on: ubuntu-latest
    needs:
      - sdist
      - wheels
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/fastdigest/${{ github.ref_name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          path: dist/
      
      - name: Flatten distribution directory
        run: |
          for dir in dist/*/; do
            echo "Moving files from $dir to dist/"
            mv "$dir"* dist/ || true
            rm -rf "$dir"
          done

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
