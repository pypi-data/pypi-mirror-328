# This workflow will upload adopt to PyPI when a release is created

name: Publish and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Clean dist
        run: |
          rm -rf dist/

      - name: Build wheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m build .

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/

  check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Retrieve wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: dist/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pkginfo

      - name: Extract version
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import sys
            from pathlib import Path
            from pkginfo import Wheel

            whl_files = list(Path('dist/').glob('*.whl'))
            whl_versions = [Wheel(str(whl)).version for whl in whl_files]

            if not len(set(whl_versions)) == 1:
                print('Error: All wheels must have the same version')
                sys.exit(1)

            with open('version.txt', 'w') as f:
                f.write(whl_versions[0])

      - name: Store version
        run: |
          echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: ${{ env.VERSION }}

      - name: Check if tag exists
        run: exit 1
        if: steps.check-tag.outputs.exists == 'true'

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

  publish:
    runs-on: ubuntu-latest
    needs: check
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/adopt

    steps:
      - name: Clean dist
        run: |
          rm -rf dist/

      - name: Retrieve data
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: dist/wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/wheel

  release:
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Clean dist
        run: |
          rm -rf dist/

      - name: Retrieve wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: dist/wheel

      - name: Retrieve version
        uses: actions/download-artifact@v4
        with:
          name: version
          path: dist/

      - name: Store version
        run: |
          echo "VERSION=$(cat dist/version.txt)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/wheel/*
          name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          body: Releasing ${{ env.VERSION }} # TODO: Add release notes
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
