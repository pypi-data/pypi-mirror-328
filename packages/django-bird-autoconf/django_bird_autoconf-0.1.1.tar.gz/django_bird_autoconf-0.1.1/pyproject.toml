[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
  "django-stubs>=5.1.3",
  "nox>=2025.2.9",
  "pytest>=8.3.4",
  "pytest-cov>=6.0.0",
  "pytest-django>=4.10.0",
  "pytest-randomly>=3.16.0",
  "pytest-xdist>=3.6.1",
  "ruff>=0.9.6"
]
types = ["basedpyright>=1.27.1", "django-stubs>=5.1.3"]

[project]
authors = [{name = "Josh", email = "josh@joshthomas.dev"}]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Plugins",
  "Framework :: Django",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Framework :: Django :: 5.2",
  "Framework :: Setuptools Plugin",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = ["django-bird>=0.16.2"]
description = "django-bird plugin for autoconfiguring your Django project"
license = {file = "LICENSE"}
name = "django-bird-autoconf"
readme = "README.md"
requires-python = ">=3.10"
version = "0.1.1"

[project.entry-points.django-bird]
autoconf = "django_bird_autoconf.plugin"

[project.urls]
Documentation = "https://github.com/joshuadavidthomas/django-bird-autoconf#readme"
Issues = "https://github.com/joshuadavidthomas/django-bird-autoconf/issues"
Source = "https://github.com/joshuadavidthomas/django-bird-autoconf"

[tool.basedpyright]
exclude = ["**/__pycache__"]
include = ["src/", "noxfile.py"]
reportAny = false
reportExplicitAny = false
reportUnusedCallResult = false

[tool.bumpver]
commit = true
commit_message = ":bookmark: bump version {old_version} -> {new_version}"
current_version = "0.1.1"
push = false  # set to false for CI
tag = false
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"

[tool.bumpver.file_patterns]
"pyproject.toml" = ['version = "{version}"']
"tests/test_version.py" = ['assert __version__ == "{version}"']

[tool.hatch.build]
exclude = [".*", "Justfile"]

[tool.hatch.build.targets.wheel]
packages = ["src/django_bird_autoconf"]

[tool.pytest.ini_options]
addopts = "--create-db -n auto --dist loadfile --doctest-modules"
django_find_project = false
norecursedirs = ".* bin build dist *.egg htmlcov logs node_modules templates venv"
python_files = "tests.py test_*.py *_tests.py"
pythonpath = "src"
testpaths = ["tests"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".github",
  ".hg",
  ".mypy_cache",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  "migrations",
  "node_modules",
  "venv"
]
extend-include = ["*.pyi?"]
indent-width = 4
# Same as Black.
line-length = 88
# Assume Python >3.10
target-version = "py310"

[tool.ruff.format]
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Like Black, use double quotes for strings.
quote-style = "double"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
ignore = ["E501", "E741"]  # temporary
select = [
  "B",  # flake8-bugbear
  "E",  # Pycodestyle
  "F",  # Pyflakes
  "I",  # isort
  "UP"  # pyupgrade
]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["django_bird"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.uv]
required-version = "==0.6.*"
