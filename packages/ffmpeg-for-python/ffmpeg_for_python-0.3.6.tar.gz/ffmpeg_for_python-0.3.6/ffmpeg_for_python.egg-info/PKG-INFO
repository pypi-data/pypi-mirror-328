Metadata-Version: 2.2
Name: ffmpeg-for-python
Version: 0.3.6
Summary: Wrapper para o binário FFmpeg
Author: PauloCesar-dev404
Author-email: paulocesar0073dev404@gmail.com
License: MIT
Project-URL: Código Fonte, https://raw.githubusercontent.com/PauloCesar-dev404/ffmpeg-for-python/main/ffmpeg_for_python-0.3.6.tar.gz
Project-URL: lib, https://raw.githubusercontent.com/PauloCesar-dev404/ffmpeg-for-python/main/ffmpeg_for_python-0.3.6-py3-none-any.whl
Project-URL: GitHub, https://github.com/PauloCesar-dev404/ffmpeg-for-python
Project-URL: Bugs/Melhorias, https://github.com/PauloCesar-dev404/ffmpeg-for-python/issues
Project-URL: Documentação, https://github.com/PauloCesar-dev404/ffmpeg-for-python/wiki
Keywords: ffmpeg
Platform: any
Requires: requests
Description-Content-Type: text/markdown
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: license
Dynamic: platform
Dynamic: project-url
Dynamic: requires
Dynamic: summary

# ffmpeg-for-python

Wrapper para o binário FFmpeg, permitindo o uso de comandos FFmpeg via Python. Para saber como usar FFmpeg, consulte a documentação no [site oficial](https://ffmpeg.org/ffmpeg.html)


---


**conversão básica**

```python

from ffmpeg_for_python import FFmpeg, FFmpegExceptions

# Cria uma instância do wrapper FFmpeg
ffmpeg = FFmpeg()
# Caminho do arquivo de entrada e saída
input_video = 'input_video.mp4'
output_video = 'output_video.mkv'

# Define o arquivo de entrada e o arquivo de saída
(ffmpeg
        .overwrite_output  # Sobrescrever se existir
        .input(input_video)  # Vídeo de entrada
        .output(output_video)  # Vídeo final
)

    # Executa o comando FFmpeg e exibe a saída
try:
        ffmpeg.run(capture_output=True)
except FFmpegExceptions as e:
        print("Erro ao executar FFmpeg:", e)
```
---

**remux audio e video**

```python
from ffmpeg_for_python import FFmpeg, FFmpegExceptions
# Cria uma instância do wrapper FFmpeg
ffmpeg = FFmpeg()
# Caminho dos arquivos de entrada e saída
input_video = 'input_video.mp4'
input_audio = 'input_audio.mp4'
output_video = 'output_video.mp4'
# Define os arquivos de entrada e o arquivo de saída
(ffmpeg
        .overwrite_output  # Sobrescrever se existir
        .input(input_video)  # Vídeo de entrada
        .input(input_audio)  # Áudio
        .args(arguments=['-c:a', 'copy', '-c:v', 'copy'])  # Parâmetros de cópia de áudio e vídeo
        .output(output_video)  # Vídeo final
)

# Executa o comando FFmpeg e exibe a saída
try:
        ffmpeg.run(capture_output=True)
except FFmpegExceptions as e:
        print("Erro ao executar FFmpeg:", e)
```
---
