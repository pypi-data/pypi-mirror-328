Metadata-Version: 2.2
Name: adpa
Version: 0.1.6
Summary: Advanced Data Processing and Analytics Framework
Home-page: https://github.com/adpa/adpa
Author: ADPA Team
Author-email: ADPA Team <info@adpa.io>
Maintainer-email: ADPA Team <info@adpa.io>
License: MIT License
        
        Copyright (c) 2025 Achim Dehnert
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/adpa/adpa
Project-URL: Documentation, https://adpa.readthedocs.io/
Project-URL: Repository, https://github.com/adpa/adpa.git
Project-URL: Bug Tracker, https://github.com/adpa/adpa/issues
Project-URL: Release Notes, https://github.com/adpa/adpa/blob/main/CHANGELOG.md
Keywords: data processing,analytics,machine learning,artificial intelligence,data science,database,sql,async,api
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Database :: Database Engines/Servers
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Operating System :: OS Independent
Classifier: Framework :: AsyncIO
Classifier: Framework :: Jupyter
Classifier: Framework :: FastAPI
Classifier: Typing :: Typed
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pydantic>=2.0.0
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: fastapi>=0.100.0
Requires-Dist: uvicorn>=0.22.0
Requires-Dist: pandas>=2.0.0
Requires-Dist: numpy>=1.24.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: requests>=2.31.0
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: asyncio>=3.4.3
Requires-Dist: typing-extensions>=4.7.0
Requires-Dist: click>=8.1.0
Requires-Dist: rich>=13.4.0
Requires-Dist: tqdm>=4.65.0
Requires-Dist: loguru>=0.7.0
Requires-Dist: prometheus-client>=0.17.0
Requires-Dist: opentelemetry-api>=1.19.0
Requires-Dist: opentelemetry-sdk>=1.19.0
Requires-Dist: cryptography>=41.0.0
Requires-Dist: pyjwt>=2.8.0
Requires-Dist: bcrypt>=4.0.0
Provides-Extra: docs
Requires-Dist: mkdocs>=1.5.0; extra == "docs"
Requires-Dist: mkdocs-material>=9.5.0; extra == "docs"
Requires-Dist: mkdocstrings>=0.24.0; extra == "docs"
Requires-Dist: mkdocstrings-python>=1.8.0; extra == "docs"
Requires-Dist: mkdocs-git-revision-date-plugin>=0.3.2; extra == "docs"
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# ADPA Framework

[![PyPI version](https://badge.fury.io/py/adpa.svg)](https://badge.fury.io/py/adpa)
[![Python](https://img.shields.io/pypi/pyversions/adpa.svg)](https://pypi.org/project/adpa/)
[![License](https://img.shields.io/github/license/achimdehnert/adpa.svg)](https://github.com/achimdehnert/adpa/blob/main/LICENSE)
[![Documentation Status](https://readthedocs.org/projects/adpa/badge/?version=latest)](https://adpa.readthedocs.io/en/latest/?badge=latest)
[![CI/CD](https://github.com/achimdehnert/adpa/actions/workflows/ci.yml/badge.svg)](https://github.com/achimdehnert/adpa/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/achimdehnert/adpa/branch/main/graph/badge.svg)](https://codecov.io/gh/achimdehnert/adpa)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Security: bandit](https://img.shields.io/badge/security-bandit-yellow.svg)](https://github.com/PyCQA/bandit)
[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)
[![Downloads](https://static.pepy.tech/badge/adpa)](https://pepy.tech/project/adpa)

## Overview

ADPA (Advanced Data Processing and Analytics) is a comprehensive framework for data processing, analytics, and machine learning tasks. It provides a robust foundation for building scalable, secure, and maintainable data applications.

## üöÄ Quick Start

```bash
pip install adpa
```

```python
from adpa.text2sql import Text2SQLConverter

# Initialize the converter
converter = Text2SQLConverter()

# Convert natural language to SQL
query = "Find all users who joined after 2024"
sql = converter.convert(query)
print(sql)
```

üìö [Read the Quick Start Guide](https://adpa.readthedocs.io/en/latest/quickstart/)

## ‚ú® Features

### Core Components

- **Text2SQL Engine**: Convert natural language to SQL with schema validation
- **Agent System**: Autonomous agents for complex data processing tasks
- **LLM Integration**: Support for multiple LLM providers (OpenAI, Anthropic, Azure)
- **Database Operations**: Unified interface for database interactions
- **Security Layer**: Built-in security features and input validation

### Advanced Features

- **Monitoring**: Real-time performance and resource monitoring
- **Caching**: Intelligent caching system for improved performance
- **Scaling**: Horizontal scaling capabilities for large workloads
- **API Integration**: Ready-to-use API interfaces
- **UI Components**: Modern web interface components

## üõ†Ô∏è Installation

### Basic Installation

```bash
pip install adpa
```

### With Optional Dependencies

```bash
# With all features
pip install "adpa[all]"

# With specific features
pip install "adpa[llm,monitoring]"
```

## üìñ Documentation

- [Official Documentation](https://adpa.readthedocs.io)
- [API Reference](https://adpa.readthedocs.io/en/latest/api/)
- [Examples](https://adpa.readthedocs.io/en/latest/examples/)
- [Contributing Guide](CONTRIBUTING.md)

## üåü Examples

### Text to SQL Conversion

```python
from adpa.text2sql import Text2SQLConverter
from adpa.database import DatabaseManager

# Initialize components
converter = Text2SQLConverter()
db = DatabaseManager()

# Convert and execute query
query = "Show me sales trends for last month"
sql = converter.convert(query)
results = db.execute(sql)
```

### Agent System Usage

```python
from adpa.agents import AgentSystem
from adpa.agents.types import Task

# Initialize agent system
agent_system = AgentSystem()

# Create and execute task
task = Task(
    description="Analyze user behavior patterns",
    data={"timeframe": "last_week"}
)
result = agent_system.execute_task(task)
```

### Monitoring Integration

```python
from adpa.monitoring import Monitor

# Initialize monitoring
monitor = Monitor()

# Track operations
with monitor.track("data_processing"):
    # Your code here
    pass

# Get metrics
metrics = monitor.get_metrics()
```

## ü§ù Contributing

We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.

### Development Setup

```bash
# Clone repository
git clone https://github.com/achimdehnert/adpa.git
cd adpa

# Install development dependencies
pip install poetry
poetry install --with dev,test,docs

# Run tests
poetry run pytest
poetry run robot -d results tests/robot/tests/
```

## üìä Project Status

- **Latest Release**: v1.5.0
- **Python Versions**: 3.11, 3.12
- **Development Status**: Beta
- **License**: MIT

## üîó Links

- [GitHub Repository](https://github.com/achimdehnert/adpa)
- [PyPI Package](https://pypi.org/project/adpa/)
- [Documentation](https://adpa.readthedocs.io)
- [Issue Tracker](https://github.com/achimdehnert/adpa/issues)
- [Discussions](https://github.com/achimdehnert/adpa/discussions)

## üìù License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
