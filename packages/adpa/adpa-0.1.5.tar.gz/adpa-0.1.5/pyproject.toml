[build-system]
requires = ["setuptools>=61.0.0", "wheel>=0.37.0"]
build-backend = "setuptools.build_meta"

[project]
name = "adpa"
version = "0.1.5"
description = "Advanced Data Processing and Analytics Framework"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "ADPA Team", email = "info@adpa.io"}
]
maintainers = [
    {name = "ADPA Team", email = "info@adpa.io"}
]
keywords = [
    "data processing",
    "analytics",
    "machine learning",
    "artificial intelligence",
    "data science",
    "database",
    "sql",
    "async",
    "api"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Framework :: AsyncIO",
    "Framework :: Jupyter",
    "Framework :: FastAPI",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/adpa/adpa"
Documentation = "https://adpa.readthedocs.io/"
Repository = "https://github.com/adpa/adpa.git"
"Bug Tracker" = "https://github.com/adpa/adpa/issues"
"Release Notes" = "https://github.com/adpa/adpa/blob/main/CHANGELOG.md"

[project.optional-dependencies]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.8.0",
    "mkdocs-git-revision-date-plugin>=0.3.2"
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["adpa*"]
namespaces = true

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=adpa --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = ["tests/*", "setup.py"]

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # wrong-hanging-indentation
    "C0326",  # bad-whitespace
    "W0621",  # redefined-outer-name
    "W0108",  # unnecessary-lambda
    "W0612",  # unused-variable
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B404", "B603", "B607"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, lint, type
isolated_build = True

[testenv]
deps =
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
    pytest-xdist>=3.3.0
commands =
    pytest {posargs:tests}

[testenv:lint]
deps =
    black>=23.7.0
    isort>=5.12.0
    flake8>=6.1.0
    pylint>=2.17.0
    bandit>=1.7.0
commands =
    black .
    isort .
    flake8 .
    pylint src tests
    bandit -r src

[testenv:type]
deps =
    mypy>=1.4.0
    types-all
commands =
    mypy src tests
"""
