<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="13ee7ecf-b7d4-4f4a-b4a1-1dc2c6bc0314" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/texas_hold_em_utils/relative_ranking.py" beforeDir="false" afterPath="$PROJECT_DIR$/texas_hold_em_utils/relative_ranking.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2g1R57a11RcKOgOzbEqsXm06Dwf" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for test.test_card.test_greater_than.executor": "Run",
    "Python tests.Python tests for test_card.test_from_str.executor": "Run",
    "Python tests.Python tests for test_card.test_from_str_ten.executor": "Run",
    "Python tests.Python tests for test_card.test_greater_than.executor": "Run",
    "Python tests.Python tests for test_card.test_less_than.executor": "Run",
    "Python tests.Python tests for test_deck.test_all_cards_present.executor": "Run",
    "Python tests.Python tests for test_deck.test_new_draw.executor": "Run",
    "Python tests.Python tests for test_deck.test_shuffle.executor": "Run",
    "Python tests.Python tests for test_game.test_3_player_game_with_preflop_raise.executor": "Run",
    "Python tests.Python tests for test_game.test_determine_round_winners_all_in_one_winner.executor": "Run",
    "Python tests.Python tests for test_game.test_determine_round_winners_all_in_two_winner.executor": "Run",
    "Python tests.Python tests for test_game.test_determine_round_winners_best_folded.executor": "Run",
    "Python tests.Python tests for test_game.test_payout_1_winner.executor": "Run",
    "Python tests.Python tests for test_game.test_payout_even_split.executor": "Run",
    "Python tests.Python tests for test_game.test_payout_uneven_split.executor": "Run",
    "Python tests.Python tests for test_game.test_payout_winner_all_in.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_4_of_a_kind.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_flush.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_flush_no_flush.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_four_of_a_kind_not_found.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_full_house.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_full_house_no_pair.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_full_house_no_three_of_a_kind.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_full_house_not_found.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_high_card_hand.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_royal_flush_mismatched_suite.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_royal_flush_missing_facecard.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_royal_flush_true.executor": "Debug",
    "Python tests.Python tests for test_game_utils.test_find_single_pair.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_single_pair_no_pair.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_straight.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_straight_flush.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_straight_flush_missing_card.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_straight_flush_wrong_suite.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_straight_no_straight.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_three_of_a_kind.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_three_of_a_kind_no_three_of_a_kind.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_find_two_pair.executor": "Debug",
    "Python tests.Python tests for test_game_utils.test_find_two_pair_no_two_pair.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_get_card_counts_2_pair.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_get_card_counts_3_of_a_kind.executor": "Run",
    "Python tests.Python tests for test_game_utils.test_get_card_counts_all_diff.executor": "Run",
    "Python tests.Python tests for test_hands.test_compare_hands_diff_rank.executor": "Run",
    "Python tests.Python tests for test_hands.test_compare_hands_same_rank.executor": "Run",
    "Python tests.Python tests for test_hands.test_get_full_hand_rank.executor": "Run",
    "Python tests.Python tests for test_player.test_all_in_preflop_bad_hand.executor": "Run",
    "Python tests.Python tests for test_player.test_all_in_preflop_bad_hand_big_blind.executor": "Run",
    "Python tests.Python tests for test_player.test_all_in_preflop_but_its_post_flop.executor": "Run",
    "Python tests.Python tests for test_player.test_all_in_preflop_good_hand.executor": "Run",
    "Python tests.Python tests for test_player.test_limper_already_all_in.executor": "Run",
    "Python tests.Python tests for test_player.test_limper_bad_hand_postflop.executor": "Run",
    "Python tests.Python tests for test_player.test_limper_bad_hand_preflop.executor": "Run",
    "Python tests.Python tests for test_player.test_limper_bad_hand_preflop_variable.executor": "Run",
    "Python tests.Python tests for test_player.test_limper_good_hand_postflop.executor": "Run",
    "Python tests.Python tests for test_player.test_limper_good_hand_preflop.executor": "Run",
    "Python tests.Python tests for test_player.test_limper_no_bet.executor": "Run",
    "Python tests.Python tests for test_post_flop_stats_repository.test_get_percentile_flop_3_players.executor": "Debug",
    "Python tests.Python tests for test_preflop_stats_repository.test_get_win_rate.executor": "Debug",
    "Python tests.Python tests for test_preflop_stats_repository.test_preflop_stats_repository.executor": "Debug",
    "Python tests.Python tests for test_relative_ranking.test_card_in_false.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_card_in_true.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_missing_hand_card.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postflop_2_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postflop_3_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postriver_2_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postriver_3_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postturn_2_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postturn_3_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_preflop_2_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_preflop_3_player.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_too_many_community_cards.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_rank_hand_best_possible_4.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_rank_hand_best_possible_4_of_kind.executor": "Run",
    "Python tests.Python tests for test_relative_ranking.test_rank_hand_community_cards_best.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky.executor": "Debug",
    "Python tests.Python tests for test_sklansky.test_sklansky_1.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_1_ace_king_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_1_high_pair.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_2.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_2_j_a_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_2_q_a_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_2_q_k_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_2_tens.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_3.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_3_10_a_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_3_10_j_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_3_a_10_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_3_k_j_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_3_q_a_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_3_q_j_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_10_k_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_10_q_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_8s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_9_10_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_9_8_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_9_j_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_a_j_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_4_q_k_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_5.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_5_10_8_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_5_7_6_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_5_7_8_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_5_7_9_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_5_7s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_5_q_9_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_10_a_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_10_k_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_10_q_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_4_5_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_5s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_6_8_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_6s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_7_5_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_j_8_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_6_k_9_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_10_7_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_2s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_3s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_4_3_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_4s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_5_3_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_6_4_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_6_5_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_9_10_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_9_8_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_9_j_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_k_low_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_7_q_8_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_2_4_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_3_2_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_3_4_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_4_5_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_6_5_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_6_7_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_7_4_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_8_10_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_8_5_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_8_7_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_8_j_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_9_6_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_9_a.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_9_k_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_9_q_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_8_j_7_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_10_6_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_3_2_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_3_4_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_5_2_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_6_3_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_6_4_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_7_5_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_8_4_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_8_6_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_9_5_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_9_7_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_q_7_suited.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9_q_8_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_9s.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_j_10_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_j_k_off.executor": "Run",
    "Python tests.Python tests for test_sklansky.test_sklansky_j_q_off.executor": "Run",
    "Python.main.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "com.codeium.enabled": "true",
    "com.codeium.snoozedEndTime": "1727832264360",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Users/amarl/dev/poker/texas-hold-em/test",
    "settings.editor.selected.configurable": "com.codeium.AppSettingsConfigurable"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\amarl\dev\poker\texas-hold-em" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\amarl\dev\poker\texas-hold-em\test" />
      <recent name="C:\Users\amarl\dev\python\texas-hold-em" />
      <recent name="C:\Users\amarl\dev\python\texas-hold-em\src" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for test_hands.test_get_full_hand_rank">
    <configuration name="Python tests for test_card.test_from_str" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="texas-hold-em" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_card.test_from_str&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_card.test_from_str_ten" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="texas-hold-em" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_card.test_from_str_ten&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_hands.test_get_full_hand_rank" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="texas-hold-em" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_hands.test_get_full_hand_rank&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_relative_ranking.test_get_hand_rank_details_postflop_3_player" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="texas-hold-em" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_relative_ranking.test_get_hand_rank_details_postflop_3_player&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_relative_ranking.test_get_hand_rank_details_postturn_2_player" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="texas-hold-em" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_relative_ranking.test_get_hand_rank_details_postturn_2_player&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_hands.test_get_full_hand_rank" />
        <item itemvalue="Python tests.Python tests for test_card.test_from_str_ten" />
        <item itemvalue="Python tests.Python tests for test_card.test_from_str" />
        <item itemvalue="Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postturn_2_player" />
        <item itemvalue="Python tests.Python tests for test_relative_ranking.test_get_hand_rank_details_postflop_3_player" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-975db3bf15a3-31b6be0877a2-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.18034.82" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="13ee7ecf-b7d4-4f4a-b4a1-1dc2c6bc0314" name="Changes" comment="" />
      <created>1714862910673</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714862910673</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/test_sklansky.py</url>
          <line>13</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/test_game_utils.py</url>
          <line>78</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/test_game.py</url>
          <line>100</line>
          <option name="timeStamp" value="17" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/texas_hold_em_utils/player.py</url>
          <line>148</line>
          <option name="timeStamp" value="20" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/test_preflop_stats_repository.py</url>
          <line>7</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/test_post_flop_stats_repository.py</url>
          <line>8</line>
          <option name="timeStamp" value="22" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/test_hands.py</url>
          <line>59</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>