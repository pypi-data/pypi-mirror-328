# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from dima_test_sdk.models.eor_termination_request_request_used_time_off_time_offs_inner import EorTerminationRequestRequestUsedTimeOffTimeOffsInner
from typing import Optional, Set
from typing_extensions import Self

class EorResignationRequestRequestUsedTimeOff(BaseModel):
    """
    EorResignationRequestRequestUsedTimeOff
    """ # noqa: E501
    time_offs: Optional[List[EorTerminationRequestRequestUsedTimeOffTimeOffsInner]] = Field(default=None, description="All time-off used by the employee during contract period")
    additional_details: Optional[StrictStr] = Field(default=None, description="Any additional details regarding time off that HRX should know")
    is_deel_pto_confirmed: Optional[StrictBool] = Field(default=None, description="Defines whether the client agrees with the time off values that are registered in Deel. If false, it means that the client changed the values.")
    __properties: ClassVar[List[str]] = ["time_offs", "additional_details", "is_deel_pto_confirmed"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of EorResignationRequestRequestUsedTimeOff from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in time_offs (list)
        _items = []
        if self.time_offs:
            for _item_time_offs in self.time_offs:
                if _item_time_offs:
                    _items.append(_item_time_offs.to_dict())
            _dict['time_offs'] = _items
        # set to None if additional_details (nullable) is None
        # and model_fields_set contains the field
        if self.additional_details is None and "additional_details" in self.model_fields_set:
            _dict['additional_details'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of EorResignationRequestRequestUsedTimeOff from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "time_offs": [EorTerminationRequestRequestUsedTimeOffTimeOffsInner.from_dict(_item) for _item in obj["time_offs"]] if obj.get("time_offs") is not None else None,
            "additional_details": obj.get("additional_details"),
            "is_deel_pto_confirmed": obj.get("is_deel_pto_confirmed")
        })
        return _obj


