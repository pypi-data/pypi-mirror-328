# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.create_adjustment201_response import CreateAdjustment201Response

class TestCreateAdjustment201Response(unittest.TestCase):
    """CreateAdjustment201Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAdjustment201Response:
        """Test CreateAdjustment201Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAdjustment201Response`
        """
        model = CreateAdjustment201Response()
        if include_optional:
            return CreateAdjustment201Response(
                data = dima_test_sdk.models.create_adjustment_201_response_data.createAdjustment_201_response_data(
                    id = '123e4567-e89b-12d3-a456-426614174000', 
                    file = dima_test_sdk.models.create_adjustment_201_response_data_file.createAdjustment_201_response_data_file(
                        id = '123e4567-e89b-12d3-a456-426614174000', 
                        name = 'your_file_name', 
                        file_type = 'pdf', ), 
                    title = 'Your title here', 
                    amount = '1234.56', 
                    status = 'open', 
                    created_at = '2020-11-02T12:00Z', 
                    updated_at = '2020-11-02T12:00Z', 
                    contract_id = 'm3jk2j', 
                    description = 'Your description here', 
                    cycle_reference = 'your_cycle_reference', 
                    move_next_cycle = True, 
                    date_of_adjustment = 'Thu Nov 02 01:00:00 CET 2023', 
                    actual_end_cycle_date = '2023-11-15T00:00:00.000Z', 
                    adjustment_category_id = 'c9cf4c2c0165f48f494415390c3b49', 
                    actual_start_cycle_date = '2023-11-01T00:00:00.000Z', )
            )
        else:
            return CreateAdjustment201Response(
                data = dima_test_sdk.models.create_adjustment_201_response_data.createAdjustment_201_response_data(
                    id = '123e4567-e89b-12d3-a456-426614174000', 
                    file = dima_test_sdk.models.create_adjustment_201_response_data_file.createAdjustment_201_response_data_file(
                        id = '123e4567-e89b-12d3-a456-426614174000', 
                        name = 'your_file_name', 
                        file_type = 'pdf', ), 
                    title = 'Your title here', 
                    amount = '1234.56', 
                    status = 'open', 
                    created_at = '2020-11-02T12:00Z', 
                    updated_at = '2020-11-02T12:00Z', 
                    contract_id = 'm3jk2j', 
                    description = 'Your description here', 
                    cycle_reference = 'your_cycle_reference', 
                    move_next_cycle = True, 
                    date_of_adjustment = 'Thu Nov 02 01:00:00 CET 2023', 
                    actual_end_cycle_date = '2023-11-15T00:00:00.000Z', 
                    adjustment_category_id = 'c9cf4c2c0165f48f494415390c3b49', 
                    actual_start_cycle_date = '2023-11-01T00:00:00.000Z', ),
        )
        """

    def testCreateAdjustment201Response(self):
        """Test CreateAdjustment201Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
