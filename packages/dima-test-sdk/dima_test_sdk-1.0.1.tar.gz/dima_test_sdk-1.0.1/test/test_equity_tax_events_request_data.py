# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.equity_tax_events_request_data import EquityTaxEventsRequestData

class TestEquityTaxEventsRequestData(unittest.TestCase):
    """EquityTaxEventsRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EquityTaxEventsRequestData:
        """Test EquityTaxEventsRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EquityTaxEventsRequestData`
        """
        model = EquityTaxEventsRequestData()
        if include_optional:
            return EquityTaxEventsRequestData(
                fx_rate = 0.95904862,
                tax_rate = 0.25,
                unit_fmv = 11,
                contract_d = 'meyv8ek',
                event_date = 'Mon Apr 01 02:00:00 CEST 2024',
                sale_price = 10,
                gross_value = 100000,
                plan_currency = 'USD',
                exercise_price = 4.34,
                equity_grant_id = '76c90748-f83c-4e4f-9c37-34c4d02d6406',
                settlement_date = 'Sat Jun 01 02:00:00 CEST 2024',
                payroll_currency = 'EUR',
                tax_jurisdiction = 'US',
                transaction_fees = 25,
                quantity_remaining = 5000,
                taxable_gain_or_loss = 15000,
                total_exercise_price = 225000,
                total_taxes_withheld = 1000,
                method_of_tax_coverage = 'WITHHELD_AT_SOURCE',
                quantity_withheld_or_sold = 5000,
                withheld_tax_local_currency = 959.05,
                benefit_in_kind_local_currency = 14385.73,
                quantity_exercised_or_released = 10000
            )
        else:
            return EquityTaxEventsRequestData(
                fx_rate = 0.95904862,
                plan_currency = 'USD',
                settlement_date = 'Sat Jun 01 02:00:00 CEST 2024',
                payroll_currency = 'EUR',
                tax_jurisdiction = 'US',
                taxable_gain_or_loss = 15000,
                total_taxes_withheld = 1000,
                method_of_tax_coverage = 'WITHHELD_AT_SOURCE',
                withheld_tax_local_currency = 959.05,
                benefit_in_kind_local_currency = 14385.73,
        )
        """

    def testEquityTaxEventsRequestData(self):
        """Test EquityTaxEventsRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
