# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.get_benefit_employee200_response_contracts_inner_compensations_inner import GetBenefitEmployee200ResponseContractsInnerCompensationsInner

class TestGetBenefitEmployee200ResponseContractsInnerCompensationsInner(unittest.TestCase):
    """GetBenefitEmployee200ResponseContractsInnerCompensationsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetBenefitEmployee200ResponseContractsInnerCompensationsInner:
        """Test GetBenefitEmployee200ResponseContractsInnerCompensationsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetBenefitEmployee200ResponseContractsInnerCompensationsInner`
        """
        model = GetBenefitEmployee200ResponseContractsInnerCompensationsInner()
        if include_optional:
            return GetBenefitEmployee200ResponseContractsInnerCompensationsInner(
                rate = 1000,
                type = 'MAIN',
                scale = 'hourly',
                currency = 'USD',
                cycle_scale = 'hour',
                variable_compensation_type = 'FIXED'
            )
        else:
            return GetBenefitEmployee200ResponseContractsInnerCompensationsInner(
        )
        """

    def testGetBenefitEmployee200ResponseContractsInnerCompensationsInner(self):
        """Test GetBenefitEmployee200ResponseContractsInnerCompensationsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
