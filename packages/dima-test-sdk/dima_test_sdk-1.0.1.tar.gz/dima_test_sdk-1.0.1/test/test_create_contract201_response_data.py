# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.create_contract201_response_data import CreateContract201ResponseData

class TestCreateContract201ResponseData(unittest.TestCase):
    """CreateContract201ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateContract201ResponseData:
        """Test CreateContract201ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateContract201ResponseData`
        """
        model = CreateContract201ResponseData()
        if include_optional:
            return CreateContract201ResponseData(
                id = '00000000-0000-0000-0000-000000000000',
                type = 'time_based',
                quote = dima_test_sdk.models.create_contract_201_response_data_quote.createContract_201_response_data_quote(
                    benefits = [
                        dima_test_sdk.models.create_contract_201_response_data_quote_benefits_inner.createContract_201_response_data_quote_benefits_inner(
                            fee = 100, 
                            name = 'Health Insurance', 
                            plan = 'Basic', 
                            price = 100, 
                            fee_usd = 100, 
                            currency = 'GBP', 
                            price_usd = 100, )
                        ], 
                    currency = 'GBP', 
                    cba_total = 900.00, 
                    created_at = 'Fri Dec 31 01:00:00 CET 1999', 
                    updated_at = 'Fri Dec 31 01:00:00 CET 1999', 
                    salary_total = 900.00, 
                    annual_salary = 900.00, 
                    cba_total_usd = 900.00, 
                    breakdown_costs = dima_test_sdk.models.create_contract_201_response_data_quote_breakdown_costs.createContract_201_response_data_quote_breakdown_costs(
                        monthly = dima_test_sdk.models.create_contract_201_response_data_quote_breakdown_costs_monthly.createContract_201_response_data_quote_breakdown_costs_monthly(
                            costs = [
                                dima_test_sdk.models.create_contract_201_response_data_quote_breakdown_costs_monthly_costs_inner.createContract_201_response_data_quote_breakdown_costs_monthly_costs_inner(
                                    name = 'Health Insurance', 
                                    total = 50, 
                                    currency = 'GBP', 
                                    total_usd = 50, )
                                ], 
                            total = 900, 
                            total_usd = 900, ), ), 
                    salary_total_usd = 900.00, 
                    gross_salary_total = 900.00, 
                    mobility_fee_total = 900.00, 
                    monthly_cost_total = 900.00, 
                    platform_fee_total = 900.00, 
                    employer_cost_total = 900.00, 
                    gross_salary_total_usd = 900.00, 
                    mobility_fee_total_usd = 900.00, 
                    monthly_cost_total_usd = 900.00, 
                    platform_fee_total_usd = 900.00, 
                    employer_cost_total_usd = 900.00, 
                    severance_accrual_total = 900.00, 
                    recurring_allowance_total = 900.00, 
                    severance_accrual_total_usd = 900.00, 
                    recurring_allowance_total_usd = 900.00, ),
                title = '0',
                client = dima_test_sdk.models.create_contract_201_response_data_client.createContract_201_response_data_client(
                    id = '00000000-0000-0000-0000-000000000000', 
                    team = dima_test_sdk.models.create_contract_201_response_data_client_team.createContract_201_response_data_client_team(
                        id = '00000000-0000-0000-0000-000000000000', 
                        name = '', ), 
                    email = 'test@example.com', 
                    full_name = 'John Doe', 
                    legal_entity = dima_test_sdk.models.create_contract_201_response_data_client_legal_entity.createContract_201_response_data_client_legal_entity(
                        id = '00000000-0000-0000-0000-000000000000', 
                        name = 'John Doe', 
                        type = 'company', 
                        email = 'test@example.com', 
                        subtype = 'LLC', 
                        vat_number = '12345678', 
                        registration_number = '12345678', ), ),
                status = 'new',
                worker = dima_test_sdk.models.create_contract_201_response_data_worker.createContract_201_response_data_worker(
                    id = '00000000-0000-0000-0000-000000000000', 
                    email = 'test@example.com', 
                    image = 'https://example.com/image.jpg', 
                    country = 'US', 
                    full_name = 'John Doe', 
                    last_name = 'Doe', 
                    first_name = 'John', 
                    nationality = 'US', 
                    legal_entity = dima_test_sdk.models.create_contract_201_response_data_worker_legal_entity.createContract_201_response_data_worker_legal_entity(
                        type = 'company', 
                        personal_name = 'John Doe', 
                        registration_number = '12345678', ), 
                    date_of_birth = '2022-05-24T09:38:46.235Z', 
                    expected_email = 'test@example.com', 
                    alternate_email = [
                        dima_test_sdk.models.root_schema.Root Schema(
                            email = 'test@example.com', 
                            is_verified = True, )
                        ], ),
                job_title = '',
                seniority = dima_test_sdk.models.create_contract_201_response_data_seniority.createContract_201_response_data_seniority(
                    id = 123456, 
                    name = 'Mid (Individual Contributor Level 2)', 
                    level = 2, ),
                created_at = '2022-05-24T09:38:46.235Z',
                signatures = dima_test_sdk.models.create_contract_201_response_data_signatures.createContract_201_response_data_signatures(
                    signed_at = '2022-05-24T09:38:46.235Z', 
                    client_signature = 'John Doe', 
                    client_signed_at = '2022-05-24T09:38:46.235Z', 
                    worker_signature = 'John Doe', 
                    worker_signed_at = '2022-05-24T09:38:46.235Z', ),
                start_date = '2022-05-24T09:38:46.235Z',
                external_id = '00000000-0000-0000-0000-000000000000',
                invitations = dima_test_sdk.models.create_contract_201_response_data_invitations.createContract_201_response_data_invitations(
                    client_email = 'test@example.com', 
                    worker_email = 'test@example.com', ),
                is_archived = False,
                who_reports = 'both',
                custom_fields = [
                    dima_test_sdk.models.create_contract_201_response_data_custom_fields_inner.createContract_201_response_data_custom_fields_inner(
                        name = 'Employee ID', 
                        value = '54234', )
                    ],
                notice_period = 15,
                scope_of_work = 'Software development',
                special_clause = 'Special clause',
                termination_date = '2022-05-24T09:38:46.235Z',
                employment_details = dima_test_sdk.models.create_contract_201_response_data_employment_details.createContract_201_response_data_employment_details(
                    type = '', 
                    state = 'CO', 
                    country = 'US', 
                    days_per_week = 5, 
                    hours_per_day = 8, 
                    probation_period = 30, 
                    paid_vacation_days = 20, ),
                compensation_details = dima_test_sdk.models.create_contract_201_response_data_compensation_details.createContract_201_response_data_compensation_details(
                    scale = 'hourly', 
                    amount = '100.00', 
                    frequency = 'monthly', 
                    currency_code = 'GBP', 
                    first_payment = '2022-05-24T09:38:46.235Z', 
                    first_payment_date = '2022-05-24T09:38:46.235Z', 
                    gross_annual_salary = '100.00', 
                    gross_signing_bonus = '100.00', 
                    gross_variable_bonus = '100.00', )
            )
        else:
            return CreateContract201ResponseData(
                id = '00000000-0000-0000-0000-000000000000',
                type = 'time_based',
                title = '0',
                client = dima_test_sdk.models.create_contract_201_response_data_client.createContract_201_response_data_client(
                    id = '00000000-0000-0000-0000-000000000000', 
                    team = dima_test_sdk.models.create_contract_201_response_data_client_team.createContract_201_response_data_client_team(
                        id = '00000000-0000-0000-0000-000000000000', 
                        name = '', ), 
                    email = 'test@example.com', 
                    full_name = 'John Doe', 
                    legal_entity = dima_test_sdk.models.create_contract_201_response_data_client_legal_entity.createContract_201_response_data_client_legal_entity(
                        id = '00000000-0000-0000-0000-000000000000', 
                        name = 'John Doe', 
                        type = 'company', 
                        email = 'test@example.com', 
                        subtype = 'LLC', 
                        vat_number = '12345678', 
                        registration_number = '12345678', ), ),
                status = 'new',
                worker = dima_test_sdk.models.create_contract_201_response_data_worker.createContract_201_response_data_worker(
                    id = '00000000-0000-0000-0000-000000000000', 
                    email = 'test@example.com', 
                    image = 'https://example.com/image.jpg', 
                    country = 'US', 
                    full_name = 'John Doe', 
                    last_name = 'Doe', 
                    first_name = 'John', 
                    nationality = 'US', 
                    legal_entity = dima_test_sdk.models.create_contract_201_response_data_worker_legal_entity.createContract_201_response_data_worker_legal_entity(
                        type = 'company', 
                        personal_name = 'John Doe', 
                        registration_number = '12345678', ), 
                    date_of_birth = '2022-05-24T09:38:46.235Z', 
                    expected_email = 'test@example.com', 
                    alternate_email = [
                        dima_test_sdk.models.root_schema.Root Schema(
                            email = 'test@example.com', 
                            is_verified = True, )
                        ], ),
                job_title = '',
                created_at = '2022-05-24T09:38:46.235Z',
                signatures = dima_test_sdk.models.create_contract_201_response_data_signatures.createContract_201_response_data_signatures(
                    signed_at = '2022-05-24T09:38:46.235Z', 
                    client_signature = 'John Doe', 
                    client_signed_at = '2022-05-24T09:38:46.235Z', 
                    worker_signature = 'John Doe', 
                    worker_signed_at = '2022-05-24T09:38:46.235Z', ),
                start_date = '2022-05-24T09:38:46.235Z',
                invitations = dima_test_sdk.models.create_contract_201_response_data_invitations.createContract_201_response_data_invitations(
                    client_email = 'test@example.com', 
                    worker_email = 'test@example.com', ),
                is_archived = False,
                special_clause = 'Special clause',
                termination_date = '2022-05-24T09:38:46.235Z',
                employment_details = dima_test_sdk.models.create_contract_201_response_data_employment_details.createContract_201_response_data_employment_details(
                    type = '', 
                    state = 'CO', 
                    country = 'US', 
                    days_per_week = 5, 
                    hours_per_day = 8, 
                    probation_period = 30, 
                    paid_vacation_days = 20, ),
                compensation_details = dima_test_sdk.models.create_contract_201_response_data_compensation_details.createContract_201_response_data_compensation_details(
                    scale = 'hourly', 
                    amount = '100.00', 
                    frequency = 'monthly', 
                    currency_code = 'GBP', 
                    first_payment = '2022-05-24T09:38:46.235Z', 
                    first_payment_date = '2022-05-24T09:38:46.235Z', 
                    gross_annual_salary = '100.00', 
                    gross_signing_bonus = '100.00', 
                    gross_variable_bonus = '100.00', ),
        )
        """

    def testCreateContract201ResponseData(self):
        """Test CreateContract201ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
