# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.get_invoice_adjustments_by_contract_id200_response import GetInvoiceAdjustmentsByContractId200Response

class TestGetInvoiceAdjustmentsByContractId200Response(unittest.TestCase):
    """GetInvoiceAdjustmentsByContractId200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetInvoiceAdjustmentsByContractId200Response:
        """Test GetInvoiceAdjustmentsByContractId200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetInvoiceAdjustmentsByContractId200Response`
        """
        model = GetInvoiceAdjustmentsByContractId200Response()
        if include_optional:
            return GetInvoiceAdjustmentsByContractId200Response(
                data = [
                    dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_data_inner.getInvoiceAdjustmentsByContractId_200_response_data_inner(
                        id = '', 
                        type = 'accrued_holiday', 
                        scale = '', 
                        status = 'approved', 
                        contract = dima_test_sdk.models.get_timesheets_by_contract_200_response_data_inner_contract.getTimesheetsByContract_200_response_data_inner_contract(
                            id = '', 
                            type = 'ongoing_time_based', 
                            title = '', ), 
                        quantity = 1.337, 
                        worksheet = dima_test_sdk.models.get_timesheets_by_contract_200_response_data_inner_worksheet.getTimesheetsByContract_200_response_data_inner_worksheet(
                            days = 0, 
                            hours = 0, 
                            weeks = 0, 
                            minutes = 0, ), 
                        attachment = dima_test_sdk.models.add_contract_document_201_response_data.addContractDocument_201_response_data(
                            key = '', 
                            filename = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        invoice_id = 1.337, 
                        description = '', 
                        reported_by = dima_test_sdk.models.get_timesheet_by_id_200_response_data_all_of_reported_by.getTimesheetById_200_response_data_allOf_reported_by(
                            id = null, 
                            full_name = '', ), 
                        reviewed_by = dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_data_inner_reviewed_by.getInvoiceAdjustmentsByContractId_200_response_data_inner_reviewed_by(
                            id = null, 
                            remarks = '', 
                            full_name = 'Jane Smith', 
                            reviewed_at = '', ), 
                        custom_scale = '', 
                        total_amount = '', 
                        currency_code = 'AEI012', 
                        payment_cycle = dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_data_inner_payment_cycle.getInvoiceAdjustmentsByContractId_200_response_data_inner_payment_cycle(
                            end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        date_submitted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                page = dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_page.getInvoiceAdjustmentsByContractId_200_response_page(
                    offset = 0, 
                    total_rows = 10, 
                    items_per_page = 10, )
            )
        else:
            return GetInvoiceAdjustmentsByContractId200Response(
                data = [
                    dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_data_inner.getInvoiceAdjustmentsByContractId_200_response_data_inner(
                        id = '', 
                        type = 'accrued_holiday', 
                        scale = '', 
                        status = 'approved', 
                        contract = dima_test_sdk.models.get_timesheets_by_contract_200_response_data_inner_contract.getTimesheetsByContract_200_response_data_inner_contract(
                            id = '', 
                            type = 'ongoing_time_based', 
                            title = '', ), 
                        quantity = 1.337, 
                        worksheet = dima_test_sdk.models.get_timesheets_by_contract_200_response_data_inner_worksheet.getTimesheetsByContract_200_response_data_inner_worksheet(
                            days = 0, 
                            hours = 0, 
                            weeks = 0, 
                            minutes = 0, ), 
                        attachment = dima_test_sdk.models.add_contract_document_201_response_data.addContractDocument_201_response_data(
                            key = '', 
                            filename = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        invoice_id = 1.337, 
                        description = '', 
                        reported_by = dima_test_sdk.models.get_timesheet_by_id_200_response_data_all_of_reported_by.getTimesheetById_200_response_data_allOf_reported_by(
                            id = null, 
                            full_name = '', ), 
                        reviewed_by = dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_data_inner_reviewed_by.getInvoiceAdjustmentsByContractId_200_response_data_inner_reviewed_by(
                            id = null, 
                            remarks = '', 
                            full_name = 'Jane Smith', 
                            reviewed_at = '', ), 
                        custom_scale = '', 
                        total_amount = '', 
                        currency_code = 'AEI012', 
                        payment_cycle = dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_data_inner_payment_cycle.getInvoiceAdjustmentsByContractId_200_response_data_inner_payment_cycle(
                            end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        date_submitted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                page = dima_test_sdk.models.get_invoice_adjustments_by_contract_id_200_response_page.getInvoiceAdjustmentsByContractId_200_response_page(
                    offset = 0, 
                    total_rows = 10, 
                    items_per_page = 10, ),
        )
        """

    def testGetInvoiceAdjustmentsByContractId200Response(self):
        """Test GetInvoiceAdjustmentsByContractId200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
