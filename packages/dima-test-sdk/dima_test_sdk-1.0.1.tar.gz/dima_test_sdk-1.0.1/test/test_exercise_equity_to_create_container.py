# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.exercise_equity_to_create_container import ExerciseEquityToCreateContainer

class TestExerciseEquityToCreateContainer(unittest.TestCase):
    """ExerciseEquityToCreateContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExerciseEquityToCreateContainer:
        """Test ExerciseEquityToCreateContainer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExerciseEquityToCreateContainer`
        """
        model = ExerciseEquityToCreateContainer()
        if include_optional:
            return ExerciseEquityToCreateContainer(
                fmv = '',
                quantity = 1.337,
                issuer_id = '',
                worker_id = '',
                address_zip = '',
                exercise_id = '',
                address_city = '',
                address_state = '',
                address_street = '',
                stakeholder_id = '',
                address_country = '',
                option_grant_id = '',
                fmv_currency_code = '',
                stakeholder_email = '',
                option_grant_issue = '',
                option_grant_label = '',
                option_grant_currency = '',
                option_grant_issue_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                option_grant_expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                stakeholder_relationship = '',
                option_grant_strike_price = ''
            )
        else:
            return ExerciseEquityToCreateContainer(
                fmv = '',
                quantity = 1.337,
                issuer_id = '',
                worker_id = '',
                address_zip = '',
                exercise_id = '',
                address_city = '',
                address_state = '',
                address_street = '',
                stakeholder_id = '',
                address_country = '',
                option_grant_id = '',
                fmv_currency_code = '',
                stakeholder_email = '',
                option_grant_issue = '',
                option_grant_label = '',
                option_grant_currency = '',
                option_grant_issue_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                option_grant_expiry_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                stakeholder_relationship = '',
                option_grant_strike_price = '',
        )
        """

    def testExerciseEquityToCreateContainer(self):
        """Test ExerciseEquityToCreateContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
