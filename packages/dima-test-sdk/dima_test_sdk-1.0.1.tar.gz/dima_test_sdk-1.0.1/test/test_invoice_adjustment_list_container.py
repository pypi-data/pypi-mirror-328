# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.invoice_adjustment_list_container import InvoiceAdjustmentListContainer

class TestInvoiceAdjustmentListContainer(unittest.TestCase):
    """InvoiceAdjustmentListContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoiceAdjustmentListContainer:
        """Test InvoiceAdjustmentListContainer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceAdjustmentListContainer`
        """
        model = InvoiceAdjustmentListContainer()
        if include_optional:
            return InvoiceAdjustmentListContainer(
                data = [
                    dima_test_sdk.models.basic_invoice_adjustment.BasicInvoiceAdjustment(
                        id = '00000000-0000-0000-0000-000000000000', 
                        type = 'accrued_holiday', 
                        status = 'approved', 
                        description = '', 
                        date_submitted = '2022-05-24T09:38:46.235Z', 
                        currency_code = 'GBP', 
                        invoice_id = 1.337, 
                        quantity = 1, 
                        total_amount = '200.0000', 
                        created_at = '2022-05-24T09:38:46.235Z', 
                        scale = 'custom', 
                        custom_scale = '', 
                        attachment = dima_test_sdk.models.file_attachment_info.FileAttachmentInfo(
                            filename = '', 
                            key = '', ), 
                        worksheet = dima_test_sdk.models.basic_timesheet_worksheet.BasicTimesheet_worksheet(
                            weeks = 0, 
                            days = 0, 
                            hours = 1, 
                            minutes = 0, ), 
                        reviewed_by = dima_test_sdk.models.basic_timesheet_reviewed_by.BasicTimesheet_reviewed_by(
                            id = '00000000-0000-0000-0000-000000000000', 
                            full_name = 'Jane Smith', 
                            reviewed_at = '2022-05-04T03:45:27.899Z', 
                            remarks = '', ), 
                        contract = dima_test_sdk.models.basic_timesheet_contract.BasicTimesheet_contract(
                            id = '', 
                            title = '', 
                            type = 'ongoing_time_based', ), 
                        payment_cycle = dima_test_sdk.models.basic_invoice_adjustment_payment_cycle.BasicInvoiceAdjustment_payment_cycle(
                            start_date = '2022-05-24T09:38:46.235Z', 
                            end_date = '2022-05-24T09:38:46.235Z', ), 
                        reported_by = dima_test_sdk.models.basic_timesheet_reported_by.BasicTimesheet_reported_by(
                            id = , 
                            full_name = 'John Smith', ), )
                    ],
                page = dima_test_sdk.models.page_info_without_cursor_new.PageInfoWithoutCursorNew(
                    total_rows = 1.337, 
                    items_per_page = 1, 
                    offset = 0, )
            )
        else:
            return InvoiceAdjustmentListContainer(
                data = [
                    dima_test_sdk.models.basic_invoice_adjustment.BasicInvoiceAdjustment(
                        id = '00000000-0000-0000-0000-000000000000', 
                        type = 'accrued_holiday', 
                        status = 'approved', 
                        description = '', 
                        date_submitted = '2022-05-24T09:38:46.235Z', 
                        currency_code = 'GBP', 
                        invoice_id = 1.337, 
                        quantity = 1, 
                        total_amount = '200.0000', 
                        created_at = '2022-05-24T09:38:46.235Z', 
                        scale = 'custom', 
                        custom_scale = '', 
                        attachment = dima_test_sdk.models.file_attachment_info.FileAttachmentInfo(
                            filename = '', 
                            key = '', ), 
                        worksheet = dima_test_sdk.models.basic_timesheet_worksheet.BasicTimesheet_worksheet(
                            weeks = 0, 
                            days = 0, 
                            hours = 1, 
                            minutes = 0, ), 
                        reviewed_by = dima_test_sdk.models.basic_timesheet_reviewed_by.BasicTimesheet_reviewed_by(
                            id = '00000000-0000-0000-0000-000000000000', 
                            full_name = 'Jane Smith', 
                            reviewed_at = '2022-05-04T03:45:27.899Z', 
                            remarks = '', ), 
                        contract = dima_test_sdk.models.basic_timesheet_contract.BasicTimesheet_contract(
                            id = '', 
                            title = '', 
                            type = 'ongoing_time_based', ), 
                        payment_cycle = dima_test_sdk.models.basic_invoice_adjustment_payment_cycle.BasicInvoiceAdjustment_payment_cycle(
                            start_date = '2022-05-24T09:38:46.235Z', 
                            end_date = '2022-05-24T09:38:46.235Z', ), 
                        reported_by = dima_test_sdk.models.basic_timesheet_reported_by.BasicTimesheet_reported_by(
                            id = , 
                            full_name = 'John Smith', ), )
                    ],
                page = dima_test_sdk.models.page_info_without_cursor_new.PageInfoWithoutCursorNew(
                    total_rows = 1.337, 
                    items_per_page = 1, 
                    offset = 0, ),
        )
        """

    def testInvoiceAdjustmentListContainer(self):
        """Test InvoiceAdjustmentListContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
