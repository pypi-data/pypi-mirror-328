# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.eor_termination_request_request import EorTerminationRequestRequest

class TestEorTerminationRequestRequest(unittest.TestCase):
    """EorTerminationRequestRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EorTerminationRequestRequest:
        """Test EorTerminationRequestRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EorTerminationRequestRequest`
        """
        model = EorTerminationRequestRequest()
        if include_optional:
            return EorTerminationRequestRequest(
                reason = 'PERFORMANCE_ISSUES',
                attachments = [
                    dima_test_sdk.models.eor_termination_request_request_attachments_inner.eorTerminationRequest_request_attachments_inner(
                        key = '', 
                        file_name = '.png', )
                    ],
                is_sensitive = False,
                reason_detail = 'This decision to terminate employment is based on an unsatisfactory level of job performance despite documented efforts to provide support and improvement opportunities.',
                used_time_off = {"time_offs":[{"unit":"CALENDAR_DAY","policy_type":"Vacation","tracking_periods":[{"used":25,"end_date":"2024-12-31T00:00:00.000Z","start_date":"2024-01-01T00:00:00.000Z"},{"used":30,"end_date":"2023-12-31T00:00:00.000Z","start_date":"2023-01-01T00:00:00.000Z"}],"scheduled_until_end_date":5}],"additional_details":"Any additional details regarding time off that HRX should know","is_deel_pto_confirmed":true},
                severance_type = 'CASH',
                desired_end_date = '2025-01-31',
                severance_amount = 1000,
                additional_reason = 'DISSATISFIED_WITH_DEEL_PRODUCT',
                termination_notes = ["What severance pay, if any, am I entitled to receive upon termination of this contract?","How will accrued vacation time, sick leave, or other paid time off be handled upon termination of this contract?"],
                eligible_for_rehire = 'DONT_KNOW',
                eor_country_data_id = 1234,
                is_employee_notified = False,
                termination_impact_id = '',
                additional_country_data = [{"answer":false,"question":"Will the employee be released from duties during the notice period?"},{"answer":false,"question":"Is there any discount to apply to the employee?"}],
                custom_termination_reason_id = '',
                employee_notification_detail = '0',
                additional_supporting_documents = [{"key":"qwerqweadcasdfad","file_name":"file-name.pdf"}]
            )
        else:
            return EorTerminationRequestRequest(
                reason = 'PERFORMANCE_ISSUES',
                reason_detail = 'This decision to terminate employment is based on an unsatisfactory level of job performance despite documented efforts to provide support and improvement opportunities.',
                used_time_off = {"time_offs":[{"unit":"CALENDAR_DAY","policy_type":"Vacation","tracking_periods":[{"used":25,"end_date":"2024-12-31T00:00:00.000Z","start_date":"2024-01-01T00:00:00.000Z"},{"used":30,"end_date":"2023-12-31T00:00:00.000Z","start_date":"2023-01-01T00:00:00.000Z"}],"scheduled_until_end_date":5}],"additional_details":"Any additional details regarding time off that HRX should know","is_deel_pto_confirmed":true},
                is_employee_notified = False,
        )
        """

    def testEorTerminationRequestRequest(self):
        """Test EorTerminationRequestRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
