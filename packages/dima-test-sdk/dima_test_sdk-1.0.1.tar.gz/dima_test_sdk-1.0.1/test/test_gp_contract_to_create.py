# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.gp_contract_to_create import GPContractToCreate

class TestGPContractToCreate(unittest.TestCase):
    """GPContractToCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GPContractToCreate:
        """Test GPContractToCreate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GPContractToCreate`
        """
        model = GPContractToCreate()
        if include_optional:
            return GPContractToCreate(
                employee = dima_test_sdk.models.gp_contract_to_create_employee.GPContractToCreate_employee(
                    first_name = 'Jane', 
                    last_name = 'Doe', 
                    email = '01234', 
                    work_email = '01234', 
                    nationality = 'US', 
                    employee_number = '100', 
                    address = dima_test_sdk.models.gp_contract_to_create_employee_address.GPContractToCreate_employee_address(
                        street = 'Deel Street 500', 
                        city = 'Denver', 
                        state = 'CO', 
                        zip = '44000', 
                        country = 'US', ), ),
                employment = dima_test_sdk.models.gp_contract_to_create_employment.GPContractToCreate_employment(
                    type = 'Full-time', 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    holidays = dima_test_sdk.models.gp_contract_to_create_employment_holidays.GPContractToCreate_employment_holidays(
                        allowance = 1.337, 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), ),
                job_title = '',
                client = dima_test_sdk.models.gp_client.GPClient(
                    legal_entity = dima_test_sdk.models.gp_client_legal_entity.GPClient_legal_entity(
                        id = '00000000-0000-0000-0000-000000000000', ), 
                    team = dima_test_sdk.models.eor_contract_to_create_client_team.EorContractToCreate_client_team(
                        id = '00000000-0000-0000-0000-000000000000', ), ),
                compensation_details = dima_test_sdk.models.gp_contract_to_create_compensation_details.GPContractToCreate_compensation_details(
                    scale = 'YEAR', 
                    salary = 1.337, 
                    currency = 'GBP', )
            )
        else:
            return GPContractToCreate(
                employee = dima_test_sdk.models.gp_contract_to_create_employee.GPContractToCreate_employee(
                    first_name = 'Jane', 
                    last_name = 'Doe', 
                    email = '01234', 
                    work_email = '01234', 
                    nationality = 'US', 
                    employee_number = '100', 
                    address = dima_test_sdk.models.gp_contract_to_create_employee_address.GPContractToCreate_employee_address(
                        street = 'Deel Street 500', 
                        city = 'Denver', 
                        state = 'CO', 
                        zip = '44000', 
                        country = 'US', ), ),
                employment = dima_test_sdk.models.gp_contract_to_create_employment.GPContractToCreate_employment(
                    type = 'Full-time', 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    holidays = dima_test_sdk.models.gp_contract_to_create_employment_holidays.GPContractToCreate_employment_holidays(
                        allowance = 1.337, 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), ),
                job_title = '',
                client = dima_test_sdk.models.gp_client.GPClient(
                    legal_entity = dima_test_sdk.models.gp_client_legal_entity.GPClient_legal_entity(
                        id = '00000000-0000-0000-0000-000000000000', ), 
                    team = dima_test_sdk.models.eor_contract_to_create_client_team.EorContractToCreate_client_team(
                        id = '00000000-0000-0000-0000-000000000000', ), ),
                compensation_details = dima_test_sdk.models.gp_contract_to_create_compensation_details.GPContractToCreate_compensation_details(
                    scale = 'YEAR', 
                    salary = 1.337, 
                    currency = 'GBP', ),
        )
        """

    def testGPContractToCreate(self):
        """Test GPContractToCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
