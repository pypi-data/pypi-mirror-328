# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.eor_contract_to_create import EorContractToCreate

class TestEorContractToCreate(unittest.TestCase):
    """EorContractToCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EorContractToCreate:
        """Test EorContractToCreate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EorContractToCreate`
        """
        model = EorContractToCreate()
        if include_optional:
            return EorContractToCreate(
                employee = dima_test_sdk.models.eor_contract_to_create_employee.EorContractToCreate_employee(
                    first_name = 'Jane', 
                    last_name = 'Doe', 
                    email = 'employee@email.com', 
                    nationality = 'US', 
                    address = dima_test_sdk.models.eor_contract_to_create_employee_address.EorContractToCreate_employee_address(
                        street = 'Deel Street 500', 
                        city = 'Denver', 
                        state = 'CO', 
                        zip = '44000', 
                        country = 'US', ), ),
                employment = dima_test_sdk.models.eor_contract_to_create_employment.EorContractToCreate_employment(
                    country = 'US', 
                    state = '', 
                    type = 'Full-time', 
                    work_visa_required = True, 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    probation_period = 1.337, 
                    scope_of_work = '', 
                    time_off_type = 'STANDARD', 
                    holidays = 1.337, ),
                job_title = '',
                seniority = dima_test_sdk.models.eor_contract_to_create_seniority.EorContractToCreate_seniority(
                    id = '00000000-0000-0000-0000-000000000000', ),
                client = dima_test_sdk.models.eor_contract_to_create_client.EorContractToCreate_client(
                    legal_entity = dima_test_sdk.models.eor_contract_to_create_seniority.EorContractToCreate_seniority(
                        id = '00000000-0000-0000-0000-000000000000', ), 
                    team = dima_test_sdk.models.eor_contract_to_create_client_team.EorContractToCreate_client_team(
                        id = '00000000-0000-0000-0000-000000000000', ), ),
                compensation_details = dima_test_sdk.models.eor_contract_to_create_compensation_details.EorContractToCreate_compensation_details(
                    salary = 1.337, 
                    currency = '', 
                    variable_compensation = 1.337, 
                    variable_compensation_type = 'PERCENTAGE', ),
                quote_additional_fields = dima_test_sdk.models.eor_contract_to_create_quote_additional_fields.EorContractToCreate_quote_additional_fields(
                    gender = '', 
                    worker_type = 'Skilled', 
                    dob = '', ),
                provider_id = '',
                health_plan_id = '',
                pension = dima_test_sdk.models.pension_eor_contract_to_create.PensionEORContractToCreate(
                    id = '', 
                    contribution = '', )
            )
        else:
            return EorContractToCreate(
                employee = dima_test_sdk.models.eor_contract_to_create_employee.EorContractToCreate_employee(
                    first_name = 'Jane', 
                    last_name = 'Doe', 
                    email = 'employee@email.com', 
                    nationality = 'US', 
                    address = dima_test_sdk.models.eor_contract_to_create_employee_address.EorContractToCreate_employee_address(
                        street = 'Deel Street 500', 
                        city = 'Denver', 
                        state = 'CO', 
                        zip = '44000', 
                        country = 'US', ), ),
                employment = dima_test_sdk.models.eor_contract_to_create_employment.EorContractToCreate_employment(
                    country = 'US', 
                    state = '', 
                    type = 'Full-time', 
                    work_visa_required = True, 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    probation_period = 1.337, 
                    scope_of_work = '', 
                    time_off_type = 'STANDARD', 
                    holidays = 1.337, ),
                job_title = '',
                seniority = dima_test_sdk.models.eor_contract_to_create_seniority.EorContractToCreate_seniority(
                    id = '00000000-0000-0000-0000-000000000000', ),
                client = dima_test_sdk.models.eor_contract_to_create_client.EorContractToCreate_client(
                    legal_entity = dima_test_sdk.models.eor_contract_to_create_seniority.EorContractToCreate_seniority(
                        id = '00000000-0000-0000-0000-000000000000', ), 
                    team = dima_test_sdk.models.eor_contract_to_create_client_team.EorContractToCreate_client_team(
                        id = '00000000-0000-0000-0000-000000000000', ), ),
                compensation_details = dima_test_sdk.models.eor_contract_to_create_compensation_details.EorContractToCreate_compensation_details(
                    salary = 1.337, 
                    currency = '', 
                    variable_compensation = 1.337, 
                    variable_compensation_type = 'PERCENTAGE', ),
        )
        """

    def testEorContractToCreate(self):
        """Test EorContractToCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
