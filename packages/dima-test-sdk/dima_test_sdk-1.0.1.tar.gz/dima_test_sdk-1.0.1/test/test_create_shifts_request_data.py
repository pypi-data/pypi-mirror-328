# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.create_shifts_request_data import CreateShiftsRequestData

class TestCreateShiftsRequestData(unittest.TestCase):
    """CreateShiftsRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateShiftsRequestData:
        """Test CreateShiftsRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateShiftsRequestData`
        """
        model = CreateShiftsRequestData()
        if include_optional:
            return CreateShiftsRequestData(
                shifts = [
                    dima_test_sdk.models.create_shifts_request_data_shifts_inner.createShifts_request_data_shifts_inner(
                        meta = dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta.createShifts_request_data_shifts_inner_meta(
                            end = dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta_end.createShifts_request_data_shifts_inner_meta_end(
                                date = '2023-10-01', 
                                time = '20:00', 
                                is_rest_day = False, 
                                is_public_holiday = False, ), 
                            start = dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta_start.createShifts_request_data_shifts_inner_meta_start(
                                date = '2023-10-01', 
                                time = '20:00', 
                                is_rest_day = False, 
                                is_public_holiday = False, ), 
                            breaks = [
                                dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta_breaks_inner.createShifts_request_data_shifts_inner_meta_breaks_inner(
                                    is_paid = False, )
                                ], 
                            approval_date = '2023-10-01', ), 
                        summary = dima_test_sdk.models.create_shifts_request_data_shifts_inner_summary.createShifts_request_data_shifts_inner_summary(
                            total_break_hours = 2, 
                            payable_break_hours = 2, 
                            total_payable_hours = 2, 
                            shift_duration_hours = 2, 
                            shift_rate_external_id = 'abcd', ), 
                        description = 'sample description', 
                        external_id = 'shift_123456', 
                        date_of_work = '2023-10-01', )
                    ],
                contract_id = '397w2dy'
            )
        else:
            return CreateShiftsRequestData(
                shifts = [
                    dima_test_sdk.models.create_shifts_request_data_shifts_inner.createShifts_request_data_shifts_inner(
                        meta = dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta.createShifts_request_data_shifts_inner_meta(
                            end = dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta_end.createShifts_request_data_shifts_inner_meta_end(
                                date = '2023-10-01', 
                                time = '20:00', 
                                is_rest_day = False, 
                                is_public_holiday = False, ), 
                            start = dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta_start.createShifts_request_data_shifts_inner_meta_start(
                                date = '2023-10-01', 
                                time = '20:00', 
                                is_rest_day = False, 
                                is_public_holiday = False, ), 
                            breaks = [
                                dima_test_sdk.models.create_shifts_request_data_shifts_inner_meta_breaks_inner.createShifts_request_data_shifts_inner_meta_breaks_inner(
                                    is_paid = False, )
                                ], 
                            approval_date = '2023-10-01', ), 
                        summary = dima_test_sdk.models.create_shifts_request_data_shifts_inner_summary.createShifts_request_data_shifts_inner_summary(
                            total_break_hours = 2, 
                            payable_break_hours = 2, 
                            total_payable_hours = 2, 
                            shift_duration_hours = 2, 
                            shift_rate_external_id = 'abcd', ), 
                        description = 'sample description', 
                        external_id = 'shift_123456', 
                        date_of_work = '2023-10-01', )
                    ],
                contract_id = '397w2dy',
        )
        """

    def testCreateShiftsRequestData(self):
        """Test CreateShiftsRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
