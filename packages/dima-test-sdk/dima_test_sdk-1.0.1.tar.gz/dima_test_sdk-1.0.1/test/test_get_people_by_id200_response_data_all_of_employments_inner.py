# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.get_people_by_id200_response_data_all_of_employments_inner import GetPeopleById200ResponseDataAllOfEmploymentsInner

class TestGetPeopleById200ResponseDataAllOfEmploymentsInner(unittest.TestCase):
    """GetPeopleById200ResponseDataAllOfEmploymentsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPeopleById200ResponseDataAllOfEmploymentsInner:
        """Test GetPeopleById200ResponseDataAllOfEmploymentsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPeopleById200ResponseDataAllOfEmploymentsInner`
        """
        model = GetPeopleById200ResponseDataAllOfEmploymentsInner()
        if include_optional:
            return GetPeopleById200ResponseDataAllOfEmploymentsInner(
                id = 'mzj524j',
                name = 'Khizar Naeem',
                team = dima_test_sdk.models.get_people_by_id_200_response_data_all_of_employments_inner_team.getPeopleById_200_response_data_allOf_employments_inner_team(
                    id = '00000000-0000-0000-0000-000000000000', 
                    name = 'Delivery team', ),
                email = 'some@example.com',
                state = 'Active',
                country = 'USA',
                payment = dima_test_sdk.models.get_people_by_id_200_response_data_all_of_employments_inner_payment.getPeopleById_200_response_data_allOf_employments_inner_payment(
                    rate = 100, 
                    scale = 'hourly', 
                    currency = 'USD', 
                    contract_name = 'Contract 1', ),
                is_ended = False,
                timezone = 'EST',
                job_title = 'Access Field Technician',
                seniority = 'Junior (Individual Contributor Level 1)',
                start_date = 'Mon Mar 20 01:00:00 CET 2023',
                work_email = 'work.email@example.com',
                hiring_type = 'contractor',
                hiring_status = 'onboarding',
                completion_date = '2023-06-20T00:00:00.000Z',
                contract_status = 'waiting_for_client_sign',
                voluntarily_left = 'No',
                contract_coverage = ["no_coverage"],
                new_hiring_status = 'onboarding_overdue',
                client_legal_entity = dima_test_sdk.models.get_people_list_200_response_data_inner_employments_inner_client_legal_entity.getPeopleList_200_response_data_inner_employments_inner_client_legal_entity(
                    id = '00000000-0000-0000-0000-000000000000', 
                    name = '', ),
                has_eor_termination = 'No',
                contract_is_archived = False,
                termination_last_day = '2023-03-21T10:27:25.950Z',
                contract_has_contractor = True,
                is_user_contract_deleted = False,
                hris_direct_employee_invitation = 'Invited'
            )
        else:
            return GetPeopleById200ResponseDataAllOfEmploymentsInner(
        )
        """

    def testGetPeopleById200ResponseDataAllOfEmploymentsInner(self):
        """Test GetPeopleById200ResponseDataAllOfEmploymentsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
