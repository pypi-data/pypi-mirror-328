# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.create_direct_employee_request_data_employment_one_of1 import CreateDirectEmployeeRequestDataEmploymentOneOf1

class TestCreateDirectEmployeeRequestDataEmploymentOneOf1(unittest.TestCase):
    """CreateDirectEmployeeRequestDataEmploymentOneOf1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateDirectEmployeeRequestDataEmploymentOneOf1:
        """Test CreateDirectEmployeeRequestDataEmploymentOneOf1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateDirectEmployeeRequestDataEmploymentOneOf1`
        """
        model = CreateDirectEmployeeRequestDataEmploymentOneOf1()
        if include_optional:
            return CreateDirectEmployeeRequestDataEmploymentOneOf1(
                type = 'FULL_TIME',
                end_date = 'Mon Jan 01 01:00:00 CET 2029',
                job_title = 'Software Engineer',
                seniority = 'Senior',
                start_date = 'Wed Jan 01 01:00:00 CET 2020'
            )
        else:
            return CreateDirectEmployeeRequestDataEmploymentOneOf1(
                type = 'FULL_TIME',
                job_title = 'Software Engineer',
                seniority = 'Senior',
                start_date = 'Wed Jan 01 01:00:00 CET 2020',
        )
        """

    def testCreateDirectEmployeeRequestDataEmploymentOneOf1(self):
        """Test CreateDirectEmployeeRequestDataEmploymentOneOf1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
