# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.get_people_personal_information_by_id200_response import GetPeoplePersonalInformationById200Response

class TestGetPeoplePersonalInformationById200Response(unittest.TestCase):
    """GetPeoplePersonalInformationById200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPeoplePersonalInformationById200Response:
        """Test GetPeoplePersonalInformationById200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPeoplePersonalInformationById200Response`
        """
        model = GetPeoplePersonalInformationById200Response()
        if include_optional:
            return GetPeoplePersonalInformationById200Response(
                data = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data.getPeoplePersonalInformationById_200_response_data(
                    id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                    kyc = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_kyc.getPeoplePersonalInformationById_200_response_data_kyc(
                        is_kyc_approved = True, 
                        kyc_approval_date = '2021-01-01', ), 
                    ooo = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_ooo.getPeoplePersonalInformationById_200_response_data_ooo(
                        name = 'Vacation', 
                        end_date = '2021-01-01', 
                        leave_type = 'LONG_TERM_LEAVE', 
                        start_date = 'Fri Jan 01 01:00:00 CET 2021', ), 
                    addresses = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_addresses_inner.getPeoplePersonalInformationById_200_response_data_addresses_inner(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            zip = '12345', 
                            city = 'New York', 
                            type = 'HOME', 
                            state = 'NY', 
                            street = '123 Main St', 
                            country = 'US', )
                        ], 
                    worker_id = 123456, 
                    work_email = 'test@example.com', 
                    external_id = '123456', 
                    demographics = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_demographics.getPeoplePersonalInformationById_200_response_data_demographics(
                        gender = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_demographics_gender.getPeoplePersonalInformationById_200_response_data_demographics_gender(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            name = 'male', 
                            other_name = 'other', ), 
                        ethnicity = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_demographics_ethnicity.getPeoplePersonalInformationById_200_response_data_demographics_ethnicity(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            name = 'white', 
                            other_name = 'other', ), ), 
                    date_of_birth = 'Fri Jan 01 01:00:00 CET 2021', 
                    nationalities = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_nationalities_inner.getPeoplePersonalInformationById_200_response_data_nationalities_inner(
                            code = 'US', 
                            name = 'United States', )
                        ], 
                    phone_numbers = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_phone_numbers_inner.getPeoplePersonalInformationById_200_response_data_phone_numbers_inner(
                            type = 'PERSONAL', 
                            dial_code = '+1', 
                            phone_number = '1234567890', )
                        ], 
                    personal_email = 'test@example.com', 
                    preferred_name = 'John', 
                    legal_last_name = 'Doe', 
                    legal_first_name = 'John', 
                    emergency_contacts = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_emergency_contacts_inner.getPeoplePersonalInformationById_200_response_data_emergency_contacts_inner(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            name = 'Jane Doe', 
                            email = 'test@example.com', 
                            phone = '1234567890', 
                            relationship = 'Mother', 
                            preferred_language = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_emergency_contacts_inner_preferred_language.getPeoplePersonalInformationById_200_response_data_emergency_contacts_inner_preferred_language(
                                id = 1, 
                                language = 'English', ), )
                        ], )
            )
        else:
            return GetPeoplePersonalInformationById200Response(
                data = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data.getPeoplePersonalInformationById_200_response_data(
                    id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                    kyc = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_kyc.getPeoplePersonalInformationById_200_response_data_kyc(
                        is_kyc_approved = True, 
                        kyc_approval_date = '2021-01-01', ), 
                    ooo = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_ooo.getPeoplePersonalInformationById_200_response_data_ooo(
                        name = 'Vacation', 
                        end_date = '2021-01-01', 
                        leave_type = 'LONG_TERM_LEAVE', 
                        start_date = 'Fri Jan 01 01:00:00 CET 2021', ), 
                    addresses = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_addresses_inner.getPeoplePersonalInformationById_200_response_data_addresses_inner(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            zip = '12345', 
                            city = 'New York', 
                            type = 'HOME', 
                            state = 'NY', 
                            street = '123 Main St', 
                            country = 'US', )
                        ], 
                    worker_id = 123456, 
                    work_email = 'test@example.com', 
                    external_id = '123456', 
                    demographics = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_demographics.getPeoplePersonalInformationById_200_response_data_demographics(
                        gender = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_demographics_gender.getPeoplePersonalInformationById_200_response_data_demographics_gender(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            name = 'male', 
                            other_name = 'other', ), 
                        ethnicity = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_demographics_ethnicity.getPeoplePersonalInformationById_200_response_data_demographics_ethnicity(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            name = 'white', 
                            other_name = 'other', ), ), 
                    date_of_birth = 'Fri Jan 01 01:00:00 CET 2021', 
                    nationalities = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_nationalities_inner.getPeoplePersonalInformationById_200_response_data_nationalities_inner(
                            code = 'US', 
                            name = 'United States', )
                        ], 
                    phone_numbers = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_phone_numbers_inner.getPeoplePersonalInformationById_200_response_data_phone_numbers_inner(
                            type = 'PERSONAL', 
                            dial_code = '+1', 
                            phone_number = '1234567890', )
                        ], 
                    personal_email = 'test@example.com', 
                    preferred_name = 'John', 
                    legal_last_name = 'Doe', 
                    legal_first_name = 'John', 
                    emergency_contacts = [
                        dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_emergency_contacts_inner.getPeoplePersonalInformationById_200_response_data_emergency_contacts_inner(
                            id = 'f7b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b', 
                            name = 'Jane Doe', 
                            email = 'test@example.com', 
                            phone = '1234567890', 
                            relationship = 'Mother', 
                            preferred_language = dima_test_sdk.models.get_people_personal_information_by_id_200_response_data_emergency_contacts_inner_preferred_language.getPeoplePersonalInformationById_200_response_data_emergency_contacts_inner_preferred_language(
                                id = 1, 
                                language = 'English', ), )
                        ], ),
        )
        """

    def testGetPeoplePersonalInformationById200Response(self):
        """Test GetPeoplePersonalInformationById200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
