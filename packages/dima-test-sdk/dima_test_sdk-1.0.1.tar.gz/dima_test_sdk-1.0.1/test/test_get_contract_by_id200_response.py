# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.get_contract_by_id200_response import GetContractById200Response

class TestGetContractById200Response(unittest.TestCase):
    """GetContractById200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetContractById200Response:
        """Test GetContractById200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetContractById200Response`
        """
        model = GetContractById200Response()
        if include_optional:
            return GetContractById200Response(
                data = dima_test_sdk.models.get_contract_by_id_200_response_data.getContractById_200_response_data(
                    id = '123e4567-e89b-12d3-a456-426614174000', 
                    type = 'ongoing_time_based', 
                    quote = dima_test_sdk.models.get_contract_by_id_200_response_data_quote.getContractById_200_response_data_quote(
                        benefits = [{"fee":200.5,"name":"Health Insurance","plan":"Premium","price":150.75,"fee_usd":220,"currency":"USD","price_usd":170.5}], 
                        currency = 'USD', ), 
                    title = 'Software Development Contract', 
                    client = dima_test_sdk.models.get_contract_by_id_200_response_data_client.getContractById_200_response_data_client(
                        id = 'team-abc123', 
                        team = dima_test_sdk.models.get_contract_by_id_200_response_data_client_team.getContractById_200_response_data_client_team(
                            id = 'team-xyz789', 
                            name = 'Engineering Team', ), 
                        email = 'client@example.com', 
                        full_name = 'Acme Corp', 
                        legal_entity = dima_test_sdk.models.get_contract_by_id_200_response_data_client_legal_entity.getContractById_200_response_data_client_legal_entity(
                            id = 'team-xyz789', 
                            name = 'Engineering Team', 
                            type = 'company', 
                            email = 'test@example.com', 
                            subtype = 'general-partnership', 
                            vat_number = '123456789', 
                            registration_number = '123456789', ), ), 
                    status = 'in_progress', 
                    worker = dima_test_sdk.models.get_contract_by_id_200_response_data_worker.getContractById_200_response_data_worker(
                        id = 'team-abc123', 
                        email = 'client@example.com', 
                        country = 'US', 
                        full_name = 'Acme Corp', 
                        last_name = 'Doe', 
                        first_name = 'John', 
                        nationality = 'US', 
                        date_of_birth = 'Mon Jan 01 01:00:00 CET 1990', 
                        expected_email = 'test@example.com', 
                        alternate_email = [
                            dima_test_sdk.models.root_schema.Root Schema(
                                email = 'test@example.com', 
                                is_verified = True, )
                            ], ), 
                    job_title = 'Backend Developer', 
                    seniority = dima_test_sdk.models.get_contract_by_id_200_response_data_seniority.getContractById_200_response_data_seniority(
                        id = 1, 
                        name = 'Mid (Individual Contributor Level 2)', 
                        level = 2, ), 
                    created_at = '2022-01-01T00:00Z', 
                    signatures = dima_test_sdk.models.get_contract_by_id_200_response_data_signatures.getContractById_200_response_data_signatures(
                        signed_at = '2022-01-01T00:00Z', 
                        client_signature = 'Jane Doe', 
                        client_signed_at = '2022-01-01T00:00Z', 
                        worker_signature = 'Jane Doe', 
                        worker_signed_at = '2022-01-01T00:00Z', ), 
                    start_date = '2022-01-01T00:00Z', 
                    external_id = 'external_id', 
                    invitations = dima_test_sdk.models.get_contract_by_id_200_response_data_invitations.getContractById_200_response_data_invitations(
                        client_email = 'client@example.com', 
                        worker_email = 'worker@example.com', ), 
                    is_archived = False, 
                    who_reports = 'client', 
                    custom_fields = [
                        dima_test_sdk.models.create_contract_201_response_data_custom_fields_inner.createContract_201_response_data_custom_fields_inner(
                            name = 'Employee ID', 
                            value = '54234', )
                        ], 
                    notice_period = 30, 
                    scope_of_work = 'Scope of work', 
                    special_clause = 'Special clause', 
                    termination_date = '2022-01-01T00:00:00Z', 
                    contract_template = dima_test_sdk.models.get_contract_by_id_200_response_data_contract_template.getContractById_200_response_data_contract_template(
                        id = '37nex2x', 
                        title = 'UK Employment Contract 2022.', ), 
                    employment_details = dima_test_sdk.models.get_contract_by_id_200_response_data_employment_details.getContractById_200_response_data_employment_details(
                        type = 'full_time', 
                        days_per_week = 5, 
                        hours_per_day = 8, 
                        probation_period = 30, 
                        paid_vacation_days = 20, ), 
                    compensation_details = dima_test_sdk.models.get_contract_by_id_200_response_data_compensation_details.getContractById_200_response_data_compensation_details(
                        scale = 'hourly', 
                        amount = 100, 
                        frequency = 'monthly', 
                        currency_code = 'GBP', 
                        first_payment = '500', 
                        first_payment_date = '2024-08-30T20:59:59.999+00:00', 
                        gross_annual_salary = '50000', 
                        gross_signing_bonus = '5000', 
                        gross_variable_bonus = '5000', ), )
            )
        else:
            return GetContractById200Response(
                data = dima_test_sdk.models.get_contract_by_id_200_response_data.getContractById_200_response_data(
                    id = '123e4567-e89b-12d3-a456-426614174000', 
                    type = 'ongoing_time_based', 
                    quote = dima_test_sdk.models.get_contract_by_id_200_response_data_quote.getContractById_200_response_data_quote(
                        benefits = [{"fee":200.5,"name":"Health Insurance","plan":"Premium","price":150.75,"fee_usd":220,"currency":"USD","price_usd":170.5}], 
                        currency = 'USD', ), 
                    title = 'Software Development Contract', 
                    client = dima_test_sdk.models.get_contract_by_id_200_response_data_client.getContractById_200_response_data_client(
                        id = 'team-abc123', 
                        team = dima_test_sdk.models.get_contract_by_id_200_response_data_client_team.getContractById_200_response_data_client_team(
                            id = 'team-xyz789', 
                            name = 'Engineering Team', ), 
                        email = 'client@example.com', 
                        full_name = 'Acme Corp', 
                        legal_entity = dima_test_sdk.models.get_contract_by_id_200_response_data_client_legal_entity.getContractById_200_response_data_client_legal_entity(
                            id = 'team-xyz789', 
                            name = 'Engineering Team', 
                            type = 'company', 
                            email = 'test@example.com', 
                            subtype = 'general-partnership', 
                            vat_number = '123456789', 
                            registration_number = '123456789', ), ), 
                    status = 'in_progress', 
                    worker = dima_test_sdk.models.get_contract_by_id_200_response_data_worker.getContractById_200_response_data_worker(
                        id = 'team-abc123', 
                        email = 'client@example.com', 
                        country = 'US', 
                        full_name = 'Acme Corp', 
                        last_name = 'Doe', 
                        first_name = 'John', 
                        nationality = 'US', 
                        date_of_birth = 'Mon Jan 01 01:00:00 CET 1990', 
                        expected_email = 'test@example.com', 
                        alternate_email = [
                            dima_test_sdk.models.root_schema.Root Schema(
                                email = 'test@example.com', 
                                is_verified = True, )
                            ], ), 
                    job_title = 'Backend Developer', 
                    seniority = dima_test_sdk.models.get_contract_by_id_200_response_data_seniority.getContractById_200_response_data_seniority(
                        id = 1, 
                        name = 'Mid (Individual Contributor Level 2)', 
                        level = 2, ), 
                    created_at = '2022-01-01T00:00Z', 
                    signatures = dima_test_sdk.models.get_contract_by_id_200_response_data_signatures.getContractById_200_response_data_signatures(
                        signed_at = '2022-01-01T00:00Z', 
                        client_signature = 'Jane Doe', 
                        client_signed_at = '2022-01-01T00:00Z', 
                        worker_signature = 'Jane Doe', 
                        worker_signed_at = '2022-01-01T00:00Z', ), 
                    start_date = '2022-01-01T00:00Z', 
                    external_id = 'external_id', 
                    invitations = dima_test_sdk.models.get_contract_by_id_200_response_data_invitations.getContractById_200_response_data_invitations(
                        client_email = 'client@example.com', 
                        worker_email = 'worker@example.com', ), 
                    is_archived = False, 
                    who_reports = 'client', 
                    custom_fields = [
                        dima_test_sdk.models.create_contract_201_response_data_custom_fields_inner.createContract_201_response_data_custom_fields_inner(
                            name = 'Employee ID', 
                            value = '54234', )
                        ], 
                    notice_period = 30, 
                    scope_of_work = 'Scope of work', 
                    special_clause = 'Special clause', 
                    termination_date = '2022-01-01T00:00:00Z', 
                    contract_template = dima_test_sdk.models.get_contract_by_id_200_response_data_contract_template.getContractById_200_response_data_contract_template(
                        id = '37nex2x', 
                        title = 'UK Employment Contract 2022.', ), 
                    employment_details = dima_test_sdk.models.get_contract_by_id_200_response_data_employment_details.getContractById_200_response_data_employment_details(
                        type = 'full_time', 
                        days_per_week = 5, 
                        hours_per_day = 8, 
                        probation_period = 30, 
                        paid_vacation_days = 20, ), 
                    compensation_details = dima_test_sdk.models.get_contract_by_id_200_response_data_compensation_details.getContractById_200_response_data_compensation_details(
                        scale = 'hourly', 
                        amount = 100, 
                        frequency = 'monthly', 
                        currency_code = 'GBP', 
                        first_payment = '500', 
                        first_payment_date = '2024-08-30T20:59:59.999+00:00', 
                        gross_annual_salary = '50000', 
                        gross_signing_bonus = '5000', 
                        gross_variable_bonus = '5000', ), ),
        )
        """

    def testGetContractById200Response(self):
        """Test GetContractById200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
