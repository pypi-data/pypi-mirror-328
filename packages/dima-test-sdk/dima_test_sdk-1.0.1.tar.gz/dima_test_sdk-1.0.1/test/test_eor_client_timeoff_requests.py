# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.eor_client_timeoff_requests import EorClientTimeoffRequests

class TestEorClientTimeoffRequests(unittest.TestCase):
    """EorClientTimeoffRequests unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EorClientTimeoffRequests:
        """Test EorClientTimeoffRequests
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EorClientTimeoffRequests`
        """
        model = EorClientTimeoffRequests()
        if include_optional:
            return EorClientTimeoffRequests(
                year = 2022,
                days_requested = 1.337,
                current_approved = 1.337,
                yearly_limit = 1.337,
                over_annual_limit = True,
                yearly_requests = 1.337,
                requests = [
                    dima_test_sdk.models.eor_timeoffs_item.EorTimeoffsItem(
                        id = '00000000-0000-0000-0000-000000000000', 
                        contract_id = 'abc123', 
                        created_at = '2022-05-24T09:38:46.235Z', 
                        updated_at = '2022-05-24T09:38:46.235Z', 
                        start_date = '2022-05-24T09:38:46.235Z', 
                        end_date = '2022-05-24T09:38:46.235Z', 
                        can_request_changes = True, 
                        is_updated = True, 
                        change_request = dima_test_sdk.models.eor_timeoffs_base_item.EorTimeoffsBaseItem(
                            reason = 'I have a doctors appointment', 
                            type = 'VACATION', 
                            requested_at = '2022-05-24T09:38:46.235Z', 
                            reviewed_at = '2022-05-24T09:38:46.235Z', 
                            denial_reason = 'No time off available', 
                            has_multiple_dates = True, 
                            status = 'REQUESTED', 
                            other_timeoff_name = 'This is time off for a doctor's appointment', 
                            requester = dima_test_sdk.models.timeoffs_profile.TimeoffsProfile(
                                id = '00000000-0000-0000-0000-000000000000', 
                                name = 'Mr. Rogers', 
                                pic_url = '01234', 
                                profile_type = 'client', 
                                is_employee = True, ), 
                            reviewer = dima_test_sdk.models.timeoffs_profile.TimeoffsProfile(
                                id = , 
                                name = 'Mr. Rogers', 
                                profile_type = 'client', 
                                is_employee = True, ), 
                            days_used_start_year = '2.00', 
                            days_used_end_year = '2.00', 
                            total_days_used = '4.00', 
                            start_date_is_half_day = True, 
                            end_date_is_half_day = True, 
                            single_date = '2022-05-24T09:38:46.235Z', 
                            date_is_half_day = True, 
                            attachments = [
                                dima_test_sdk.models.timeoffs_attachments_item.TimeoffsAttachmentsItem(
                                    label = '', 
                                    file_extension = '', )
                                ], ), 
                        applied_changes = [
                            dima_test_sdk.models.eor_timeoffs_base_item.EorTimeoffsBaseItem(
                                reason = 'I have a doctors appointment', 
                                type = 'VACATION', 
                                requested_at = '2022-05-24T09:38:46.235Z', 
                                denial_reason = 'No time off available', 
                                has_multiple_dates = True, 
                                status = 'REQUESTED', 
                                other_timeoff_name = 'This is time off for a doctor's appointment', 
                                days_used_start_year = '2.00', 
                                days_used_end_year = '2.00', 
                                total_days_used = '4.00', 
                                start_date_is_half_day = True, 
                                end_date_is_half_day = True, 
                                date_is_half_day = True, )
                            ], )
                    ]
            )
        else:
            return EorClientTimeoffRequests(
                requests = [
                    dima_test_sdk.models.eor_timeoffs_item.EorTimeoffsItem(
                        id = '00000000-0000-0000-0000-000000000000', 
                        contract_id = 'abc123', 
                        created_at = '2022-05-24T09:38:46.235Z', 
                        updated_at = '2022-05-24T09:38:46.235Z', 
                        start_date = '2022-05-24T09:38:46.235Z', 
                        end_date = '2022-05-24T09:38:46.235Z', 
                        can_request_changes = True, 
                        is_updated = True, 
                        change_request = dima_test_sdk.models.eor_timeoffs_base_item.EorTimeoffsBaseItem(
                            reason = 'I have a doctors appointment', 
                            type = 'VACATION', 
                            requested_at = '2022-05-24T09:38:46.235Z', 
                            reviewed_at = '2022-05-24T09:38:46.235Z', 
                            denial_reason = 'No time off available', 
                            has_multiple_dates = True, 
                            status = 'REQUESTED', 
                            other_timeoff_name = 'This is time off for a doctor's appointment', 
                            requester = dima_test_sdk.models.timeoffs_profile.TimeoffsProfile(
                                id = '00000000-0000-0000-0000-000000000000', 
                                name = 'Mr. Rogers', 
                                pic_url = '01234', 
                                profile_type = 'client', 
                                is_employee = True, ), 
                            reviewer = dima_test_sdk.models.timeoffs_profile.TimeoffsProfile(
                                id = , 
                                name = 'Mr. Rogers', 
                                profile_type = 'client', 
                                is_employee = True, ), 
                            days_used_start_year = '2.00', 
                            days_used_end_year = '2.00', 
                            total_days_used = '4.00', 
                            start_date_is_half_day = True, 
                            end_date_is_half_day = True, 
                            single_date = '2022-05-24T09:38:46.235Z', 
                            date_is_half_day = True, 
                            attachments = [
                                dima_test_sdk.models.timeoffs_attachments_item.TimeoffsAttachmentsItem(
                                    label = '', 
                                    file_extension = '', )
                                ], ), 
                        applied_changes = [
                            dima_test_sdk.models.eor_timeoffs_base_item.EorTimeoffsBaseItem(
                                reason = 'I have a doctors appointment', 
                                type = 'VACATION', 
                                requested_at = '2022-05-24T09:38:46.235Z', 
                                denial_reason = 'No time off available', 
                                has_multiple_dates = True, 
                                status = 'REQUESTED', 
                                other_timeoff_name = 'This is time off for a doctor's appointment', 
                                days_used_start_year = '2.00', 
                                days_used_end_year = '2.00', 
                                total_days_used = '4.00', 
                                start_date_is_half_day = True, 
                                end_date_is_half_day = True, 
                                date_is_half_day = True, )
                            ], )
                    ],
        )
        """

    def testEorClientTimeoffRequests(self):
        """Test EorClientTimeoffRequests"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
