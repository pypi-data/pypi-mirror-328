# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.basic_contract import BasicContract

class TestBasicContract(unittest.TestCase):
    """BasicContract unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BasicContract:
        """Test BasicContract
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BasicContract`
        """
        model = BasicContract()
        if include_optional:
            return BasicContract(
                id = '0',
                title = '0',
                type = 'ongoing_time_based',
                status = 'new',
                client = dima_test_sdk.models.client_of_basic_contract.ClientOfBasicContract(
                    team = dima_test_sdk.models.team_of_basic_contract.TeamOfBasicContract(
                        id = '00000000-0000-0000-0000-000000000000', 
                        name = '', ), ),
                worker = dima_test_sdk.models.worker_of_basic_contract.WorkerOfBasicContract(
                    id = '00000000-0000-0000-0000-000000000000', 
                    full_name = '0', 
                    email = '01234', 
                    alternate_email = [
                        dima_test_sdk.models.root_schema.Root Schema(
                            email = '01234', 
                            is_verified = True, )
                        ], 
                    image = '01234', ),
                invitations = dima_test_sdk.models.invitations_of_basic_contract.InvitationsOfBasicContract(
                    client_email = '01234', 
                    worker_email = '01234', ),
                signatures = dima_test_sdk.models.signatures_of_basic_contract.SignaturesOfBasicContract(
                    client_signed_at = '2022-05-24T09:38:46.235Z', 
                    worker_signature = 'Jane Doe', 
                    worker_signed_at = '2022-05-24T09:38:46.235Z', ),
                is_shielded = True,
                is_archived = True,
                created_at = '2022-05-24T09:38:46.235Z',
                termination_date = '2022-05-24T09:38:46.235Z',
                notice_period = 15,
                scale = '',
                who_reports = '',
                external_id = ''
            )
        else:
            return BasicContract(
                id = '0',
                title = '0',
                type = 'ongoing_time_based',
                status = 'new',
                client = dima_test_sdk.models.client_of_basic_contract.ClientOfBasicContract(
                    team = dima_test_sdk.models.team_of_basic_contract.TeamOfBasicContract(
                        id = '00000000-0000-0000-0000-000000000000', 
                        name = '', ), ),
                worker = dima_test_sdk.models.worker_of_basic_contract.WorkerOfBasicContract(
                    id = '00000000-0000-0000-0000-000000000000', 
                    full_name = '0', 
                    email = '01234', 
                    alternate_email = [
                        dima_test_sdk.models.root_schema.Root Schema(
                            email = '01234', 
                            is_verified = True, )
                        ], 
                    image = '01234', ),
                invitations = dima_test_sdk.models.invitations_of_basic_contract.InvitationsOfBasicContract(
                    client_email = '01234', 
                    worker_email = '01234', ),
                signatures = dima_test_sdk.models.signatures_of_basic_contract.SignaturesOfBasicContract(
                    client_signed_at = '2022-05-24T09:38:46.235Z', 
                    worker_signature = 'Jane Doe', 
                    worker_signed_at = '2022-05-24T09:38:46.235Z', ),
                is_shielded = True,
                is_archived = True,
                created_at = '2022-05-24T09:38:46.235Z',
                termination_date = '2022-05-24T09:38:46.235Z',
        )
        """

    def testBasicContract(self):
        """Test BasicContract"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
