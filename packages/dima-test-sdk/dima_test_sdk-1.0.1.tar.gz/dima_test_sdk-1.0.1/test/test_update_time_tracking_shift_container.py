# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.update_time_tracking_shift_container import UpdateTimeTrackingShiftContainer

class TestUpdateTimeTrackingShiftContainer(unittest.TestCase):
    """UpdateTimeTrackingShiftContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateTimeTrackingShiftContainer:
        """Test UpdateTimeTrackingShiftContainer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateTimeTrackingShiftContainer`
        """
        model = UpdateTimeTrackingShiftContainer()
        if include_optional:
            return UpdateTimeTrackingShiftContainer(
                data = dima_test_sdk.models.update_time_tracking_shift_container_data.UpdateTimeTrackingShiftContainer_data(
                    description = 'Regular shift', 
                    date_of_work = '2022-05-04', 
                    meta = dima_test_sdk.models.time_tracking_shift_meta_schema.TimeTrackingShiftMetaSchema(
                        start = dima_test_sdk.models.time_tracking_shift_meta_schema_start.TimeTrackingShiftMetaSchema_start(
                            date = '2022-05-04', 
                            time = '09:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        end = dima_test_sdk.models.time_tracking_shift_meta_schema_end.TimeTrackingShiftMetaSchema_end(
                            date = '2022-05-04', 
                            time = '17:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        breaks = [
                            dima_test_sdk.models.time_tracking_shift_meta_schema_breaks_inner.TimeTrackingShiftMetaSchema_breaks_inner(
                                start = dima_test_sdk.models.time_tracking_shift_meta_schema_breaks_inner_start.TimeTrackingShiftMetaSchema_breaks_inner_start(
                                    date = '2022-05-04', 
                                    time = '12:00', ), 
                                end = dima_test_sdk.models.time_tracking_shift_meta_schema_breaks_inner_end.TimeTrackingShiftMetaSchema_breaks_inner_end(
                                    date = '2022-05-04', 
                                    time = '13:00', ), 
                                is_paid = True, )
                            ], 
                        approval_date = '2022-05-04', ), 
                    summary = dima_test_sdk.models.time_tracking_shift_summary_schema.TimeTrackingShiftSummarySchema(
                        shift_rate_external_id = 'rate-1121', 
                        shift_duration_hours = 8, 
                        total_break_hours = 0.5, 
                        payable_break_hours = 0.5, 
                        total_payable_hours = 8, ), )
            )
        else:
            return UpdateTimeTrackingShiftContainer(
                data = dima_test_sdk.models.update_time_tracking_shift_container_data.UpdateTimeTrackingShiftContainer_data(
                    description = 'Regular shift', 
                    date_of_work = '2022-05-04', 
                    meta = dima_test_sdk.models.time_tracking_shift_meta_schema.TimeTrackingShiftMetaSchema(
                        start = dima_test_sdk.models.time_tracking_shift_meta_schema_start.TimeTrackingShiftMetaSchema_start(
                            date = '2022-05-04', 
                            time = '09:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        end = dima_test_sdk.models.time_tracking_shift_meta_schema_end.TimeTrackingShiftMetaSchema_end(
                            date = '2022-05-04', 
                            time = '17:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        breaks = [
                            dima_test_sdk.models.time_tracking_shift_meta_schema_breaks_inner.TimeTrackingShiftMetaSchema_breaks_inner(
                                start = dima_test_sdk.models.time_tracking_shift_meta_schema_breaks_inner_start.TimeTrackingShiftMetaSchema_breaks_inner_start(
                                    date = '2022-05-04', 
                                    time = '12:00', ), 
                                end = dima_test_sdk.models.time_tracking_shift_meta_schema_breaks_inner_end.TimeTrackingShiftMetaSchema_breaks_inner_end(
                                    date = '2022-05-04', 
                                    time = '13:00', ), 
                                is_paid = True, )
                            ], 
                        approval_date = '2022-05-04', ), 
                    summary = dima_test_sdk.models.time_tracking_shift_summary_schema.TimeTrackingShiftSummarySchema(
                        shift_rate_external_id = 'rate-1121', 
                        shift_duration_hours = 8, 
                        total_break_hours = 0.5, 
                        payable_break_hours = 0.5, 
                        total_payable_hours = 8, ), ),
        )
        """

    def testUpdateTimeTrackingShiftContainer(self):
        """Test UpdateTimeTrackingShiftContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
