# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.employment import Employment

class TestEmployment(unittest.TestCase):
    """Employment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Employment:
        """Test Employment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Employment`
        """
        model = Employment()
        if include_optional:
            return Employment(
                id = '',
                name = '',
                team = dima_test_sdk.models.team.Team(
                    id = '00000000-0000-0000-0000-000000000000', 
                    name = '', ),
                email = '',
                state = '',
                country = '',
                payment = dima_test_sdk.models.people_payment.PeoplePayment(
                    rate = 1.337, 
                    scale = '', 
                    currency = '', 
                    contract_name = '', ),
                is_ended = True,
                timezone = '',
                job_title = '',
                seniority = '',
                start_date = '',
                work_email = '',
                hiring_type = '',
                hiring_status = '',
                completion_date = '',
                contract_status = '',
                voluntarily_left = True,
                client_legal_entity = dima_test_sdk.models.people_client_legal_entity.PeopleClientLegalEntity(
                    id = '00000000-0000-0000-0000-000000000000', 
                    name = '', ),
                has_eor_termination = True,
                contract_is_archived = True
            )
        else:
            return Employment(
        )
        """

    def testEmployment(self):
        """Test Employment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
