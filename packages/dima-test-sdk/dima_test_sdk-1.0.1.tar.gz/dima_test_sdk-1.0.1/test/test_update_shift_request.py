# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.update_shift_request import UpdateShiftRequest

class TestUpdateShiftRequest(unittest.TestCase):
    """UpdateShiftRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateShiftRequest:
        """Test UpdateShiftRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateShiftRequest`
        """
        model = UpdateShiftRequest()
        if include_optional:
            return UpdateShiftRequest(
                data = dima_test_sdk.models.update_shift_request_data.updateShift_request_data(
                    meta = dima_test_sdk.models.update_shift_request_data_meta.updateShift_request_data_meta(
                        end = dima_test_sdk.models.update_shift_request_data_meta_end.updateShift_request_data_meta_end(
                            date = '2024-11-12', 
                            time = '20:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        start = dima_test_sdk.models.update_shift_request_data_meta_start.updateShift_request_data_meta_start(
                            date = '2024-11-12', 
                            time = '20:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        breaks = [
                            dima_test_sdk.models.update_shift_request_data_meta_breaks_inner.updateShift_request_data_meta_breaks_inner(
                                is_paid = False, )
                            ], 
                        approval_date = '2024-11-12', ), 
                    description = 'This is a sample shift description.', 
                    date_of_work = '2023-10-01', )
            )
        else:
            return UpdateShiftRequest(
                data = dima_test_sdk.models.update_shift_request_data.updateShift_request_data(
                    meta = dima_test_sdk.models.update_shift_request_data_meta.updateShift_request_data_meta(
                        end = dima_test_sdk.models.update_shift_request_data_meta_end.updateShift_request_data_meta_end(
                            date = '2024-11-12', 
                            time = '20:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        start = dima_test_sdk.models.update_shift_request_data_meta_start.updateShift_request_data_meta_start(
                            date = '2024-11-12', 
                            time = '20:00', 
                            is_rest_day = False, 
                            is_public_holiday = False, ), 
                        breaks = [
                            dima_test_sdk.models.update_shift_request_data_meta_breaks_inner.updateShift_request_data_meta_breaks_inner(
                                is_paid = False, )
                            ], 
                        approval_date = '2024-11-12', ), 
                    description = 'This is a sample shift description.', 
                    date_of_work = '2023-10-01', ),
        )
        """

    def testUpdateShiftRequest(self):
        """Test UpdateShiftRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
