# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.get_gross_to_net_gp_reports200_response import GetGrossToNetGPReports200Response

class TestGetGrossToNetGPReports200Response(unittest.TestCase):
    """GetGrossToNetGPReports200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetGrossToNetGPReports200Response:
        """Test GetGrossToNetGPReports200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetGrossToNetGPReports200Response`
        """
        model = GetGrossToNetGPReports200Response()
        if include_optional:
            return GetGrossToNetGPReports200Response(
                data = [
                    dima_test_sdk.models.get_gross_to_net_gp_reports_200_response_data_inner.getGrossToNetGPReports_200_response_data_inner(
                        net_pay = '4000.00', 
                        ee_loans = '200.00', 
                        contract_id = 'clqmd5q', 
                        cost_center = 'Sales', 
                        annual_bonus = 5000, 
                        car_allowance = 300, 
                        ee_income_tax = '600.00', 
                        employee_name = 'John Doe', 
                        employer_cost = '5500.00', 
                        esp_deduction = 100, 
                        funding_amount = 2000, 
                        home_allowance = '500.00', 
                        employee_number = 12345, 
                        backdated_salary = '1500.00', 
                        employee_division = 'North America Division', 
                        employee_job_title = 'Software Engineer', 
                        employee_department = 'Engineering', 
                        er_occupational_risk = '300.00', 
                        pension_contribution = 250, 
                        employer_contribution = '700.00', 
                        employment_status_tag_internal = 'Full-time', )
                    ]
            )
        else:
            return GetGrossToNetGPReports200Response(
                data = [
                    dima_test_sdk.models.get_gross_to_net_gp_reports_200_response_data_inner.getGrossToNetGPReports_200_response_data_inner(
                        net_pay = '4000.00', 
                        ee_loans = '200.00', 
                        contract_id = 'clqmd5q', 
                        cost_center = 'Sales', 
                        annual_bonus = 5000, 
                        car_allowance = 300, 
                        ee_income_tax = '600.00', 
                        employee_name = 'John Doe', 
                        employer_cost = '5500.00', 
                        esp_deduction = 100, 
                        funding_amount = 2000, 
                        home_allowance = '500.00', 
                        employee_number = 12345, 
                        backdated_salary = '1500.00', 
                        employee_division = 'North America Division', 
                        employee_job_title = 'Software Engineer', 
                        employee_department = 'Engineering', 
                        er_occupational_risk = '300.00', 
                        pension_contribution = 250, 
                        employer_contribution = '700.00', 
                        employment_status_tag_internal = 'Full-time', )
                    ],
        )
        """

    def testGetGrossToNetGPReports200Response(self):
        """Test GetGrossToNetGPReports200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
