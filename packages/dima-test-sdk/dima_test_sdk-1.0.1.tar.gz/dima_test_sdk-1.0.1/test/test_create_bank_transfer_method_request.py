# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.create_bank_transfer_method_request import CreateBankTransferMethodRequest

class TestCreateBankTransferMethodRequest(unittest.TestCase):
    """CreateBankTransferMethodRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateBankTransferMethodRequest:
        """Test CreateBankTransferMethodRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateBankTransferMethodRequest`
        """
        model = CreateBankTransferMethodRequest()
        if include_optional:
            return CreateBankTransferMethodRequest(
                data = dima_test_sdk.models.create_bank_transfer_method_request_data.createBankTransferMethod_request_data(
                    address = dima_test_sdk.models.get_payout_methods_200_response_data_address.getPayoutMethods_200_response_data_address(
                        city = 'San Francisco', 
                        state = 'CA', 
                        country = 'US', 
                        post_code = '210000', 
                        first_line = 'First Line', ), 
                    payload = {"currency":"US","swiftCode":"DBDBRSBG","intermediary":{"bic":"RSDASDS","country":"DE"},"accountNumber":"SA0380000000608010167222","accountHolderName":"John Doe"}, 
                    is_default = True, 
                    method_name = 'Bank Method', 
                    payment_method = 'bank_transfer', 
                    selected_option = 'swift_code', )
            )
        else:
            return CreateBankTransferMethodRequest(
                data = dima_test_sdk.models.create_bank_transfer_method_request_data.createBankTransferMethod_request_data(
                    address = dima_test_sdk.models.get_payout_methods_200_response_data_address.getPayoutMethods_200_response_data_address(
                        city = 'San Francisco', 
                        state = 'CA', 
                        country = 'US', 
                        post_code = '210000', 
                        first_line = 'First Line', ), 
                    payload = {"currency":"US","swiftCode":"DBDBRSBG","intermediary":{"bic":"RSDASDS","country":"DE"},"accountNumber":"SA0380000000608010167222","accountHolderName":"John Doe"}, 
                    is_default = True, 
                    method_name = 'Bank Method', 
                    payment_method = 'bank_transfer', 
                    selected_option = 'swift_code', ),
        )
        """

    def testCreateBankTransferMethodRequest(self):
        """Test CreateBankTransferMethodRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
