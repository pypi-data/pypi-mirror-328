# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_test_sdk.models.calculate_eor_employment_cost_request import CalculateEorEmploymentCostRequest

class TestCalculateEorEmploymentCostRequest(unittest.TestCase):
    """CalculateEorEmploymentCostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CalculateEorEmploymentCostRequest:
        """Test CalculateEorEmploymentCostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CalculateEorEmploymentCostRequest`
        """
        model = CalculateEorEmploymentCostRequest()
        if include_optional:
            return CalculateEorEmploymentCostRequest(
                data = dima_test_sdk.models.calculate_eor_employment_cost_request_data.calculateEorEmploymentCost_request_data(
                    state = 'California', 
                    salary = 50000, 
                    country = 'United States', 
                    benefits = [
                        dima_test_sdk.models.calculate_eor_employment_cost_request_data_benefits_inner.calculateEorEmploymentCost_request_data_benefits_inner(
                            plan_id = '', 
                            provider_id = '', )
                        ], 
                    currency = 'USD', )
            )
        else:
            return CalculateEorEmploymentCostRequest(
        )
        """

    def testCalculateEorEmploymentCostRequest(self):
        """Test CalculateEorEmploymentCostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
