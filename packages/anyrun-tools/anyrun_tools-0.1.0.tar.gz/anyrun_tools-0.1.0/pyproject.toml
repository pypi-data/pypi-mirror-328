[tool.poetry]
name = "anyrun-tools"
version = "0.1.0"
description = "Python SDK for ANY.RUN APIs"
authors = ["Kirill Bykov <bykovk@anyrun.tools>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "anyrun", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.9.0 || >3.9.1,<3.12"
httpx = "^0.25.2"
pydantic = "^2.5.2"
typing-extensions = ">=4.5.0,<5.0.0"
loguru = "^0.7.2"
tenacity = ">=8.2.0,<9.0.0"
redis = ">=5.0.0,<6.0.0"
tomli = ">=2.0.0,<3.0.0"
eval-type-backport = ">=0.1.0,<1.0.0"
cryptography = "^44.0.1"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0,<8.0.0"
pytest-asyncio = ">=0.23.0,<1.0.0"
pytest-cov = ">=4.1.0,<5.0.0"
pytest-mock = ">=3.10.0,<4.0.0"
respx = ">=0.20.0,<1.0.0"
coverage = ">=7.2.0,<8.0.0"
tox = ">=4.11.0,<5.0.0"
tox-gh-actions = ">=3.1.0,<4.0.0"
black = ">=24.2.0,<25.0.0"
isort = ">=5.12.0,<6.0.0"
flake8 = ">=6.0.0,<7.0.0"
flake8-docstrings = ">=1.7.0,<2.0.0"
flake8-quotes = ">=3.3.0,<4.0.0"
flake8-bugbear = ">=23.0.0,<24.0.0"
mypy = ">=1.4.0,<2.0.0"
bandit = ">=1.7.0,<2.0.0"
types-redis = ">=4.6.0.5,<5.0.0"
types-setuptools = ">=68.0.0,<69.0.0"
autoflake = ">=2.3.0,<3.0.0"

[tool.mypy]
python_version = "0.1.0"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
files = ["src/anyrun"]

[tool.black]
line-length = 100
target-version = ['py38']
include = 'src/anyrun/.*\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
src_paths = ["src/anyrun"]
known_first_party = ["anyrun"]
known_third_party = ["httpx", "pydantic", "redis", "tenacity"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203"]
per-file-ignores = ["__init__.py:F401"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]
src_paths = ["src/anyrun"]

[tool.coverage.run]
source = ["anyrun"]
branch = true
parallel = true
concurrency = ["thread", "multiprocessing"]
data_file = ".coverage"

[tool.coverage.paths]
source = [
    "src/anyrun",
    "*/site-packages/anyrun",
    "*/Lib/site-packages/anyrun"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]
show_missing = true
skip_covered = true
sort = "Cover"

[tool.coverage.html]
directory = "coverage_html"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
