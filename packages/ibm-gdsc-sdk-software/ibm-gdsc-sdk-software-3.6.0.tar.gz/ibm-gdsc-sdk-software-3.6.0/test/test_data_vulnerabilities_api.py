# coding: utf-8

"""
    IBM Guardium Data Security Center

    IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_software.api.data_vulnerabilities_api import DataVulnerabilitiesApi


class TestDataVulnerabilitiesApi(unittest.TestCase):
    """DataVulnerabilitiesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DataVulnerabilitiesApi()

    def tearDown(self) -> None:
        pass

    def test_add_vulnerability_status_comment(self) -> None:
        """Test case for add_vulnerability_status_comment

        Add vulnerability status comment
        """
        pass

    def test_get_vulnerabilities_summary(self) -> None:
        """Test case for get_vulnerabilities_summary

        Get vulnerabilities summary
        """
        pass

    def test_get_vulnerability(self) -> None:
        """Test case for get_vulnerability

        Get vulnerability details by ID
        """
        pass

    def test_list_vulnerabilities(self) -> None:
        """Test case for list_vulnerabilities

        List vulnerabilities based on an applied filter
        """
        pass

    def test_list_vulnerabilities_by_data_store(self) -> None:
        """Test case for list_vulnerabilities_by_data_store

        List vulnerabilities of data stores
        """
        pass

    def test_remove_vulnerability_status_comment(self) -> None:
        """Test case for remove_vulnerability_status_comment

        Delete vulnerability status comment
        """
        pass

    def test_set_vulnerability_status(self) -> None:
        """Test case for set_vulnerability_status

        Set status of a vulnerability
        """
        pass

    def test_update_vulnerability_status_comment(self) -> None:
        """Test case for update_vulnerability_status_comment

        Set vulnerability status
        """
        pass


if __name__ == '__main__':
    unittest.main()
