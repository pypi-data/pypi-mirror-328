# Job config.
#
# Usage:
#   oumi launch up --config configs/recipes/vision/llama3_2_vision/sft/11b_full/gcp_job.yaml --cluster llama3-2-vision
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html
#   - Config class: oumi.core.configs.JobConfig
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/job_config.py
#   - Other job configs: configs/**/*job.yaml

name: llama32v-11b-sft-train

resources:
  cloud: gcp
  accelerators: "A100-80GB:4"
  # If you don't have quota for a non-spot VM, try setting use_spot to true.
  # However, make sure you are saving your output to a mounted cloud storage in case of
  # preemption. For more information, see:
  # https://oumi.ai/docs/en/latest/user_guides/launch/launch.html#mount-cloud-storage
  use_spot: false
  disk_size: 1000 # Disk size in GBs

num_nodes: 1 # Set it to N for multi-node training.

# Upload working directory to remote ~/sky_workdir.
working_dir: .

# Mount local files.
file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials

  # Mount HF token, which is needed to download locked-down models from HF Hub.
  # This is created on your local machine by running `huggingface-cli login`.
  ~/.cache/huggingface/token: ~/.cache/huggingface/token

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: llama32v.11b.sft
  ACCELERATE_LOG_LEVEL: info
  TOKENIZERS_PARALLELISM: false

setup: |
  set -e
  pip install uv && uv pip install oumi[gpu] hf_transfer
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download meta-llama/Llama-3.2-11B-Vision-Instruct --exclude original/*

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  oumi distributed torchrun \
      -m oumi train \
      -c configs/recipes/vision/llama3_2_vision/sft/11b_full/train.yaml \
      --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
      --training.output_dir "${OUMI_RUN_NAME}" \
      --training.logging_dir "${OUMI_RUN_NAME}/runs"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
