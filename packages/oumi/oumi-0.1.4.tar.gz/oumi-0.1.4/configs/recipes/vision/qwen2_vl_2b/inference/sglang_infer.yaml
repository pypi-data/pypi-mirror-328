# Inference config.
#
# Usage:
#   oumi infer -i -c configs/recipes/vision/qwen2_vl_2b/inference/sglang_infer.yaml
#
# Sample command to start SGLang server:
# CUDA_VISIBLE_DEVICES=0 python -m sglang.launch_server \
#   --model-path Qwen/Qwen2-VL-2B-Instruct \
#   --port 6864 \
#   --disable-cuda-graph \
#   --mem-fraction-static=0.99 \
#   --trust-remote-code
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/infer/infer.html
#   - Config class: oumi.core.configs.InferenceConfig
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/inference_config.py
#   - Other inference configs: configs/**/inference/

model:
  model_name: "Qwen/Qwen2-VL-2B-Instruct"
  torch_dtype_str: "bfloat16"
  model_max_length: 4096
  chat_template: "qwen2-vl-instruct"
  trust_remote_code: True

generation:
  max_new_tokens: 64
  batch_size: 1

remote_params:
  # This address is just an example (it's what you usually get when you start sglang sever locally).
  # For production use, set it to a remote address/port.
  # For more details, see the following:
  # https://sgl-project.github.io/references/sampling_params.html
  # https://github.com/skypilot-org/skypilot/blob/master/llm/sglang/README.md
  api_url: "http://127.0.0.1:6864/generate"

engine: SGLANG
