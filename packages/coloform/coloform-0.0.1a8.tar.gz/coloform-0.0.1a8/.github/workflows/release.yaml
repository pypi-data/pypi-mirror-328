name: Release package

on:
  push:
    branches: [ "main" ]
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Build package
        run: |
          python -m pip install hatch
          hatch build

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  pypi-publish:
    name: Upload release to PyPI
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: coloform-pypi-release
      url: https://pypi.org/p/coloform

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download the dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign with Sigstore and upload to GitHub Release
    needs:
      - pypi-publish
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download the dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""

      - name: Upload signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"
