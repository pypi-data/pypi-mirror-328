import marshal
import base64
import zlib
import types
import sys

def load_protected_module():
    encrypted_code = "c$~dDTWlOhax*(K`<Pv7_*zlV^N^H8u0<}F6wS9JOQIy}tcPvMx)Ws`J)D^(N1B~k_Y5g=L*5Yw2cZNdmhT*hc4&AJ7zQs^U?#XA{>aD0z$J%#?FtKs7(jr4;DGpV54Hj0kdIXN?3<K*K!U8AHT|fruCD5?s_xc*QWZac;rmqvzynI56k4Ye^aP#oOn4H^1ViIGkIqhT@MUyw!Z+a~b*%1B1SSFreu9TGrv??T%Ewv7_cl8bQv51+v#vM@w9sl$^~629O9KOD05EqbJYWhHm_cX>LQB08A~bQi4$2KRm^(--qw;`JN!P0gfZeEgE>n^EFL70baoBN9wjJh#vEXp88=7fcjL?q%iaD*?Gb)OB9QKr{s1Ezml?&$`R>pZRQteq}$aICYIQV0*v<z2Tv|Z7<2y%MJeBz;~Pd&xDbY<_-?-Tg@v{d>VkmZNW5^Zx8wCGQu=clFKFc&U0bPB1Gty-dFh?r4P(X6B{Er_=@dq$K**-S2oQ?s^h8e-f;B1}!hQ;ABgK!_LNH>PNFqGd1W>e05OX=yfyVnjr$F4@|gI@)%OU=hp$A=8j`O}=%s4O7QL>a=GxE7G==iZo@J`mC*vib$KDu}8$%sA!u>@=bMXhN8}oh`q5`Y_v2;@t2eoMKh*H#Qx;GIFy_p6{jTm)-*C_4P``ZkH_#os5FtHA|L`-FqWo>?XoNv>${PpXtNd}QaKa+JB3Aqxi8PJ$DLpq&+#S~>>1O*D?^uz=~-!7l>|>ga->hPIO~LjrZuCROs_A78IGHV-A!6YM9r2!W}_f{-2`^q2L=Xe89I?nB30Hvog$Ve2+Gut1BZsC!Bj+RHkmY$4Kg8GRMa_DH<QpH+2WWa&LA~@v~9+=lh#O2k0sq!ktRiDvu9kgB}+1_HqizSRr_e$<P^;1R@<>{kj8qX3Vrt^-NIN8tdT<2l986Q-9miUkg=l0(n6TBjfnVXB?>YyZ;LQ3@u&z*(WHb_!#=I63HU_cnpM%lWmQ*Y+eDomfYuQyF9buH)21b8iNb12PMH!?qPLM|t5?){yAzP3He^6NHqff*hsUXCfss2v)taibc9fAU)xM%7RCCtu?2L#<k3FN8yFfa+K%uc%VT`4MNGb&pVUQ2Dq!XM(Y7$M(*a>|SVLKY}pa5=Qag~K_fGGaaC!4^1a>3bI*sYUzOHSe~JBcNU8UW7=f7UpFWh&1$h5X-yD1OI^vijpp;7~SjC>J>NIMDYf(3cJL=K}rtIzY)&MX)^nO(zwqzt7$oxi^ww!(U;8;dm`jw`x_HFMrW|bu!p|RU5CHrBb!&sWMAcn)!Z%R^1=^u;1S&&3!+PLa%|D3{ZBcjB(Rf$`xH1l@4r2Yq5qe^jCIWx%DPr#@lMfmpqGfI=CHGyX<+WMNhhJJDl&5PEG$E|I7XYwaxFl`YWu$t+Ca0G-aIm(=?r~|9%|BtN8xB!a*-F&ywXLqxhA;nr90)W9^jPR>nI(p`Io7SyU8%)w-^ko5F9Ue+_tCVt>jSe)oHuzD><D*Qnd{A`Ol=m>ND|NcutwdtPu=h9X(wWwN`#6Dy({Cs<(hEm5A4kR;pCXxW-<MIrRy6ni15I(}nv*3iHTIss!cp;;E#cE>B5Dw0+3I9?SY6IqVWm`y-$Il?+jLNfqJ^A4L(CBtDcor_=Mh3W)l@Ep@7AWAw!FLf^I$vH`%RW0-biWnpOaX3Oa(&#XjjZhd@F}i9v-U2tQW*HJR&L$jBQgIk5sW}`T$#Uv7YqG%3q&o@THj6btAgKTo4j0!=$wqsDGTMj1emsWP2LEi?PT=&stR}JFh;XP0xA?&;PHINnbi4(2TX8k5TG#{-gN^XAa)e3A6+75TeKujBeyGKBvVKWpOZknLY7F1M`raGahPGTo+mq&&Rqsc2AJn}stO?oX&RlcnW_a&|>%X}E?v3|uJPsdv6h4#<cjm&Kc^_Nv%~JrDU&@D?xZsmu-MxW(V~>NKkAj`+JF~%9E*Q&Gbphc?xaGYY>4A;TOn5XK9?gYESI%sPn%}u}_tKM=eXCbLn)qPi{WsR$$hJJ6Yk7XVs$Kh6;~(An;MV(zwM2GTS8i9==C0O!fZM+#PXYJ?#nlO4V~{U{9n}8zk1l+0;r&Z%mmcryd$g}FyRSdDuYcq6#?;2;+`i$J3k4=NTcex14(2%qlVdPB29skjB>>-k`;DIpg<-B-unac+_3sFGh0W&HC*fVI4ewrk?<!E(%|n;nJWvP(zs4Z{o#0#e<r$!czac8rynM;RoBUt*pBg&7lltvW{*1u<Ry=ryXa0@nAn$mT`1aoDKcMz6z#pwpaay6@_TQmymXOA4tjQ9sc<c(xbf?CiK`_l!x0h*c!DK(=z_NQ3E>%~s@g8cMUo{8g)Qx*@c(5G<8{|>EiwscmeaIAOcohF49Bs<>4qCkxtvs{_pV3;?PYK;3+@MbARR?W5s(J}fQ(r@eD~-|st&Q7{a_>!OZ&I4Kx9>{$ZLpcj&T`*c4Q!EOnetyQ;zL(Us_(37sE8a@WE^76+aliZC?SymQksHLjKsA#5<P>Ygc_|{8Q7;|Tk+KxfWM|6P#SpU8@rak9#`7-JD{;LpVfT*(sOV3W$IT{geGPK?64;qa~QBB=mjWSc=DpSOf1bGc{moywrnPn$5IC;rwhza7I=@2=_Z(2>sYjmb{x~_0PyWHm1%m(O&jw4Qy)IJ-nf41VM}&*Z*F&QsR=a#ZfaL)zT!EM#|YmozGmKr6H6)t*;B;I;gW~vQ}u3999L~g)2$KSq4|_&giraq#VcTo;naq0VJg@yUU0n$)U@FBvIkcOfHa(8FdDYZDHcu`BC*eyzy<Ip(1I;>s-auFEG3e<D!S$vkKZL$=>x}aN3cGyC|?GT`2g#qX{q}7TXST+N<E-y>Rz*g53e+ww^2Jq+|n?G&HY><Kz20{7{gMZPoiU~1K*{9BGx4=|4sn^1^++={nsJ=hW@9^pEvx&)n8wA%aw^JfOs14tUlMFSm*#|g@a>8!gAP~riPsqULH=UfZ;kSUx5)cg4<YJN1WB0WoOl}g==&M>W^YRU#H1Bd0JcykUoFyUnby_ZF(u!^wRSAJnO0Nd$N1q>TB<}thMABDCH>tzu)&<+Ve4w{Xm{8RuZs$Ht(glP)2CWvTe&}pN3l>hdUmHJF?+OE*!~I0q#xOg?9og%*vHbzi|KPDs%rR{+IQOD?X^nG(}gH^uU@988>D9(L&2Wx;cF-*V+d;H)Z_;E54^e;lB6Y*y`}3;DJo=z-Fi^({d`^zs`L;3K>Wn<DZ9r{j!^flntF)IZLqm(g)IWA9q2<P1#W2%Gs5(PjTDidjDs`e>Ysv;+5a^<W5gOF57=S2k`Lq+~Mnh<fd$BlJpBUE?*={g}4Z$y=A=;&+^~cvv7E|rm5|ITYL*xm^lia1y8W;#f?(4#+8b=_8C2x+IYL7$DhQL@k50nT%CC)SG8mOKX5foDcs-E#Aj|lg135vB}VaqXJKl+$z5)R1F!FY+rQ}9;_F$(yS+zVWKjTn%V|1=OALkvy~u32G~-i;PU&Fm+(_MZK^Ad6#qFxNS7fQcn{U49-v4}w38WY(BRqJ7Ni}H+d>d1Y{UIfl)N_SOpqSK6Ti2%Gl#g?yUAI%=0)nN2!$StHw!r3KpSI;vvE=O@P}A79?#8}udrc@cp6;`jMfzROy*=2<I$n27$nlmfA=|?D3`LvE>YAZenO%Mi2kEZkdu~$3k|Ng=6&AOIpg;#JLgC0e)AFjD(#;$8KmY6>fA*XC?BFZ8!B?Pal`XZB?YU)RlBr@xgdIDXtRGMIj%SYk%uA*cxJ;oTKp-H(xXd#!GpAmi#|JB8deWVzRprOgMXb2*n}>?$fek-)-Qn|YT9r4L%;?LR7*6+P_Y29jFgSeR;P|8^;gi%g8=b_QdC^%sD!KFV6&P}Oa=k+&?d&jARZ*29v*=Ykw3jNJa$a;jN3eol^kcGY0W0YG3^4Mc`gca|j@%i$H?};!>1({NWPE!dZ3<2Ar0%9x4`+o#IpI+Ht(*{fEc84QdN#PMFpv`lHlS+wv2gs6a6BuV$O$J_*cEm&u;c!LmHjLGi~SE~1u-Xx>4u!p{#b}S5+dtR70U^+4X8TuSQvgJ3}=PWoG`k==Dn<dPfi5@PAEh*?tHN47kgI6vkk4ehSudDZW7(E?*Wi)c{K+mwt2HCXGrNE0mz2W=fdZgFM>aLXZY^$=f^VPYxjSWMrkD*etvx-8y?Jr2Y;8!1}AdCi3~g8>cN{tpg~)%v<Wy?B)0x1G~PXdnp>?JE96n&{Gc#v9(?by=)uwJB2D6V4%be5ma0w<ivMAth620D-YkuOvxK|-9T!CV%)?;KT@q(k+*>SiH@zk7P}vG^cdu2$iPvtbpyREzeeIOpTy8%Ahw~+$QfIeR^zqfk@*jF+&oxTfvE=)y?{eW=z72^8sVC$Hv>e_SEFxaJ;*?~8HHG-TDzYbr*VS8;bSB^gnud_JctNYgM<5_h!l9tlt<>gr9T9&tBiZ7DIV;|l3>yctis`<4ko$4yR_Z}Auep~p<uT4y*?YHZ#e)g&z5rMY76gN-&#u8h5(4JMSBOs_BVb-+mBiX2M4>9!_P8m}7G_<ZF}|oLCmpLe3__}GyEMqviZ}yO0UI$L6<<N-oCXYCx_JJYn4E<%3nP};#D^uxSSWZe@+M#+%z!Q#?l4jOfQ3w5Ekvq@?XbWWO7)zq)Jfdbb@MjvU*@&qTs8uyjs~7T=Smoh+J+;F^zZlugg<xTl}oQ(IdSpI2p@}z<EGI8^HJkq=0HY<dK+}uCBm5SjbgEOMno+xy7muiD~VKKXbyyfv}w(dbRvx?-&-RAOCv{-3K>NCK7xZKPddd3<E7Q+M(RYaU1H&K3Ja*>hAhe-0iG{i?6^W$1eMt);GG-CcqV=U6d_*-`LUlal5tN&e1BBDAl*_$3#+I2s)k9qp+tug?*LS!NmDwo`@;XFd<LT8>zHM55vVkVXn+I?i|d@BnBZ$P$ta$+qx@i0JfYx)p1@Bp7AUzA4Mro2N5eg^wC5{UY?L307B)|DxdVe0Ya8L$LUj%=5r{DC!aXNH92HL+L_U(PmqbbS2JzXLhw2kQ-y3t;B-;WcttsyH0PMgdOb)aH#FD^765)3;=s*^WW?;$ULouOU+6CmvQ<dZy5jG6AB}6<)f^RJtwlp7gUK~2oH~50o8<*q5M+V|U@{rQkJ3QDQA5>nL8h&9&l?JB<j|}%tDO1DpRIG1kP#*4=dXL27L-Cm0D^EdS<&%=y<Slg})s+A)x^-PjNImB<>^>4b(mfbE*?rD{U}09ayRXcmDYN?wQdQWYTmn{&?)X7<mNczeB)UxPZ5L1D8`@$(ink|TUL$<Fcrg+pr$~fdgu}{U0-d0%GomcVE0Y&t5;nlzpD{I1nByyqfNtQv_<ae*Fd*k|KRMu{YZ%}cCp3lodSzY1X2TE5FbR}Z64fAl=(n){DOyoCWMP0;gzwcf+}=oTWAi%?af449+tVkrjUBnhjujuoE<1mar>MhkFaYar6yRofZ=Pz3oTi`B{yc{>ZZXeO9)CVqQBj0-XNr*9+03u_zll+edopcGra{d%sJRAp#rw2r_j{wcrsp3w^*(Cq-E4euGrT{~QO$jSpqOU<YYd<tPu1^T9m?%JynZ6LH=5f!klTAKD;&=W$5+@V!a)c=gu^-EaK?Z5+usM9^Aybumcgbl@b~gY>#yPu;~8N9Cx2~n??eF?z81cn`T0raq?h`_%b)CGzNl|F*};6#O5=P72Qbp)c)@Ie#u1Jq5Dp;_N7Ui^RfKOi9KT)oZwl@*5YD;AF<N*}B#)8g{gEh`=-ctS?-S(i%L$Y=ox7UwY9Z=#qik|BLXHFeF<7Frx_S(~Md61LP;M_km=aBIQtg>%r%kFUQ%sxG{!De+qz+}aOL=xDy))gEr{J^ROg^<Bwx4cZJ-K!+PeEq=z`C_@YJL7;loV^hv1YnywQa2{PeEq=2>H~4u4ei=eP70f>-1{jyAAB>r3Y6|-aDVCAd_w<pY?+q?1sD%$UQ$o%FhHur2hk(H0Tu"
    try:
        code = base64.b85decode(encrypted_code.encode())
        code = zlib.decompress(code)
        code = marshal.loads(code)
        module = types.ModuleType("datasans_pandamatic.core")
        exec(code, module.__dict__)
        return module
    except Exception as e:
        raise ImportError(f"Failed to load protected module: {str(e)}")

try:
    core = load_protected_module()
    gen = core.gen
except Exception as e:
    print(f"Error loading module: {str(e)}")
    raise
