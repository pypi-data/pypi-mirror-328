[project]
name = "django-opensearch-toolkit"
version = "0.1.0"
description = "A Django app for interacting with OpenSearch clusters"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "David Tagliamonti", email = "dtag@ambient.ai" }]
requires-python = ">=3.9"
dynamic = ["dependencies"]
classifiers = [
	"Environment :: Web Environment",
	"Framework :: Django",
	"Intended Audience :: Developers",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
	"Operating System :: OS Independent",
	"Typing :: Typed",
]


[project.urls]
Homepage = "https://github.com/AmbientAI/django-opensearch-toolkit"
Repository = "https://github.com/AmbientAI/django-opensearch-toolkit"
Issues = "https://github.com/AmbientAI/django-opensearch-toolkit/issues"
Changelog = "https://github.com/AmbientAI/django-opensearch-toolkit/blob/main/CHANGELOG.md"


[build-system]
requires = ["setuptools>=61.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"


[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }


[tool.setuptools.packages.find]
include = ["django_opensearch_toolkit*"]
exclude = ["*tests*"]


[tool.black]
line-length = 110


[tool.flake8]
max-line-length = 110
ignore = [
	"ANN101", # Missing type annotation for self in method
	"ANN102", # Missing type annotation for cls in classmethod
	"ANN002", # Missing type annotation for *args
	"ANN003", # Missing type annotation for **kwargs
	"ANN401", # Dynamically typed expressions (typing.Any) are disallowed
	"E203",   # whitespace before ':' (conflicts with black)
	"W503",   # line break before binary operator  (conflicts with black)
	"D106",   # Missing docstring in public nested class
	"D107",   # Missing docstring in __init__
]
per-file-ignores = """
    __init__.py: F401,D104
    test_*: D102
"""


[[tool.mypy.overrides]]
module = 'parameterized.*'
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = 'openmock.*'
ignore_missing_imports = true
