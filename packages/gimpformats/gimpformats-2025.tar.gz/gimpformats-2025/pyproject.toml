[project]
name = "gimpformats"
version = "2025"
description = "Pure python implementation of the gimp file format(s)"
authors = [{ name = "FredHappyface" }]
requires-python = ">=3.9"
readme = "README.md"
license = "lgpl-3.0-only"
classifiers = [
	"Development Status :: 3 - Alpha",
	"Intended Audience :: Developers",
	"Intended Audience :: Education",
	"Natural Language :: English",
	"Operating System :: OS Independent",
	"Programming Language :: Python :: Implementation :: CPython",
	"Topic :: Multimedia :: Graphics",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Utilities",
]
dependencies = [
    "blendmodes>=2025",
    "brackettree>=0.2.5",
    "loguru>=0.7.3",
    "numpy>=2.0.2",
    "pillow>=10.4.0",
]

[project.urls]
Homepage = "https://github.com/FHPythonUtils/GimpFormats"
Repository = "https://github.com/FHPythonUtils/GimpFormats"
Documentation = "https://github.com/FHPythonUtils/GimpFormats/blob/master/README.md"

[dependency-groups]
dev = [
    "coverage>=7.6.12",
    "handsdown>=2.1.0",
    "imgcompare>=2.0.1",
    "pyright>=1.1.394",
    "pytest>=8.3.4",
    "ruff>=0.9.7",
    "safety>=3.3.0",
]

[tool.hatch.build.targets.sdist]
# Tests include some massive files so exclude these from built packages
exclude = ["/tests"]

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
	"COM812", # enforce trailing comma
	"D2",     # pydocstyle formatting
	"ISC001",
	"N",      # pep8 naming
	"PLR09",  # pylint refactor too many
	"TCH",    # type check blocks
	"W191",   # ignore this to allow tabs
	"ANN401",
	# Temp
	"PTH",
	"PLR2004",
	"TD00",

]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = [
	"D",
	"S101",
	"E402",
	"ERA001",
	# Temp
	"SIM115", # Use a context manager for opening files
]
"**/{test_informal}/*" = [
	"ALL"
]


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all" # Disallow all relative imports.

[tool.ruff.format]
indent-style = "tab"
docstring-code-format = true
line-ending = "lf"

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.coverage.run]
branch = true

[tool.tox]
legacy_tox_ini = """
[tox]
env_list =
	py311
	py310
	py39
	py38

[testenv]
deps =
	imgcompare
	pytest
commands = pytest tests
"""

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
