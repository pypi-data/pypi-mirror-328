[workspace]
members = ["lib/*"]

[workspace.package]
edition = "2021"

[workspace.dependencies]
constants = { path = "lib/constants" }

tracing = "0.1.40"

[package]
name = "prefligit"
version = "0.0.9"
authors = ["j178 <hi@j178.dev>"]
description = "pre-commit implemented in Rust"
repository = "https://github.com/j178/prefligit"
homepage = "https://github.com/j178/prefligit"
edition.workspace = true
license-file = "LICENSE"

[features]
default = ["docker"]
profiler = ["dep:pprof", "profiler-flamegraph"]
profiler-flamegraph = ["pprof/flamegraph"]
docker = []

[dependencies]
constants = { workspace = true }

anstream = "0.6.15"
anyhow = "1.0.86"
assert_cmd = { version = "2.0.16", features = ["color"] }
axoupdater = { version = "0.9.0", default-features = false, features = [ "github_releases"] }
bstr = "1.11.0"
clap = { version = "4.5.16", features = ["derive", "env", "string", "wrap_help"] }
clap_complete = "4.5.37"
ctrlc = "3.4.5"
dunce = "1.0.5"
etcetera = "0.8.0"
fancy-regex = "0.14.0"
fs-err = { version = "3.1.0", features = ["tokio"] }
fs2 = "0.4.3"
futures = "0.3.31"
hex = "0.4.3"
http = "1.1.0"
indicatif = "0.17.8"
indoc = "2.0.5"
itertools = "0.14.0"
miette = { version = "7.5.0", features = ["fancy-no-backtrace"] }
owo-colors = "4.1.0"
rand = "0.9.0"
rayon = "1.10.0"
reqwest = { version = "0.12.9", default-features = false }
same-file = "1.0.6"
seahash = "4.1.0"
serde = { version = "1.0.210", features = ["derive"] }
serde_json = "1.0.132"
serde_yaml = "0.9.34"
shlex = "1.3.0"
tempfile = "3.13.0"
textwrap = "0.16.1"
thiserror = "2.0.11"
tokio = { version = "1.40.0", features = ["fs", "process", "rt", "sync", "macros"] }
tracing.workspace = true
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
unicode-width = "0.2.0"
url = { version = "2.5.2", features = ["serde"] }
which = "7.0.1"

[target.'cfg(unix)'.dependencies]
libc = "0.2.164"
pprof = { version = "0.14.0", optional = true }

[dev-dependencies]
assert_fs = "1.1.2"
etcetera = "0.8.0"
insta = { version = "1.40.0", features = ["filters"] }
insta-cmd = "0.6.0"
predicates = "3.1.2"
regex = "1.11.0"

[build-dependencies]
fs-err = "3.1.0"

[lints]
workspace = true

[workspace.lints.rust]
dead_code = "allow"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -2 }
# Allowed pedantic lints
char_lit_as_u8 = "allow"
collapsible_else_if = "allow"
collapsible_if = "allow"
implicit_hasher = "allow"
map_unwrap_or = "allow"
match_same_arms = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
similar_names = "allow"
too_many_arguments = "allow"
too_many_lines = "allow"
used_underscore_binding = "allow"
# Disallowed restriction lints
print_stdout = "warn"
print_stderr = "warn"
dbg_macro = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
get_unwrap = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"

[profile.bench]
opt-level = 3
debug = true # used by the profiler
strip = false # keep symbols for the profiler

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
