# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.contract_to_create_payg_tasks import ContractToCreatePaygTasks

class TestContractToCreatePaygTasks(unittest.TestCase):
    """ContractToCreatePaygTasks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContractToCreatePaygTasks:
        """Test ContractToCreatePaygTasks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContractToCreatePaygTasks`
        """
        model = ContractToCreatePaygTasks()
        if include_optional:
            return ContractToCreatePaygTasks(
                title = '',
                country_code = 'US',
                state_code = '',
                scope_of_work = '',
                special_clause = '',
                termination_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                client = dima_sdk.models.contract_to_create_shared_client.ContractToCreate_Shared_client(
                    legal_entity = dima_sdk.models.contract_to_create_shared_client_legal_entity.ContractToCreate_Shared_client_legal_entity(
                        id = '00000000-0000-0000-0000-000000000000', ), 
                    team = dima_sdk.models.contract_to_create_shared_client_team.ContractToCreate_Shared_client_team(
                        id = '00000000-0000-0000-0000-000000000000', ), ),
                job_title = dima_sdk.models.contract_to_create_shared_job_title.ContractToCreate_Shared_job_title(
                    id = '', 
                    name = '', ),
                seniority = dima_sdk.models.contract_to_create_shared_seniority.ContractToCreate_Shared_seniority(
                    id = null, ),
                notice_period = 15,
                who_reports = '',
                meta = dima_sdk.models.meta_data_of_contract_to_create.MetaDataOfContractToCreate(
                    documents_required = True, 
                    is_main_income = True, ),
                external_id = '',
                worker = dima_sdk.models.contract_to_create_shared_worker.ContractToCreate_Shared_worker(
                    expected_email = '01234', 
                    first_name = 'John', 
                    last_name = 'Doe', ),
                type = 'payg_tasks',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                compensation_details = dima_sdk.models.compensation_details_of_contract_to_create_shared.CompensationDetailsOfContractToCreate_Shared(
                    amount = 100, 
                    currency_code = 'GBP', 
                    frequency = 'monthly', 
                    cycle_end = 15, 
                    cycle_end_type = 'DAY_OF_WEEK', 
                    payment_due_type = 'REGULAR', 
                    payment_due_days = 7, 
                    pay_before_weekends = True, 
                    first_payment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    first_payment = 500, 
                    notice_period = 15, )
            )
        else:
            return ContractToCreatePaygTasks(
                title = '',
                client = dima_sdk.models.contract_to_create_shared_client.ContractToCreate_Shared_client(
                    legal_entity = dima_sdk.models.contract_to_create_shared_client_legal_entity.ContractToCreate_Shared_client_legal_entity(
                        id = '00000000-0000-0000-0000-000000000000', ), 
                    team = dima_sdk.models.contract_to_create_shared_client_team.ContractToCreate_Shared_client_team(
                        id = '00000000-0000-0000-0000-000000000000', ), ),
                job_title = dima_sdk.models.contract_to_create_shared_job_title.ContractToCreate_Shared_job_title(
                    id = '', 
                    name = '', ),
                meta = dima_sdk.models.meta_data_of_contract_to_create.MetaDataOfContractToCreate(
                    documents_required = True, 
                    is_main_income = True, ),
                type = 'payg_tasks',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                compensation_details = dima_sdk.models.compensation_details_of_contract_to_create_shared.CompensationDetailsOfContractToCreate_Shared(
                    amount = 100, 
                    currency_code = 'GBP', 
                    frequency = 'monthly', 
                    cycle_end = 15, 
                    cycle_end_type = 'DAY_OF_WEEK', 
                    payment_due_type = 'REGULAR', 
                    payment_due_days = 7, 
                    pay_before_weekends = True, 
                    first_payment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    first_payment = 500, 
                    notice_period = 15, ),
        )
        """

    def testContractToCreatePaygTasks(self):
        """Test ContractToCreatePaygTasks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
