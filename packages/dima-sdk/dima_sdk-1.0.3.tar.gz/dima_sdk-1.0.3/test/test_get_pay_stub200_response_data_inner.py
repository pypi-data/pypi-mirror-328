# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.get_pay_stub200_response_data_inner import GetPayStub200ResponseDataInner

class TestGetPayStub200ResponseDataInner(unittest.TestCase):
    """GetPayStub200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPayStub200ResponseDataInner:
        """Test GetPayStub200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPayStub200ResponseDataInner`
        """
        model = GetPayStub200ResponseDataInner()
        if include_optional:
            return GetPayStub200ResponseDataInner(
                source = 'NEW',
                employees = [
                    dima_sdk.models.get_pay_stub_200_response_data_inner_employees_inner.getPayStub_200_response_data_inner_employees_inner(
                        gross_pay = 1000, 
                        contract_id = 'mqj9gkr', 
                        employee_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479', 
                        hours_worked = 40, 
                        contributions = [
                            dima_sdk.models.get_pay_stub_200_response_data_inner_employees_inner_contributions_inner.getPayStub_200_response_data_inner_employees_inner_contributions_inner(
                                name = '401k', 
                                type = 'Roth', 
                                amount = 100, )
                            ], 
                        employer_contributions = [
                            dima_sdk.models.get_pay_stub_200_response_data_inner_employees_inner_employer_contributions_inner.getPayStub_200_response_data_inner_employees_inner_employer_contributions_inner(
                                name = '401k', 
                                type = 'Match Rate', 
                                amount = 100, )
                            ], )
                    ],
                payroll_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                payment_date = '2021-01-01',
                payment_type = 'REGULAR',
                payment_status = 'OPEN',
                payroll_end_date = '2021-01-15',
                payroll_schedule = 'BIWEEKLY',
                payroll_start_date = '2021-01-01'
            )
        else:
            return GetPayStub200ResponseDataInner(
        )
        """

    def testGetPayStub200ResponseDataInner(self):
        """Test GetPayStub200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
