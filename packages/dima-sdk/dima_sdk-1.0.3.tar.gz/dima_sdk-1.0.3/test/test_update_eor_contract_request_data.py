# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.update_eor_contract_request_data import UpdateEorContractRequestData

class TestUpdateEorContractRequestData(unittest.TestCase):
    """UpdateEorContractRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateEorContractRequestData:
        """Test UpdateEorContractRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateEorContractRequestData`
        """
        model = UpdateEorContractRequestData()
        if include_optional:
            return UpdateEorContractRequestData(
                scope = 'Development of web applications',
                salary = 100000,
                benefits = [
                    dima_sdk.models.update_eor_contract_request_data_benefits_inner.updateEorContract_request_data_benefits_inner(
                        plan_id = 'PLAN123', 
                        cover_all = True, 
                        provider_id = 'PROV123', 
                        contribution = 500, 
                        cover_dependents = False, )
                    ],
                currency = 'USD',
                end_date = 'Wed Jan 01 01:00:00 CET 2025',
                holidays = 20,
                is_hourly = False,
                job_title = 'Software Engineer',
                work_visa = False,
                start_date = 'Mon Jan 01 01:00:00 CET 2024',
                employee_id = 'EMP123',
                hourly_rate = 50,
                is_resubmit = False,
                schedule_id = 'SCH123',
                seniority_id = 1,
                work_pension = True,
                signing_bonus = 5000,
                time_off_type = 'PRORATED',
                employee_email = 'john.doe@example.com',
                seniority_date = 'Mon Jan 01 01:00:00 CET 2024',
                employment_type = 'Full-time',
                sick_leave_days = 10,
                employee_address = dima_sdk.models.update_eor_contract_request_data_employee_address.updateEorContract_request_data_employee_address(
                    zip = '94105', 
                    city = 'San Francisco', 
                    phone = '4151234567', 
                    state = 'California', 
                    street = '123 Main Street', 
                    country = 'United States', 
                    province = 'Northern California', 
                    calling_code = '+1', ),
                employment_state = 'California',
                hiring_objective = 'CONVERTING_CONTRACTOR',
                probation_period = 3,
                work_arrangement = 'REMOTE',
                work_eligibility = dima_sdk.models.update_eor_contract_request_data_work_eligibility.updateEorContract_request_data_work_eligibility(
                    key = 'work-eligibility-doc-123', 
                    file_name = 'work_permit_2024.pdf', ),
                medical_insurance = True,
                contract_term_type = 'DEFINITE',
                employee_last_name = 'Doe',
                employment_country = 'United States',
                notice_period_type = 'STANDARD',
                employee_first_name = 'John',
                work_hours_per_week = 40,
                employee_nationality = 'American',
                reason_for_fixed_term = 'PROJECT_BASED_EMPLOYMENT',
                quote_additional_fields = dima_sdk.models.update_eor_contract_request_data_quote_additional_fields.updateEorContract_request_data_quote_additional_fields(
                    employee_type = 'Employee', 
                    qualifications = 'Bachelor's degree', 
                    scope_german_translation = '', 
                    qualifications_german_translation = '', ),
                signing_bonus_payout_type = 'FIRST_CYCLE',
                hiring_objective_extra_info = 'Replacing employee on leave',
                notice_period_after_probation = 60,
                notice_period_during_probation = 30,
                is_auto_quote_validation_passed = True,
                probation_period_type_for_definite = 'STANDARD',
                allow_consultant_equipment_reimbursement = True
            )
        else:
            return UpdateEorContractRequestData(
                salary = 100000,
                job_title = 'Software Engineer',
                start_date = 'Mon Jan 01 01:00:00 CET 2024',
                employee_email = 'john.doe@example.com',
                employment_type = 'Full-time',
                employee_last_name = 'Doe',
                employment_country = 'United States',
                employee_first_name = 'John',
        )
        """

    def testUpdateEorContractRequestData(self):
        """Test UpdateEorContractRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
