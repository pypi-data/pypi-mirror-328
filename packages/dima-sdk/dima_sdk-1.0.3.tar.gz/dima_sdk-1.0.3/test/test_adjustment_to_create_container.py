# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.adjustment_to_create_container import AdjustmentToCreateContainer

class TestAdjustmentToCreateContainer(unittest.TestCase):
    """AdjustmentToCreateContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdjustmentToCreateContainer:
        """Test AdjustmentToCreateContainer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdjustmentToCreateContainer`
        """
        model = AdjustmentToCreateContainer()
        if include_optional:
            return AdjustmentToCreateContainer(
                data = dima_sdk.models.adjustment_to_create.AdjustmentToCreate(
                    contract_id = 'm3jk2j', 
                    amount = 100.25, 
                    date_of_adjustment = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    title = 'Your title here', 
                    description = 'Your description here', 
                    cycle_reference = 'my_cycle_reference', 
                    file = bytes(b'blah'), 
                    adjustment_category_id = 'c9cf4c2c0165f48f494415390c3b49', 
                    move_next_cycle = True, 
                    vendor = 'Vendor', 
                    country = 'US', )
            )
        else:
            return AdjustmentToCreateContainer(
                data = dima_sdk.models.adjustment_to_create.AdjustmentToCreate(
                    contract_id = 'm3jk2j', 
                    amount = 100.25, 
                    date_of_adjustment = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    title = 'Your title here', 
                    description = 'Your description here', 
                    cycle_reference = 'my_cycle_reference', 
                    file = bytes(b'blah'), 
                    adjustment_category_id = 'c9cf4c2c0165f48f494415390c3b49', 
                    move_next_cycle = True, 
                    vendor = 'Vendor', 
                    country = 'US', ),
        )
        """

    def testAdjustmentToCreateContainer(self):
        """Test AdjustmentToCreateContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
