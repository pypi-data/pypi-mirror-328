# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.create_shift_rate_request_body_container import CreateShiftRateRequestBodyContainer

class TestCreateShiftRateRequestBodyContainer(unittest.TestCase):
    """CreateShiftRateRequestBodyContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateShiftRateRequestBodyContainer:
        """Test CreateShiftRateRequestBodyContainer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateShiftRateRequestBodyContainer`
        """
        model = CreateShiftRateRequestBodyContainer()
        if include_optional:
            return CreateShiftRateRequestBodyContainer(
                data = dima_sdk.models.create_shift_rate_request_body_container_data.CreateShiftRateRequestBodyContainer_data(
                    external_id = 'rate-1121', 
                    name = 'Regular', 
                    type = 'MULTIPLIER_PERCENTAGE', 
                    value = 100, )
            )
        else:
            return CreateShiftRateRequestBodyContainer(
                data = dima_sdk.models.create_shift_rate_request_body_container_data.CreateShiftRateRequestBodyContainer_data(
                    external_id = 'rate-1121', 
                    name = 'Regular', 
                    type = 'MULTIPLIER_PERCENTAGE', 
                    value = 100, ),
        )
        """

    def testCreateShiftRateRequestBodyContainer(self):
        """Test CreateShiftRateRequestBodyContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
