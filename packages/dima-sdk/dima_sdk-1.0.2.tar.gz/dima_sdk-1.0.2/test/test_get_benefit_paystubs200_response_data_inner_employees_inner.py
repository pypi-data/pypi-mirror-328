# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.get_benefit_paystubs200_response_data_inner_employees_inner import GetBenefitPaystubs200ResponseDataInnerEmployeesInner

class TestGetBenefitPaystubs200ResponseDataInnerEmployeesInner(unittest.TestCase):
    """GetBenefitPaystubs200ResponseDataInnerEmployeesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetBenefitPaystubs200ResponseDataInnerEmployeesInner:
        """Test GetBenefitPaystubs200ResponseDataInnerEmployeesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetBenefitPaystubs200ResponseDataInnerEmployeesInner`
        """
        model = GetBenefitPaystubs200ResponseDataInnerEmployeesInner()
        if include_optional:
            return GetBenefitPaystubs200ResponseDataInnerEmployeesInner(
                gross_pay = 1000,
                contract_id = '48fjd3',
                employee_id = '40233e16-a043-4c68-85c1-6a369755b5a5',
                hours_worked = '40',
                contributions = [
                    dima_sdk.models.get_benefit_paystubs_200_response_data_inner_employees_inner_contributions_inner.getBenefitPaystubs_200_response_data_inner_employees_inner_contributions_inner(
                        name = '401k', 
                        type = 'Roth', 
                        amount = 100, )
                    ],
                employer_contributions = [
                    dima_sdk.models.get_benefit_paystubs_200_response_data_inner_employees_inner_employer_contributions_inner.getBenefitPaystubs_200_response_data_inner_employees_inner_employerContributions_inner(
                        name = '401k', 
                        type = 'Match Rate', 
                        amount = 100, )
                    ]
            )
        else:
            return GetBenefitPaystubs200ResponseDataInnerEmployeesInner(
        )
        """

    def testGetBenefitPaystubs200ResponseDataInnerEmployeesInner(self):
        """Test GetBenefitPaystubs200ResponseDataInnerEmployeesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
