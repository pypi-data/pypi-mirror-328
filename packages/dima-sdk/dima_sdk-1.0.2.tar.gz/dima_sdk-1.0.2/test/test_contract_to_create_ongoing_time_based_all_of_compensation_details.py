# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.contract_to_create_ongoing_time_based_all_of_compensation_details import ContractToCreateOngoingTimeBasedAllOfCompensationDetails

class TestContractToCreateOngoingTimeBasedAllOfCompensationDetails(unittest.TestCase):
    """ContractToCreateOngoingTimeBasedAllOfCompensationDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContractToCreateOngoingTimeBasedAllOfCompensationDetails:
        """Test ContractToCreateOngoingTimeBasedAllOfCompensationDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContractToCreateOngoingTimeBasedAllOfCompensationDetails`
        """
        model = ContractToCreateOngoingTimeBasedAllOfCompensationDetails()
        if include_optional:
            return ContractToCreateOngoingTimeBasedAllOfCompensationDetails(
                amount = 1.337,
                currency_code = 'GBP',
                frequency = 'monthly',
                cycle_end = 15,
                cycle_end_type = 'DAY_OF_WEEK',
                payment_due_type = 'REGULAR',
                payment_due_days = 7,
                pay_before_weekends = True,
                first_payment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                first_payment = 500,
                notice_period = 15,
                scale = 'daily'
            )
        else:
            return ContractToCreateOngoingTimeBasedAllOfCompensationDetails(
                amount = 1.337,
                currency_code = 'GBP',
                frequency = 'monthly',
                cycle_end = 15,
                cycle_end_type = 'DAY_OF_WEEK',
                payment_due_type = 'REGULAR',
                payment_due_days = 7,
                scale = 'daily',
        )
        """

    def testContractToCreateOngoingTimeBasedAllOfCompensationDetails(self):
        """Test ContractToCreateOngoingTimeBasedAllOfCompensationDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
