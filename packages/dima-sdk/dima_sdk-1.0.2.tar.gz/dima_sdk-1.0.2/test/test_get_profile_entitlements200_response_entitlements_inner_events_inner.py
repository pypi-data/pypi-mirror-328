# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.get_profile_entitlements200_response_entitlements_inner_events_inner import GetProfileEntitlements200ResponseEntitlementsInnerEventsInner

class TestGetProfileEntitlements200ResponseEntitlementsInnerEventsInner(unittest.TestCase):
    """GetProfileEntitlements200ResponseEntitlementsInnerEventsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetProfileEntitlements200ResponseEntitlementsInnerEventsInner:
        """Test GetProfileEntitlements200ResponseEntitlementsInnerEventsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetProfileEntitlements200ResponseEntitlementsInnerEventsInner`
        """
        model = GetProfileEntitlements200ResponseEntitlementsInnerEventsInner()
        if include_optional:
            return GetProfileEntitlements200ResponseEntitlementsInnerEventsInner(
                id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                type = 'ACCRUAL',
                amount = 8,
                policy_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                created_at = '2022-01-01T00:00Z',
                event_date = '2022-01-01T00:00Z',
                profile_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                updated_at = '2022-01-01T00:00Z',
                description = 'Event description',
                time_off_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                accrual_date = '2022-01-01T00:00Z',
                expiration_date = '2022-01-01T00:00Z',
                tracking_period = '2022-01-01T00:00Z',
                rollover_tracking_period = '2022-01-01T00:00Z'
            )
        else:
            return GetProfileEntitlements200ResponseEntitlementsInnerEventsInner(
                id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                type = 'ACCRUAL',
                amount = 8,
                policy_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                created_at = '2022-01-01T00:00Z',
                profile_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                updated_at = '2022-01-01T00:00Z',
                tracking_period = '2022-01-01T00:00Z',
        )
        """

    def testGetProfileEntitlements200ResponseEntitlementsInnerEventsInner(self):
        """Test GetProfileEntitlements200ResponseEntitlementsInnerEventsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
