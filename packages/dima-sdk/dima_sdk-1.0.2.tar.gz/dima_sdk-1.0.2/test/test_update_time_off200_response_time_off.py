# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.update_time_off200_response_time_off import UpdateTimeOff200ResponseTimeOff

class TestUpdateTimeOff200ResponseTimeOff(unittest.TestCase):
    """UpdateTimeOff200ResponseTimeOff unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateTimeOff200ResponseTimeOff:
        """Test UpdateTimeOff200ResponseTimeOff
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateTimeOff200ResponseTimeOff`
        """
        model = UpdateTimeOff200ResponseTimeOff()
        if include_optional:
            return UpdateTimeOff200ResponseTimeOff(
                id = '',
                amount = 1.337,
                reason = '',
                status = 'REQUESTED',
                is_paid = True,
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                approved_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                contract_oid = '',
                requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                half_end_date = True,
                time_off_type = dima_sdk.models.get_time_offs_query_for_organization_200_response_data_inner_time_off_type.getTimeOffsQueryForOrganization_200_response_data_inner_time_off_type(
                    id = '', 
                    name = '', 
                    policy = dima_sdk.models.get_time_offs_query_for_organization_200_response_data_inner_time_off_type_policy.getTimeOffsQueryForOrganization_200_response_data_inner_time_off_type_policy(
                        id = '', 
                        name = '', 
                        policy_type = dima_sdk.models.get_time_offs_query_for_organization_200_response_data_inner_time_off_type_policy_policy_type.getTimeOffsQueryForOrganization_200_response_data_inner_time_off_type_policy_policy_type(
                            id = '', 
                            name = '', ), ), ),
                half_start_date = True,
                deduction_amount = 1.337,
                time_off_dailies = [
                    dima_sdk.models.update_time_off_200_response_time_off_time_off_dailies_inner.updateTimeOff_200_response_time_off_time_off_dailies_inner(
                        id = '', 
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = 'WORKING_DAY', 
                        amount = 1.337, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        time_off_id = '', )
                    ],
                time_off_type_id = '',
                recipient_profile = dima_sdk.models.update_time_off_200_response_time_off_recipient_profile.updateTimeOff_200_response_time_off_recipient_profile(
                    hris_profile_id = '', 
                    organization_id = '', 
                    client_profile_id = '', ),
                requester_profile = dima_sdk.models.update_time_off_200_response_time_off_recipient_profile.updateTimeOff_200_response_time_off_recipient_profile(
                    hris_profile_id = '', 
                    organization_id = '', 
                    client_profile_id = '', ),
                time_off_percentage = 1.337,
                is_end_date_estimated = True,
                other_type_description = ''
            )
        else:
            return UpdateTimeOff200ResponseTimeOff(
                id = '',
                amount = 1.337,
                is_paid = True,
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                half_end_date = True,
                half_start_date = True,
                time_off_type_id = '',
        )
        """

    def testUpdateTimeOff200ResponseTimeOff(self):
        """Test UpdateTimeOff200ResponseTimeOff"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
