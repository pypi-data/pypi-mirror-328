# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.time_off_response_common import TimeOffResponseCommon

class TestTimeOffResponseCommon(unittest.TestCase):
    """TimeOffResponseCommon unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimeOffResponseCommon:
        """Test TimeOffResponseCommon
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimeOffResponseCommon`
        """
        model = TimeOffResponseCommon()
        if include_optional:
            return TimeOffResponseCommon(
                id = '',
                recipient_profile = dima_sdk.models.profile_reference.ProfileReference(
                    hris_profile_id = '', 
                    organization_id = '', 
                    client_profile_id = '', ),
                requester_profile = dima_sdk.models.profile_reference.ProfileReference(
                    hris_profile_id = '', 
                    organization_id = '', 
                    client_profile_id = '', ),
                time_off_type_id = '',
                requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                other_type_description = '',
                description = '',
                reason = '',
                status = 'REQUESTED',
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deduction_amount = 1.337,
                is_paid = True,
                half_start_date = True,
                half_end_date = True,
                amount = 1.337,
                contract_oid = '',
                approved_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_off_dailies = [
                    dima_sdk.models.time_off_daily.TimeOffDaily(
                        id = '', 
                        time_off_id = '', 
                        amount = 1.337, 
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = 'WORKING_DAY', 
                        description = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                time_off_percentage = 1.337,
                is_end_date_estimated = True
            )
        else:
            return TimeOffResponseCommon(
                id = '',
                time_off_type_id = '',
                requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                is_paid = True,
                half_start_date = True,
                half_end_date = True,
                amount = 1.337,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testTimeOffResponseCommon(self):
        """Test TimeOffResponseCommon"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
