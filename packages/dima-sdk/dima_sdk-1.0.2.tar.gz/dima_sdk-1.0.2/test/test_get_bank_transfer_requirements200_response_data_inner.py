# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.get_bank_transfer_requirements200_response_data_inner import GetBankTransferRequirements200ResponseDataInner

class TestGetBankTransferRequirements200ResponseDataInner(unittest.TestCase):
    """GetBankTransferRequirements200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetBankTransferRequirements200ResponseDataInner:
        """Test GetBankTransferRequirements200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetBankTransferRequirements200ResponseDataInner`
        """
        model = GetBankTransferRequirements200ResponseDataInner()
        if include_optional:
            return GetBankTransferRequirements200ResponseDataInner(
                type = 'swift_code',
                title = 'Local bank account',
                fields = [
                    dima_sdk.models.get_bank_transfer_requirements_200_response_data_inner_fields_inner.getBankTransferRequirements_200_response_data_inner_fields_inner(
                        name = 'Recipient's first name', 
                        group = [
                            dima_sdk.models.get_bank_transfer_requirements_200_response_data_inner_fields_inner_group_inner.getBankTransferRequirements_200_response_data_inner_fields_inner_group_inner(
                                key = 'firstName', 
                                name = 'Recipient's first name', 
                                type = 'text', 
                                example = 'John Doe', 
                                required = True, 
                                max_length = 50, 
                                values_allowed = [{"key":"AS","name":"American Samoa"},{"key":"AD","name":"Andorra"}], 
                                validation_regexp = '^[a-zA-Z]{6}(([a-zA-Z0-9]{2})|([a-zA-Z0-9]{5}))$', 
                                refresh_requirements_on_change = True, )
                            ], )
                    ],
                total_fee = '0.0000',
                intermediary = [
                    dima_sdk.models.get_bank_transfer_requirements_200_response_data_inner_intermediary_inner.getBankTransferRequirements_200_response_data_inner_intermediary_inner(
                        name = 'BIC of the intermediary bank', 
                        group = [
                            dima_sdk.models.get_bank_transfer_requirements_200_response_data_inner_intermediary_inner_group_inner.getBankTransferRequirements_200_response_data_inner_intermediary_inner_group_inner(
                                key = 'intermediary.bic', 
                                name = 'BIC of the intermediary bank', 
                                type = 'text', 
                                example = 'BUKBGB22', 
                                required = True, 
                                max_length = 11, 
                                min_length = 8, 
                                values_allowed = [{"key":"AS","name":"American Samoa"},{"key":"AD","name":"Andorra"}], 
                                validation_regexp = '^[a-zA-Z]{6}(([a-zA-Z0-9]{2})|([a-zA-Z0-9]{5}))$', )
                            ], )
                    ]
            )
        else:
            return GetBankTransferRequirements200ResponseDataInner(
                type = 'swift_code',
                title = 'Local bank account',
                fields = [
                    dima_sdk.models.get_bank_transfer_requirements_200_response_data_inner_fields_inner.getBankTransferRequirements_200_response_data_inner_fields_inner(
                        name = 'Recipient's first name', 
                        group = [
                            dima_sdk.models.get_bank_transfer_requirements_200_response_data_inner_fields_inner_group_inner.getBankTransferRequirements_200_response_data_inner_fields_inner_group_inner(
                                key = 'firstName', 
                                name = 'Recipient's first name', 
                                type = 'text', 
                                example = 'John Doe', 
                                required = True, 
                                max_length = 50, 
                                values_allowed = [{"key":"AS","name":"American Samoa"},{"key":"AD","name":"Andorra"}], 
                                validation_regexp = '^[a-zA-Z]{6}(([a-zA-Z0-9]{2})|([a-zA-Z0-9]{5}))$', 
                                refresh_requirements_on_change = True, )
                            ], )
                    ],
                total_fee = '0.0000',
        )
        """

    def testGetBankTransferRequirements200ResponseDataInner(self):
        """Test GetBankTransferRequirements200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
