# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.request_body_to_create_pgo_task_reviews_by_id_reviews_container import RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer

class TestRequestBodyToCreatePgoTaskReviewsByIdReviewsContainer(unittest.TestCase):
    """RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer:
        """Test RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer`
        """
        model = RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer()
        if include_optional:
            return RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer(
                data = dima_sdk.models.pgo_task_reviews_by_id_to_create.PgoTaskReviewsByIdToCreate(
                    status = 'approved', 
                    reason = 'Excited!', )
            )
        else:
            return RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer(
                data = dima_sdk.models.pgo_task_reviews_by_id_to_create.PgoTaskReviewsByIdToCreate(
                    status = 'approved', 
                    reason = 'Excited!', ),
        )
        """

    def testRequestBodyToCreatePgoTaskReviewsByIdReviewsContainer(self):
        """Test RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
