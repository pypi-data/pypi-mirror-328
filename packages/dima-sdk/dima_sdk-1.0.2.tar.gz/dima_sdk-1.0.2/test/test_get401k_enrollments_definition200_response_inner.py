# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.get401k_enrollments_definition200_response_inner import Get401kEnrollmentsDefinition200ResponseInner

class TestGet401kEnrollmentsDefinition200ResponseInner(unittest.TestCase):
    """Get401kEnrollmentsDefinition200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Get401kEnrollmentsDefinition200ResponseInner:
        """Test Get401kEnrollmentsDefinition200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Get401kEnrollmentsDefinition200ResponseInner`
        """
        model = Get401kEnrollmentsDefinition200ResponseInner()
        if include_optional:
            return Get401kEnrollmentsDefinition200ResponseInner(
                id = '5f4e1d1b-4b7b-4b7b-8b7b-4b7b4b7b4b7b',
                details = dima_sdk.models.get401k_enrollments_definition_200_response_inner_details.get401kEnrollmentsDefinition_200_response_inner_details(
                    key = 'value', ),
                contribution_type = 'PERCENTAGE',
                contribution_limit = 100,
                contribution_value = 10,
                contribution_401k_type = 'ROTH'
            )
        else:
            return Get401kEnrollmentsDefinition200ResponseInner(
        )
        """

    def testGet401kEnrollmentsDefinition200ResponseInner(self):
        """Test Get401kEnrollmentsDefinition200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
