# coding: utf-8

"""
    Deel REST API

    Deel REST API

    The version of the OpenAPI document: 1.25.0
    Contact: apiteam@deel.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dima_sdk.models.calculate_eor_employment_cost200_response import CalculateEorEmploymentCost200Response

class TestCalculateEorEmploymentCost200Response(unittest.TestCase):
    """CalculateEorEmploymentCost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CalculateEorEmploymentCost200Response:
        """Test CalculateEorEmploymentCost200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CalculateEorEmploymentCost200Response`
        """
        model = CalculateEorEmploymentCost200Response()
        if include_optional:
            return CalculateEorEmploymentCost200Response(
                costs = [
                    dima_sdk.models.calculate_eor_employment_cost_200_response_costs_inner.calculateEorEmploymentCost_200_response_costs_inner(
                        name = '', 
                        amount = '', 
                        country = '', 
                        frequency = '', 
                        country_code = '', )
                    ],
                salary = '',
                country = '',
                currency = '',
                deel_fee = '',
                frequency = '',
                total_costs = '',
                country_code = '',
                benefits_data = [
                    dima_sdk.models.calculate_eor_employment_cost_200_response_benefits_data_inner.calculateEorEmploymentCost_200_response_benefits_data_inner(
                        name = '', 
                        plan = '', 
                        amount = '', 
                        fee_amount = '', )
                    ],
                employer_costs = '',
                additional_data = dima_sdk.models.calculate_eor_employment_cost_200_response_additional_data.calculateEorEmploymentCost_200_response_additional_data(
                    additional_notes = [
                        ''
                        ], ),
                severance_accural = ''
            )
        else:
            return CalculateEorEmploymentCost200Response(
        )
        """

    def testCalculateEorEmploymentCost200Response(self):
        """Test CalculateEorEmploymentCost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
