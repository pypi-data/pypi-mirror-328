name: Run Tests

on:
  push:
    #branches:
    #  - "main"
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.13", "3.12", "3.11", "3.10", "3.9", "3.8"]
        os: [ubuntu-latest, windows-latest]

    steps:
      # Checkout the latest code from the repo
      - name: Checkout Repo
        uses: actions/checkout@v4
      # Setup which version of Python to use
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Display the Python version being used
      - name: Display Python Version
        run: python -c "import sys; print(sys.version)"
      # Install the package
      - name: Install Package
        run: pip install .
      # Install Pytest and Coverage
      - name: Install Test Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
      # Run the tests
      - name: Run Tests
        run: pytest --cov pymccool -k "not e2e"

      # Upload coverage reports to Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # Lint with Ruff
      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1

      # Generate Documentation
      - name: Build documentation and examples
        run: |
          pip install -r docs/requirements.txt
          sphinx-build -b html docs docs/_build
          sphinx-build -b doctest docs docs/_build
  cd-release:
    name: Create Release and upload to Test PyPI
    environment:
      name: testpypi

    # Only run this job if tests pass
    needs: test

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # Permissions needed
    permissions:
      contents: write
      id-token: write

    # Define job steps
    steps:
    - name: Set up Latest Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Check-out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Python Semantic Release to prepare release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: "patch"
        commit: "true" # Commit changes locally
        push: "true" # Push local commits to Git repository
        changelog: "false" # Update the changelog

      # Install Build Tools
    - name: Install Build Tools
      run: python3 -m pip install --upgrade build && python3 -m build

    # Publish to TestPyPI
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true

    # Install from TestPyPI
    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          pymccool
  cd-publish:
    name: Publish to PyPI.org
    environment:
      name: pypi

    # Only run this job if cd-release pass
    needs: cd-release

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # Permissions needed
    permissions:
      contents: write
      id-token: write

    # Define job steps
    steps:
    - name: Set up Latest Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Check-out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

      # Install Build Tools
    - name: Install Build Tools
      run: python3 -m pip install --upgrade build && python3 -m build

    # Publish to PyPI
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        
    # Test Install from PyPI
    - name: Test install from PyPI
      run: |
          pip install pymccool