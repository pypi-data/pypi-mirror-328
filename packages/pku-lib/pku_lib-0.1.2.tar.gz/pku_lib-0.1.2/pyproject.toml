[project]
name = "pku-lib"
dynamic = ["version"]
description = "PKMN Utility Library"
readme = "README.md"
requires-python = ">=3.12"
license = "AGPL-3.0-or-later"
authors = [
    { name = "Taylor Rodríguez", email = "git.rodriguez@proton.me" },
]
maintainers = [
    { name = "Taylor Rodríguez", email = "git.rodriguez@proton.me" },
]
keywords = [
    "wry",
    "rng",
    "pkx",
    "pk6",
    "pk7",
    "pk8",
    "pk9",
    "pkmn",
    "pokemon",
    "pokémon",
    "pyukumuku",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "License :: OSI Approved",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: File Formats",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "Typing :: Typed",
]
urls.changelog = "https://codeberg.org/wry/pku-lib/src/branch/main/CHANGELOG.md"
urls.repository = "https://codeberg.org/wry/pku-lib.git"
dependencies = [
    "construct-typing>=0.6.2",
]

[dependency-groups]
dev = [
    "pre-commit-uv>=4.1.4",
    { include-group = "test" },
    { include-group = "lint" },
]
test = [
    "nox[uv]>=2025.2.9",
    "pytest>=8.3.4",
    { include-group = "lint" }
]
lint = [
    "ruff>=0.9.6",
]

[build-system]
requires = ["hatchling", "versioningit"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["src/"]

[tool.hatch.build.targets.wheel]
packages = ["src/pku"]

[tool.hatch.version]
source = "versioningit"

[tool.versioningit]
vcs = "git"

[tool.versioningit.write]
file = "src/pku/_version.py"

[tool.versioningit.next-version]
method = "smallest"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}+{vcs}{rev}"
dirty = "{base_version}+dirty"
distance-dirty = "{next_version}.dev{distance}+{vcs}{rev}.dirty"

[tool.ruff]
target-version = "py312"
line-length = 79

[tool.ruff.lint]
extend-select = [
    "D",     # pydocstyle
    "E",     # pycodestyle
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "S",     # flake8-bandit
    "ASYNC", # flake8-async
    "FBT",   # flake8-boolean-trap
    "SIM",   # flake8-simplify
    "TRY",   # tryceratops
    "I",     # isort
    "C",     # mccabe
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "pep257"
