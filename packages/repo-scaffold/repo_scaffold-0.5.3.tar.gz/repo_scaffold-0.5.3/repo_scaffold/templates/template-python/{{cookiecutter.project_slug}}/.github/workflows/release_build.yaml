name: release_build

on:
<<<<<<< HEAD
  push:
    tags:
      - '[0-9]*.[0-9]*.[0-9]*'  # 匹配语义化版本号标签 (e.g., 1.0.0, 1.0.0-beta)
=======
  release:
    types: [published]  # 当 release 发布时触发，而不是创建时
>>>>>>> Ci/update-github-action
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.0.0)'
        required: true
        type: string

permissions:
  contents: write  # 用于创建 release
  id-token: write  # 用于发布到 PyPI

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Load secret
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          {% raw %}OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}{% endraw %}
          PERSONAL_ACCESS_TOKEN: op://shawndengdev/github_access_token/credential
          PYPI_TOKEN: op://shawndengdev/pypi_token/credential

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "{{ cookiecutter.max_python_version[0] }}"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: ">=0.4.0"

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Build and test
        run: |
          uvx nox -s lint
          uvx nox -s test
          uvx nox -s build

      - name: Publish to PyPI
        env:
          {% raw %}UV_PUBLISH_TOKEN: ${{ env.PYPI_TOKEN }}{% endraw %}
        run: uv publish

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.whl
          generate_release_notes: true
        env:
          {% raw %}GITHUB_TOKEN: ${{ env.PERSONAL_ACCESS_TOKEN }}{% endraw %}
