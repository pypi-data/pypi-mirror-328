# coding: utf-8

"""
    Lead Scraping Service API

    Vector Lead Scraping Service API - Manages Lead Scraping Jobs

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@vector.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from playbookmedia_backend_client_sdk.models.contract_intelligence import ContractIntelligence

class TestContractIntelligence(unittest.TestCase):
    """ContractIntelligence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContractIntelligence:
        """Test ContractIntelligence
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContractIntelligence`
        """
        model = ContractIntelligence()
        if include_optional:
            return ContractIntelligence(
                id = '',
                contract_type = '',
                risk_scores = {
                    'key' : 1.337
                    },
                detected_clauses = {
                    'key' : ''
                    },
                key_obligations = [
                    ''
                    ],
                compliance_scores = {
                    'key' : 1.337
                    },
                jurisdiction = '',
                governing_laws = [
                    ''
                    ],
                semantic_analysis = {
                    'key' : ''
                    },
                analysis_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                risk_assessments = [
                    playbookmedia_backend_client_sdk.models.risk_assessment.RiskAssessment(
                        id = '', 
                        intelligence_id = '', 
                        risk_type = '', 
                        risk_score = 1.337, 
                        assessment_details = '', 
                        mitigation_suggestions = [
                            ''
                            ], 
                        assessor_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                compliance_checks = [
                    playbookmedia_backend_client_sdk.models.compliance_check.ComplianceCheck(
                        id = '', 
                        intelligence_id = '', 
                        compliance_standard = '', 
                        check_result = '', 
                        violations = [
                            ''
                            ], 
                        remediation_steps = '', 
                        check_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return ContractIntelligence(
        )
        """

    def testContractIntelligence(self):
        """Test ContractIntelligence"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
