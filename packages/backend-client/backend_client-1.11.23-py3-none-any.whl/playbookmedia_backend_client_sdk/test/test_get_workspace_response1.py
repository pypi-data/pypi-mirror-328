# coding: utf-8

"""
    Lead Scraping Service API

    Vector Lead Scraping Service API - Manages Lead Scraping Jobs

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@vector.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from playbookmedia_backend_client_sdk.models.get_workspace_response1 import GetWorkspaceResponse1

class TestGetWorkspaceResponse1(unittest.TestCase):
    """GetWorkspaceResponse1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetWorkspaceResponse1:
        """Test GetWorkspaceResponse1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetWorkspaceResponse1`
        """
        model = GetWorkspaceResponse1()
        if include_optional:
            return GetWorkspaceResponse1(
                workspace = playbookmedia_backend_client_sdk.models.workspace1.Workspace1(
                    id = '', 
                    name = '', 
                    unique_identifier = '', 
                    s3_bucket_name = '', 
                    s3_folder_path = '', 
                    storage_quota = '', 
                    used_storage = '', 
                    allow_public_sharing = True, 
                    require_approval = True, 
                    gdpr_compliant = True, 
                    hipaa_compliant = True, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    folders = [
                        playbookmedia_backend_client_sdk.models.file_system_entities.File system entities(
                            id = '', 
                            name = '', 
                            s3_bucket_name = '', 
                            s3_folder_path = '', 
                            is_deleted = True, 
                            parent_folder_id = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            child_folders = [
                                playbookmedia_backend_client_sdk.models.file_system_entities.File system entities(
                                    id = '', 
                                    name = '', 
                                    s3_bucket_name = '', 
                                    s3_folder_path = '', 
                                    is_deleted = True, 
                                    parent_folder_id = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    child_folders = , 
                                    files = [
                                        playbookmedia_backend_client_sdk.models.file_metadata.FileMetadata(
                                            id = '', 
                                            name = '', 
                                            size = '', 
                                            s3_key = '', 
                                            s3_bucket_name = '', 
                                            is_deleted = True, 
                                            version = 56, 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            embeddings = playbookmedia_backend_client_sdk.models.file_embeddings.FileEmbeddings(
                                                id = '', 
                                                model_version = '', 
                                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                            versions = [
                                                playbookmedia_backend_client_sdk.models.file_version.FileVersion(
                                                    id = '', 
                                                    file_id = '', 
                                                    version_number = 56, 
                                                    s3_key = '', 
                                                    size = '', 
                                                    commit_message = '', 
                                                    author_id = '', 
                                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                ], 
                                            comments = [
                                                playbookmedia_backend_client_sdk.models.comment_thread.CommentThread(
                                                    id = '', 
                                                    author_id = '', 
                                                    content = '', 
                                                    start_position = 56, 
                                                    end_position = 56, 
                                                    resolved = True, 
                                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                ], 
                                            sharing = [
                                                playbookmedia_backend_client_sdk.models.file_sharing.FileSharing(
                                                    id = '', 
                                                    shared_with_email = '', 
                                                    permission_level = '', 
                                                    expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                ], 
                                            snapshots = [
                                                playbookmedia_backend_client_sdk.models.document_snapshot.DocumentSnapshot(
                                                    id = '', 
                                                    file_id = '', 
                                                    snapshot_hash = '', 
                                                    content = 'YQ==', 
                                                    author_id = '', 
                                                    reason = '', 
                                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                ], )
                                        ], )
                                ], 
                            files = [
                                playbookmedia_backend_client_sdk.models.file_metadata.FileMetadata(
                                    id = '', 
                                    name = '', 
                                    size = '', 
                                    s3_key = '', 
                                    s3_bucket_name = '', 
                                    is_deleted = True, 
                                    version = 56, 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], )
                        ], 
                    templates = [
                        playbookmedia_backend_client_sdk.models.document_management_entities.Document management entities(
                            id = '', 
                            name = '', 
                            description = '', 
                            industry_type = '', 
                            document_type = '', 
                            base_content = '', 
                            is_adaptive = True, 
                            metadata = {
                                'key' : ''
                                }, 
                            supported_languages = [
                                ''
                                ], 
                            required_data_fields = [
                                ''
                                ], 
                            version = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            template_type = 'TEMPLATE_TYPE_UNSPECIFIED', 
                            content = '', 
                            detected_variables = [
                                ''
                                ], 
                            variable_mappings = {
                                'key' : ''
                                }, 
                            is_context_aware = True, 
                            supported_contexts = [
                                ''
                                ], 
                            formatting_rules = {
                                'key' : ''
                                }, 
                            conditional_sections = [
                                ''
                                ], 
                            variables = [
                                playbookmedia_backend_client_sdk.models.template_variable.TemplateVariable(
                                    id = '', 
                                    name = '', 
                                    description = '', 
                                    variable_type = '', 
                                    default_value = '', 
                                    is_required = True, 
                                    validation_rules = '', 
                                    data_source = '', 
                                    ai_extraction_rules = '', 
                                    alternatives = [
                                        ''
                                        ], 
                                    template_id = '', )
                                ], 
                            instances = [
                                playbookmedia_backend_client_sdk.models.document_instance.DocumentInstance(
                                    id = '', 
                                    template_id = '', 
                                    status = 'DOCUMENT_STATUS_UNSPECIFIED', 
                                    field_values = {
                                        'key' : ''
                                        }, 
                                    signers = [
                                        ''
                                        ], 
                                    language = '', 
                                    is_completed = True, 
                                    due_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    generated_content = '', 
                                    attachments = [
                                        ''
                                        ], 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    signature_requests = [
                                        playbookmedia_backend_client_sdk.models.e_signature_entities.E-Signature entities(
                                            id = '', 
                                            signer_email = '', 
                                            signer_name = '', 
                                            role = '', 
                                            authentication_method = '', 
                                            expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            requires_mfa = True, 
                                            signature_type = '', 
                                            reminder_schedule = [
                                                ''
                                                ], 
                                            document_id = '', 
                                            signature_blocks = [
                                                playbookmedia_backend_client_sdk.models.signature_block.SignatureBlock(
                                                    id = '', 
                                                    request_id = '', 
                                                    block_type = '', 
                                                    page_number = 56, 
                                                    x_position = 1.337, 
                                                    y_position = 1.337, 
                                                    width = 1.337, 
                                                    height = 1.337, 
                                                    is_required = True, 
                                                    signature_data = '', 
                                                    signed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                ], 
                                            workflow = playbookmedia_backend_client_sdk.models.signature_workflow.SignatureWorkflow(
                                                id = '', 
                                                request_id = '', 
                                                signing_order = [
                                                    ''
                                                    ], 
                                                current_signer = '', 
                                                workflow_status = '', 
                                                parallel_signing = True, 
                                                require_all_signatures = True, 
                                                deadline = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                                        ], 
                                    ai_assistance = [
                                        playbookmedia_backend_client_sdk.models.ai_assistance_log.AIAssistanceLog(
                                            id = '', 
                                            document_id = '', 
                                            interaction_type = '', 
                                            user_query = '', 
                                            ai_response = '', 
                                            context = {
                                                'key' : ''
                                                }, 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], 
                                    negotiation = playbookmedia_backend_client_sdk.models.negotiation_history.NegotiationHistory(
                                        id = '', 
                                        document_id = '', 
                                        rounds = [
                                            playbookmedia_backend_client_sdk.models.negotiation_round.NegotiationRound(
                                                id = '', 
                                                history_id = '', 
                                                round_number = 56, 
                                                proposer_id = '', 
                                                proposal_content = '', 
                                                response_content = '', 
                                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], 
                                        current_status = '', 
                                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                                ], 
                            explanations = [
                                playbookmedia_backend_client_sdk.models.explanation_block.ExplanationBlock(
                                    id = '', 
                                    template_id = '', 
                                    section_identifier = '', 
                                    explanation_text = '', 
                                    complexity_level = '', 
                                    related_terms = [
                                        ''
                                        ], 
                                    legal_references = [
                                        ''
                                        ], 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            intelligence = [
                                playbookmedia_backend_client_sdk.models.ai_and_analytics_entities.AI and Analytics entities(
                                    id = '', 
                                    contract_type = '', 
                                    risk_scores = {
                                        'key' : 1.337
                                        }, 
                                    detected_clauses = {
                                        'key' : ''
                                        }, 
                                    key_obligations = [
                                        ''
                                        ], 
                                    compliance_scores = {
                                        'key' : 1.337
                                        }, 
                                    jurisdiction = '', 
                                    governing_laws = [
                                        ''
                                        ], 
                                    semantic_analysis = {
                                        'key' : ''
                                        }, 
                                    analysis_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    risk_assessments = [
                                        playbookmedia_backend_client_sdk.models.risk_assessment.RiskAssessment(
                                            id = '', 
                                            intelligence_id = '', 
                                            risk_type = '', 
                                            risk_score = 1.337, 
                                            assessment_details = '', 
                                            mitigation_suggestions = [
                                                ''
                                                ], 
                                            assessor_id = '', 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], 
                                    compliance_checks = [
                                        playbookmedia_backend_client_sdk.models.compliance_check.ComplianceCheck(
                                            id = '', 
                                            intelligence_id = '', 
                                            compliance_standard = '', 
                                            check_result = '', 
                                            violations = [
                                                ''
                                                ], 
                                            remediation_steps = '', 
                                            check_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], )
                                ], )
                        ], 
                    sharing = [
                        playbookmedia_backend_client_sdk.models.workspace_sharing.WorkspaceSharing(
                            id = '', 
                            shared_with_email = '', 
                            permission_level = '', 
                            expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    activities = [
                        playbookmedia_backend_client_sdk.models.workspace_activity.WorkspaceActivity(
                            id = '', 
                            activity_type = '', 
                            user_id = '', 
                            description = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    compliance = [
                        playbookmedia_backend_client_sdk.models.workspace_compliance.WorkspaceCompliance(
                            id = '', 
                            compliance_type = '', 
                            certification_id = '', 
                            valid_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    installed_apps = [
                        playbookmedia_backend_client_sdk.models.app_marketplace_entities.App Marketplace entities(
                            id = '', 
                            name = '', 
                            description = '', 
                            developer_id = '', 
                            category = 'APP_CATEGORY_UNSPECIFIED', 
                            supported_contract_types = [
                                ''
                                ], 
                            features = [
                                ''
                                ], 
                            pricing_model = 'PRICING_MODEL_UNSPECIFIED', 
                            pricing_tiers = {
                                'key' : 1.337
                                }, 
                            supported_integrations = [
                                ''
                                ], 
                            is_verified = True, 
                            rating = 1.337, 
                            installation_count = 56, 
                            required_permissions = [
                                ''
                                ], 
                            documentation_url = '', 
                            support_email = '', 
                            screenshots = [
                                ''
                                ], 
                            privacy_policy_url = '', 
                            terms_url = '', 
                            published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            installations = [
                                playbookmedia_backend_client_sdk.models.app_installation.AppInstallation(
                                    id = '', 
                                    app_id = '', 
                                    workspace_id = '', 
                                    version_installed = '', 
                                    configuration = {
                                        'key' : ''
                                        }, 
                                    installation_status = '', 
                                    installed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            analytics = [
                                playbookmedia_backend_client_sdk.models.app_analytics.AppAnalytics(
                                    id = '', 
                                    app_id = '', 
                                    metric_name = '', 
                                    metric_value = 1.337, 
                                    dimensions = {
                                        'key' : ''
                                        }, 
                                    recorded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            reviews = [
                                playbookmedia_backend_client_sdk.models.app_review.AppReview(
                                    id = '', 
                                    app_id = '', 
                                    reviewer_id = '', 
                                    rating = 1.337, 
                                    review_text = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            info = playbookmedia_backend_client_sdk.models.app_development_info.AppDevelopmentInfo(
                                id = '', 
                                app_id = '', 
                                sdk_features = [
                                    ''
                                    ], 
                                test_coverage = {
                                    'key' : 1.337
                                    }, 
                                security_scans = [
                                    ''
                                    ], 
                                performance_metrics = {
                                    'key' : ''
                                    }, 
                                development_status = '', 
                                known_issues = [
                                    ''
                                    ], 
                                roadmap_url = '', 
                                last_security_audit = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            webhooks = [
                                playbookmedia_backend_client_sdk.models.app_webhook.AppWebhook(
                                    id = '', 
                                    app_id = '', 
                                    url = '', 
                                    subscribed_events = [
                                        ''
                                        ], 
                                    secret_key = '', 
                                    retry_count = 56, 
                                    timeout_seconds = 56, 
                                    is_active = True, 
                                    headers = {
                                        'key' : ''
                                        }, 
                                    last_triggered = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            permissions = [
                                playbookmedia_backend_client_sdk.models.app_permission.AppPermission(
                                    id = '', 
                                    app_id = '', 
                                    scope = '', 
                                    description = '', 
                                    is_required = True, 
                                    access_levels = [
                                        ''
                                        ], 
                                    constraints = {
                                        'key' : ''
                                        }, 
                                    requires_approval = True, 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], )
                        ], )
            )
        else:
            return GetWorkspaceResponse1(
        )
        """

    def testGetWorkspaceResponse1(self):
        """Test GetWorkspaceResponse1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
