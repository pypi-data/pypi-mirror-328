# coding: utf-8

"""
    Lead Scraping Service API

    Vector Lead Scraping Service API - Manages Lead Scraping Jobs

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@vector.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from playbookmedia_backend_client_sdk.models.document_template import DocumentTemplate

class TestDocumentTemplate(unittest.TestCase):
    """DocumentTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DocumentTemplate:
        """Test DocumentTemplate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentTemplate`
        """
        model = DocumentTemplate()
        if include_optional:
            return DocumentTemplate(
                id = '',
                name = '',
                description = '',
                industry_type = '',
                document_type = '',
                base_content = '',
                is_adaptive = True,
                metadata = {
                    'key' : ''
                    },
                supported_languages = [
                    ''
                    ],
                required_data_fields = [
                    ''
                    ],
                version = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                template_type = 'TEMPLATE_TYPE_UNSPECIFIED',
                content = '',
                detected_variables = [
                    ''
                    ],
                variable_mappings = {
                    'key' : ''
                    },
                is_context_aware = True,
                supported_contexts = [
                    ''
                    ],
                formatting_rules = {
                    'key' : ''
                    },
                conditional_sections = [
                    ''
                    ],
                versions = [
                    playbookmedia_backend_client_sdk.models.template_version.TemplateVersion(
                        id = '', 
                        template_id = '', 
                        version = '', 
                        base_content = '', 
                        metadata = {
                            'key' : ''
                            }, 
                        author_id = '', 
                        change_description = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                variables = [
                    playbookmedia_backend_client_sdk.models.template_variable.TemplateVariable(
                        id = '', 
                        name = '', 
                        description = '', 
                        variable_type = '', 
                        default_value = '', 
                        is_required = True, 
                        validation_rules = '', 
                        data_source = '', 
                        ai_extraction_rules = '', 
                        alternatives = [
                            ''
                            ], 
                        template_id = '', )
                    ],
                instances = [
                    playbookmedia_backend_client_sdk.models.document_instance.DocumentInstance(
                        id = '', 
                        template_id = '', 
                        status = 'DOCUMENT_STATUS_UNSPECIFIED', 
                        field_values = {
                            'key' : ''
                            }, 
                        signers = [
                            ''
                            ], 
                        language = '', 
                        is_completed = True, 
                        due_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        generated_content = '', 
                        attachments = [
                            ''
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        signature_requests = [
                            playbookmedia_backend_client_sdk.models.e_signature_entities.E-Signature entities(
                                id = '', 
                                signer_email = '', 
                                signer_name = '', 
                                role = '', 
                                authentication_method = '', 
                                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                requires_mfa = True, 
                                signature_type = '', 
                                reminder_schedule = [
                                    ''
                                    ], 
                                document_id = '', 
                                signature_blocks = [
                                    playbookmedia_backend_client_sdk.models.signature_block.SignatureBlock(
                                        id = '', 
                                        request_id = '', 
                                        block_type = '', 
                                        page_number = 56, 
                                        x_position = 1.337, 
                                        y_position = 1.337, 
                                        width = 1.337, 
                                        height = 1.337, 
                                        is_required = True, 
                                        signature_data = '', 
                                        signed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                workflow = playbookmedia_backend_client_sdk.models.signature_workflow.SignatureWorkflow(
                                    id = '', 
                                    request_id = '', 
                                    signing_order = [
                                        ''
                                        ], 
                                    current_signer = '', 
                                    workflow_status = '', 
                                    parallel_signing = True, 
                                    require_all_signatures = True, 
                                    deadline = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                            ], 
                        ai_assistance = [
                            playbookmedia_backend_client_sdk.models.ai_assistance_log.AIAssistanceLog(
                                id = '', 
                                document_id = '', 
                                interaction_type = '', 
                                user_query = '', 
                                ai_response = '', 
                                context = {
                                    'key' : ''
                                    }, 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        negotiation = playbookmedia_backend_client_sdk.models.negotiation_history.NegotiationHistory(
                            id = '', 
                            document_id = '', 
                            rounds = [
                                playbookmedia_backend_client_sdk.models.negotiation_round.NegotiationRound(
                                    id = '', 
                                    history_id = '', 
                                    round_number = 56, 
                                    proposer_id = '', 
                                    proposal_content = '', 
                                    response_content = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            current_status = '', 
                            started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        versions = [
                            playbookmedia_backend_client_sdk.models.version_control_entities.Version control entities(
                                id = '', 
                                version_hash = '', 
                                parent_hash = '', 
                                commit_message = '', 
                                author_id = '', 
                                branch_name = '', 
                                metadata = {
                                    'key' : ''
                                    }, 
                                tags = [
                                    ''
                                    ], 
                                is_approved = True, 
                                approval_chain = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                branches = [
                                    playbookmedia_backend_client_sdk.models.document_branch.DocumentBranch(
                                        id = '', 
                                        name = '', 
                                        base_version_hash = '', 
                                        current_head_hash = '', 
                                        purpose = '', 
                                        reviewers = [
                                            ''
                                            ], 
                                        branch_metadata = {
                                            'key' : ''
                                            }, 
                                        is_locked = True, 
                                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        merges = [
                                            playbookmedia_backend_client_sdk.models.branch_merge.BranchMerge(
                                                id = '', 
                                                branch_id = '', 
                                                source_branch = '', 
                                                target_branch = '', 
                                                merge_status = '', 
                                                merge_strategy = '', 
                                                conflicts = [
                                                    ''
                                                    ], 
                                                merger_id = '', 
                                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], 
                                        policy = playbookmedia_backend_client_sdk.models.enhanced_version_control_entities.Enhanced version control entities(
                                            id = '', 
                                            branch_id = '', 
                                            required_approvers = [
                                                ''
                                                ], 
                                            minimum_approvals = 56, 
                                            enforce_linear_history = True, 
                                            allow_force_push = True, 
                                            protected_paths = [
                                                ''
                                                ], 
                                            merge_rules = {
                                                'key' : ''
                                                }, 
                                            automated_checks = [
                                                ''
                                                ], 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                        merge_requests = [
                                            playbookmedia_backend_client_sdk.models.merge_request.MergeRequest(
                                                id = '', 
                                                source_branch_id = '', 
                                                target_branch_id = '', 
                                                title = '', 
                                                description = '', 
                                                author_id = '', 
                                                labels = [
                                                    ''
                                                    ], 
                                                has_conflicts = True, 
                                                automated_check_results = [
                                                    ''
                                                    ], 
                                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], )
                                    ], 
                                changes = [
                                    playbookmedia_backend_client_sdk.models.change_set.ChangeSet(
                                        id = '', 
                                        version_id = '', 
                                        change_type = '', 
                                        content_before = '', 
                                        content_after = '', 
                                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                summaries = [
                                    playbookmedia_backend_client_sdk.models.contextual_summary.ContextualSummary(
                                        id = '', 
                                        version_id = '', 
                                        summary_type = '', 
                                        content = '', 
                                        target_audience = '', 
                                        key_points = [
                                            ''
                                            ], 
                                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], )
                            ], )
                    ],
                explanations = [
                    playbookmedia_backend_client_sdk.models.explanation_block.ExplanationBlock(
                        id = '', 
                        template_id = '', 
                        section_identifier = '', 
                        explanation_text = '', 
                        complexity_level = '', 
                        related_terms = [
                            ''
                            ], 
                        legal_references = [
                            ''
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                intelligence = [
                    playbookmedia_backend_client_sdk.models.ai_and_analytics_entities.AI and Analytics entities(
                        id = '', 
                        contract_type = '', 
                        risk_scores = {
                            'key' : 1.337
                            }, 
                        detected_clauses = {
                            'key' : ''
                            }, 
                        key_obligations = [
                            ''
                            ], 
                        compliance_scores = {
                            'key' : 1.337
                            }, 
                        jurisdiction = '', 
                        governing_laws = [
                            ''
                            ], 
                        semantic_analysis = {
                            'key' : ''
                            }, 
                        analysis_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        risk_assessments = [
                            playbookmedia_backend_client_sdk.models.risk_assessment.RiskAssessment(
                                id = '', 
                                intelligence_id = '', 
                                risk_type = '', 
                                risk_score = 1.337, 
                                assessment_details = '', 
                                mitigation_suggestions = [
                                    ''
                                    ], 
                                assessor_id = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        compliance_checks = [
                            playbookmedia_backend_client_sdk.models.compliance_check.ComplianceCheck(
                                id = '', 
                                intelligence_id = '', 
                                compliance_standard = '', 
                                check_result = '', 
                                violations = [
                                    ''
                                    ], 
                                remediation_steps = '', 
                                check_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ]
            )
        else:
            return DocumentTemplate(
        )
        """

    def testDocumentTemplate(self):
        """Test DocumentTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
