# coding: utf-8

"""
    Lead Scraping Service API

    Vector Lead Scraping Service API - Manages Lead Scraping Jobs

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@vector.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from playbookmedia_backend_client_sdk.models.list_tenant_api_keys_response import ListTenantAPIKeysResponse

class TestListTenantAPIKeysResponse(unittest.TestCase):
    """ListTenantAPIKeysResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTenantAPIKeysResponse:
        """Test ListTenantAPIKeysResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTenantAPIKeysResponse`
        """
        model = ListTenantAPIKeysResponse()
        if include_optional:
            return ListTenantAPIKeysResponse(
                api_keys = [
                    playbookmedia_backend_client_sdk.models.tenant_api_key.TenantAPIKey(
                        id = '', 
                        key_hash = '', 
                        key_prefix = '', 
                        name = '', 
                        description = '', 
                        status = 'STATUS_UNSPECIFIED', 
                        scopes = [
                            'TENANT_API_KEY_SCOPE_UNSPECIFIED'
                            ], 
                        max_uses = 56, 
                        allowed_ips = [
                            ''
                            ], 
                        use_count = 56, 
                        expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                next_page_number = 56,
                total_count = 56
            )
        else:
            return ListTenantAPIKeysResponse(
        )
        """

    def testListTenantAPIKeysResponse(self):
        """Test ListTenantAPIKeysResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
