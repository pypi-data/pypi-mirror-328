Metadata-Version: 2.2
Name: nilsig
Version: 0.0.0a1
Summary: Library for generating signature keys and signing messages using nilVM and nilDB.
Author: Dave Butler
Author-email: david.butler@nillion.com
License: MIT
Project-URL: Repository, https://github.com/nillionnetwork/nilsig-py
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: python-dotenv~=1.0.1
Requires-Dist: requests~=2.32
Requires-Dist: cryptography~=3.4
Requires-Dist: nilql==0.0.0a10
Provides-Extra: docs
Requires-Dist: toml~=0.10.2; extra == "docs"
Requires-Dist: sphinx~=5.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme~=2.0.0; extra == "docs"
Provides-Extra: test
Requires-Dist: pytest~=8.2; extra == "test"
Requires-Dist: pytest-cov~=5.0; extra == "test"
Provides-Extra: lint
Requires-Dist: pylint~=3.2.0; extra == "lint"
Provides-Extra: coveralls
Requires-Dist: coveralls~=4.0; extra == "coveralls"
Provides-Extra: publish
Requires-Dist: build~=0.10; extra == "publish"
Requires-Dist: twine~=4.0; extra == "publish"

======
nilsig
======

Library for generating signature keys and signing messages using nilVM and nilDB.

|pypi| |readthedocs| |actions| |coveralls|

.. |pypi| image:: https://badge.fury.io/py/nilsig.svg#
   :target: https://badge.fury.io/py/nilsig
   :alt: PyPI version and link.

.. |readthedocs| image:: https://readthedocs.org/projects/nilsig/badge/?version=latest
   :target: https://nilsig.readthedocs.io/en/latest/?badge=latest
   :alt: Read the Docs documentation status.

.. |actions| image:: https://github.com/nillionnetwork/nilsig-py/workflows/lint-test-cover-docs/badge.svg#
   :target: https://github.com/nillionnetwork/nilsig-py/actions/workflows/lint-test-cover-docs.yml
   :alt: GitHub Actions status.

.. |coveralls| image:: https://coveralls.io/repos/github/NillionNetwork/nilsig-py/badge.svg?branch=main
   :target: https://coveralls.io/github/NillionNetwork/nilsig-py?branch=main
   :alt: Coveralls test coverage summary.

Description and Purpose
-----------------------
This library provides client-side functions that interact with nilVM and nilDB clusters to perform signature key generation and message signing.

Installation and Usage
----------------------
The library can be imported in the usual ways:

.. code-block:: python

    import nilsig
    from nilsig import *

Example
^^^^^^^^
An example workflow that demonstrates use of the library is presented below:

.. code-block:: python

    import nilsig

Development
-----------
All installation and development dependencies are fully specified in ``pyproject.toml``. The ``project.optional-dependencies`` object is used to `specify optional requirements <https://peps.python.org/pep-0621>`__ for various development tasks. This makes it possible to specify additional options (such as ``docs``, ``lint``, and so on) when performing installation using `pip <https://pypi.org/project/pip>`__:

.. code-block:: bash

    python -m pip install ".[docs,lint]"

Documentation
^^^^^^^^^^^^^
The documentation can be generated automatically from the source files using `Sphinx <https://www.sphinx-doc.org>`__:

.. code-block:: bash

    python -m pip install ".[docs]"
    cd docs
    sphinx-apidoc -f -E --templatedir=_templates -o _source .. && make html

Testing and Conventions
^^^^^^^^^^^^^^^^^^^^^^^
All unit tests are executed and their coverage is measured when using `pytest <https://docs.pytest.org>`__ (see the ``pyproject.toml`` file for configuration details):

.. code-block:: bash

    python -m pip install ".[test]"
    python -m pytest

The subset of the unit tests included in the module itself and can be executed using `doctest <https://docs.python.org/3/library/doctest.html>`__:

.. code-block:: bash

    python src/nilsig/nilsig.py -v

Style conventions are enforced using `Pylint <https://pylint.readthedocs.io>`__:

.. code-block:: bash

    python -m pip install ".[lint]"
    python -m pylint src/nilsig

Contributions
^^^^^^^^^^^^^
In order to contribute to the source code, open an issue or submit a pull request on the `GitHub page <https://github.com/nillionnetwork/nilsig-py>`__ for this library.

Versioning
^^^^^^^^^^
The version number format for this library and the changes to the library associated with version number increments conform with `Semantic Versioning 2.0.0 <https://semver.org/#semantic-versioning-200>`__.

Publishing
^^^^^^^^^^
This library can be published as a `package on PyPI <https://pypi.org/project/nilsig>`__ via the GitHub Actions workflow found in ``.github/workflows/build-publish-sign-release.yml`` that follows the `recommendations found in the Python Packaging User Guide <https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/>`__.

Ensure that any links in this README document to the Read the Docs documentation of this package (or its dependencies) have appropriate version numbers. Also ensure that the Read the Docs project for this library has an `automation rule <https://docs.readthedocs.io/en/stable/automation-rules.html>`__ that activates and sets as the default all tagged versions.
