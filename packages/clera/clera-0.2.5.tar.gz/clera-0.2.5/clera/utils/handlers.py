import os
import os.path as path
import sys
import inspect
import base64 
import threading
import re

from PySide6.QtCore import QByteArray, QRunnable, QThreadPool, Signal, QObject
from PySide6.QtGui import QAction, QIcon, Qt, QTextCharFormat, QColor,QKeyEvent, QImage, QPixmap 
from PySide6.QtWidgets import QSizePolicy, QApplication
from PySide6.QtWidgets import QListWidgetItem, QAbstractItemView, QComboBox

from ..icons import *
from .style import *

def start():
    app = QApplication(sys.argv)
    return app


def call(func: None = None, *args, **kwargs):
    if func != None:
        return lambda: func(*args, **kwargs)

def run(func: None = None):
    def contigency():
        func()

    if func != None:
        try:
            if 'call' in str(func):
                func(func)
            else:
                contigency()
        except TypeError:
            contigency()

'''
The Process and Processor is to help manage multiprocessing and threading and
still ensure fluid run of application. Still under development.
'''
class Process(QRunnable):

    def __init__(self, func, *args, **kwargs):
        super().__init__()
        self.func = func
        self.args = args
        self.kwargs = kwargs
        self.setAutoDelete(True)

    def run(self):
        self.func(*self.args, **self.kwargs)


class Processor:
    def __init__(self):
        self.threadpool = QThreadPool().globalInstance()
        
    def start(self, func, *args, **kwargs):
        self.process = Process(func, *args, **kwargs)
        self.threadpool.start(self.process)
    
    def thread(self):
        return self.threadpool.thread()

global clera_multi_threading
clera_multi_threading = Processor()



DEFAULT_WINDOW_TITLE = None
DEFAULT_WINDOW_ICON = icon_data['hand-drawn-icon']
DEFAULT_WINDOW_SIZE = (None, None)
DEFAULT_WINDOW_FIXED_SIZE = (None, None)
DEFAULT_WINDOW_STYLE = None
DEFAULT_WINDOW_GEOMETRY = None
DEFAULT_TAB_DISTANCE = 30


WIDGET_ID_SAFE = {}
ID_COUNT_DEFAULT = [0]
TOOLBAR_COUNT = []
LINK_ITEMS_INCLUDED = []

SIZE_POLICY_EXPAND = expand = 'expand'
SIZE_POLICY_FIXED = fixed = 'fixed'

circle = 'circle'
square = 'square'

# GRAB_WIDGET = 'GrabWidget'

DEFAULT_SEPARATOR_MARKER = '---'

ELEM_TYPE_ITEM = 'item'
ELEM_TYPE_SEPARATOR = 'separator'
ELEM_TYPE_COLUMN = 'column'
ELEM_TYPE_GROUP = 'group'
ELEM_TYPE_FIELDSET = 'fieldset'
ELEM_TYPE_EMPTY = 'empty'
ELEM_TYPE_BUTTON = 'button'
ELEM_TYPE_INPUT = 'input'
ELEM_TYPE_TEXT = 'text'
ELEM_TYPE_IMAGE = 'img'
ELEM_TYPE_CHECKBOX = 'checkbox'
ELEM_TYPE_RADIO_BUTTON = 'radio_button'
ELEM_TYPE_TEXTAREA = 'textarea'
ELEM_TYPE_LIST_WIDGET = 'list_widget'
ELEM_TYPE_LIST_ITEM = 'list_item'
ELEM_TYPE_SELECT = 'select'
ELEM_TYPE_OPTION = 'option'
ELEM_TYPE_PROGRESS_BAR = 'progress_bar'
ELEM_TYPE_SLIDER = 'slider'
ELEM_TYPE_DIAL = 'dial'
ELEM_TYPE_POPUP = 'popup'
ELEM_TYPE_TAB = 'tab'
ELEM_TYPE_TAB_WIDGET = 'tab_widget'
ELEM_TYPE_SCROLL_AREA = 'scrollarea'
ELEM_TYPE_STACKED = 'stack'
ELEM_TYPE_TABLE = 'table'
ELEM_TYPE_TABLE_DATA = 'td'


DEFAULT_VERTICAL_TYPES = ['vertical', 'v']
DEFAULT_HORIZONTAL_TYPES = ['horizontal', 'h']

vertical =DEFAULT_VERTICAL_TYPES[0]
horizontal = DEFAULT_HORIZONTAL_TYPES[0]

SET_HORIZONTAL = 'HORIZONTAL'
SET_VERTICAL = 'VERTICAL'

SET_NORMAL = normal = 'NORMAL'
SET_STATIC = static ='STATIC'

INPUT_TYPE_STANDARD = standard = 'STANDARD'
INPUT_TYPE_PASSWORD = password = 'PASSWORD'
INPUT_TYPE_NO_ECHO = noecho = 'NO_ECHO'


GET_ELEM_TYPE_TEXTAREA = 'QTextEdit'
GET_ELEM_TYPE_LISTWIDGET = 'QListWidget'
GET_ELEM_TYPE_SELECT = 'QComboBox'
GET_ELEM_TYPE_PROGRESS_BAR = 'QProgressBar'
GET_ELEM_TYPE_SLIDER = 'QSlider'
GET_ELEM_TYPE_DIAL = 'QDial'
GET_ELEM_TYPE_TAB_WIDGET = 'QTabWidget'
GET_ELEM_TYPE_POPUP = 'QDialog'
GET_ELEM_TYPE_INPUT = 'QLineEdit'
GET_ELEM_TYPE_STACKED = 'QStackedWidget'
GET_ELEM_TYPE_COLOR_POPUP = 'QColorDialog'
GET_ELEM_TYPE_RADIO_BUTTON = 'QRadioButton'
GET_ELEM_TYPE_CHECK_BOX = 'QCheckBox'
# GET_ELEM_TYPE_SCROLLAREA = 'QScrollArea'

ITEM_SELECTION_MODE_EXTENDED = extended = 'extended'
ITEM_SELECTION_MODE_NO_SELECTION = noselection= 'no_selection'
ITEM_SELECTION_MODE_MULTI = multi = 'multi'
ITEM_SELECTION_MODE_SINGLE = single = 'single'


PRE_INIT_COPY = 'copy'
PRE_INIT_CUT = 'cut'
PRE_INIT_PASTE = 'paste'
PRE_INIT_UNDO = 'undo'
PRE_INIT_REDO = 'redo'


center = 'center'
right = 'right'
left = 'left'
top = 'top'
bottom = 'bottom'
hcenter = 'hcenter'
vcenter = 'vcenter'
justify = 'justify'


# CUSTOM_TITLEBAR_HEIGHT = 5

CONTROL_BUTTON_CIRCLE = '10px'
CONTROL_BUTTON_SQUARE = '0'

# DEFAULT_BUTTON_STYLE = 'circle'

OPEN_FILE_TYPE_SINGLE = 'single'
OPEN_FILE_TYPE_MULTI = 'multi'

DEFAULT_OPEN_FILE_TYPE = OPEN_FILE_TYPE_SINGLE

FILTER_SPLIT_MARKER = '&'


SYSTEM_PLATFORM_WINDOWS = windows = 'windows'
SYSTEM_PLATFORM_WINDOWS_11 = windows11 = 'windows11'
SYSTEM_PLATFORM_FUSION = fusion = 'fusion'
SYSTEM_PLATFORM_CURVE = curve = 'qtcurve'
SYSTEM_PLATFORM_OXYGEN = oxygen = 'oxygen'
SYSTEM_PLATFORM_BREEZE = breeze = 'breeze'

ICON_IMAGE_ID = '-clera_icon-'
TITLE_TEXT_ID = '-clera_title-'
MINIMIZE_BUTTON_ID = '-clera_minimize_button-'
MAXIMIZE_BUTTON_ID = '-clera_maximize_button-'
CLOSE_BUTTON_ID = '-clera_close_button-'

GRID_IDENTIFIER = '=grid'
BOX_IDENTIFIER = '=box'
# TAB_IDENTIFIER = 'tab('
SCROLL_AREA_IDENTIFIER = '=scrollarea'
# STACK_IDENTIFIER = '=stack'

SYSTEM_OS_PLATFORM = sys.platform.lower()


def FUSION_CONTROLS():
    global CONTROL_MINIMIZED, CONTROL_RESTORE, CONTROL_MAXIMIZED

    CLOSE_EMPTY = b'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'
    CONTROL_CLOSE = b'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'
    
    MAXIMIZE_EMPTY = MINIMIZE_EMPTY = RESTORE_EMPTY = b'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'
    CONTROL_MINIMIZED = b'iVBORw0KGgoAAAANSUhEUgAAAGIAAABiCAYAAACrpQYOAAAACXBIWXMAAC4jAAAuIwF4pT92AAAJM0lEQVR4nO2dbYxUVxnHf8/u7Muwyy66q5LQGAxFSexL0gRatJi4paihZksTywc19hOJJST4mkC/ENMQxZcQo200oYl8EgigaVGx0CiWomD7gWJV2MRG7Qdk2bDsCzvsLo8fzr3DnTN3Zu7cuXdmduf8kgnn7j1zz3OeP8+ce8/bFVXF0XjaGm2Aw5DxEwMDA420IxQR6QU+DjwArAZWAvcAA96nE1gK3AYmgRvev5PAe8C7wBXgIvA3VZ2sp/1RuH79OhAQohnwHP+Y9/kk8CDQHuGrncD7vU8p5kXkIvA6cBo43UzCiN9GNCoiRKQfGAa2AhsxTq0Ht4FTwCHg16o6XqdyC/AjomFCiMha4FngC0BPpfxxbypEJEq2KeAI8IKqXohVUEx8IereWIvIZhE5A5wHnqGECKpa8IlLxOv0eLacF5EzIvJE7AJjUjchRGSTiPwFeAXYYJ9PyvGViFDOBuBlETkvIptSM8QidSFE5F4ROQacBNbZ59N2fCXKlL8WOCkivxKRe9O2IzUhRCQjIrswt45b7PONFsCmjD3DwEUR2SUiqd1lpiKEiHwUeAPYC2SD55pNAJsS9mUxdXnDq1viJC6EiHwZeAsT2nmaXQCbEvauBd7y6pgoiQnh/RT9GDhI4E5ooQlgE2J/D3BQRH4iIh1JlZOIECKyFDgB7Aj+fSELYBNSl+3AKyLSl8T1axZCRD4I/AkouNVbTCL4hNRpE3BGRD5U67VrEkJEVgB/xPQJ5VmMIviE1O1B4A+eL2ITWwgR+QCmr2aN/7eF3h5EJaSea4DTnk9iEUsIr6OuSIRWw6rzxzBi9Me5VtVCiEgncAwzRhBmUEth1f1+4Jjno6qIExHfBYZKGNKSWD4YAr5f7TWqEkJEngR2VltIC7JDRIq6dcoRWQgRWQm8BOQ7+F003MXyhQAveT6LRCQhvM6uXwLvK1GwgyKfLAMOR336jhoRO4CHSxToCGD5Zi3wzSjfqzhU6j2o/B0zW8KJEJHAEO0M8ICqXgnLV81Q6Q/xRHDEohv4UaVMZYUQkSHM7ArARUM1WL56QkQeL5e/UkTsrdkih8/zUmZKSUkhvJkMroGuActn64DNpfKWi4hvJWWQI8+3S50IFUJEHgE+5R+7aIiP5bsNnm+LKBUR2xK3yOET6tsiIbyhv6f9YxcNtWP58OmwrvKwiHiSCHNRHbHpIWSeV5gQLhpSwI4K+3yBEN76hI0p2+SAIc/XeeyIGAK66mdPy9KF9R/eFqLsY7gjUcoK8Qk/4dqH5LF8+mjwIC+EiPRgzU9ypMp9wXYiGBH3EW3hoCMZ2jGzPoBCIVw01J9QIVb5Cdc+pIfl29V+IijER+pmjcNnpZ8ILkX6cP3tCKe9vZ2lS83obG9vL5lMhs7OTrJZs/ho2bJlACxZsoTOzk4ymQy9vabd6+vro62tja6uLrq7u2lra6Ovz8yc7+npoaOjg46ODnp6TC9Of38/IkJ3dzddXV1FZV+9epUjR46wb98+crlc0lXN+zwoRLlV+1Wzfv16tmzZwuDgICJCf7/p5/KdkclkipyRzWbp6mqu58kVK1awc+dOstksu3fvTvryeZ/nZ3EMDg5e90/U2kYMDw9z4MCBqIvNFwTXrl1jzZo1lTNGIOCXsdHR0QEobCMS23ph165di0oEgMHBwTQu2+0ngkL0hmSMxapVqypnWmCMjIykcdklfiKV5b3+pKnFgqqyf//+VMsINtaTJBQVx48fZ9u25hxtnZ2dZWpqCoDx8XFUlZmZGXK5HPPz80xMTAAwOTnJ3NwcY2NjHD16lHPnzqVhzrSfCApxO6mr79mzh+npabZu3cry5csZHzc78ExNTTE7O8vc3FyRM27dukUul+POnTvcvHkTuOuM2dlZpqeNzTdu3ADI55+bm2Ny0my7NDExwfz8PLlcjpmZGVS1qOwmY8ZPBO+aLuM96bkn63QJ3MiMjI6OrobCNmKs7hY58j4PCvGfBhjS6vzbTwSF+FcDDGk5rOerd/1EUIiREpkd6ZFfMxEU4mIDDGl13vYTbdYf5+tvS8syT5gQqjqFi4p6cim476zdxXHWT7h2Inksn74ePLCFOJ26NQ6fU8EDW4hTQOLDUI4i/F2Y8xQI4f1muahIn6J9ycO6wQ/7CddOJIfly8P2+TAhjmP2ynakwzTGxwUUCaGqN3FRkSh2NITtzF9qhO7nqVjkAPhZ2B9DhVDVPxO4z3VRER/Ld2c93xZRbsz6e4la5IAyPi0nxAnMOx4AFxVxsHx2AfPKhlBKCqFmvPS55MxqeZ7TMmPQZafTqOop4GX/2EVFdCxfnVDVV8vljzKv6RsEZhs4qmYG+FqlTBWF8Hbe+o5/7KKiMpaPni+1e1mQqDP9fgD8tURBjgCWb94E9kX5XiQhVHUW+CKBrg8nRjGWT6aAL3m+q0jkua+qehnz3rhSBbc0Ib7Yrqr/iPr9qiYhq+pB4KfVfKdFeVFVf1HNF+LMBv868Jp/4KKiyAevEWPb7qqFUNXbwFMEZiC0shhW3d8GnvJ8VBWx1kd43bgbgcslDGoJrDpfAR6P+/LZ2AtVVPV/mN1s3gka1gqChNTzHeDTqno17jVrWjGkqu9h3u1ZsIpjMYsRUrdzwAbPF7GpeemWqo5hfqYKehYXoxghdfotsNHzQU0ksoZOVacx+9S9EPz7YhIjpC4vAsNe3WsmscWMqjqnqtuBrxBYG7bQ240Q+6eBZ1T12ahPzVFIfFWp99D3EKafJc9CE6SEvW8CD1X7sBaFVJb3quo/gUcwA0sFXejNLkgJ+2YwdVnv1S1xUnuftfdTtRezJ9Fv7PPNJkgZe36HeRHH3iR/imxSf8O7qo6o6mbgM5hx2wIaLUiZ8i8An1XVz0UZT6iV1IXwUdXfY16D8HnMS2YL8B2StjARyjmLeav7w6p6MjVDbLsqvWMotYJF1gFfxewKvKRC9thrvyOKegs4hOk1PV8pc5L422U0TAgfb8PyLZhX6AyR4C45FbiN6Sk9BByP20dUK00jRBBv+83HMBsBP0qyO2/OA5cwMxhfJWRqfCNoSiFsPGHux7ygdjVmD7x7gAHvk+XunkczmJ+Y697nv5h1zFcwawMvqepE/ayPRpEQjsZSt7smR3n+D2TKZ8HX3Q7XAAAAAElFTkSuQmCC'

    CONTROL_RESTORE = CONTROL_MAXIMIZED = b'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'

    return CONTROL_MINIMIZED, CONTROL_RESTORE, CONTROL_MAXIMIZED, CONTROL_CLOSE, CLOSE_EMPTY, MAXIMIZE_EMPTY, MINIMIZE_EMPTY, RESTORE_EMPTY


def WINDOWS_CONTROLS():
    global CONTROL_MINIMIZED, CONTROL_RESTORE, CONTROL_MAXIMIZED

    CLOSE_EMPTY = b'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'
    CONTROL_CLOSE = b'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GStOWF/kPVacuD7GJiZi7x3bi+xDSQJCIw0jHnNfvCEiIvb+eruIwNMQEBpnmPGoiAg8lYDQKKOIR0VE4IkEhMaYuXhTTG/8cLH9Z4pHRUTg/wSERqhDPCoiAvsJCLVXp3hURAQEhJqrYzwqIkLXCQi1Ved4VESELhMQaqkJ8aiICF0lINROk+JRERG6SEColSbGoyIidI2AUBtNjkdFROgSAaEWisdj67bi8aiICF0hIIzczEUbY3rTecX257dui7kt1xfbfzoiQhcICCPVxnhURIS2ExBGps3xqIgIbSYgjEQX4lEREdpKQBi6LsWjIiK0kYAwVF2MR0VEaBsBYWhmPnN+TG/+SLH9OsejMpSI9Hqx987fFNmHAwkIQ3HU2afHqi2XFNtvQjwqxSPy+g2x9J97Y99f/1FkHypjD6w5bnnUR9BuvWNWx7P/cHv0jlldZL9J8ThQyX+e7D86Gw+/9o3Rf3S2yD5ERPRGfQDtN/Wed4jH05i74tqYv+4rRbZ7x6yOqfe8o8g2VASE4laeenKR3SbHo1IyIitPO6XILlQEhOLGX/yigW+2IR6VuSuujflrvzzw3YmXvmTgm3AgAaG43qqZge7NX3Nza+JRmbvyuoFHZOzoqYHuwZMJCMUt7XxoYFvz19wcc1/40sD26mTQEen/98GBbcHTERCKW7xrx0B22hyPyiAjsnjXHweyAwcjIBT3+Pd/csQbXYhHZVARWbjlBwO4Bg5OQChuz09vi8Xf/yn9+i7Fo3KkEVm8a0fsufX2AV4ETyUglLe8HLPv/lj0H9p12C/tYjwq2Yj0H9oVs+/9RMSy/xGmLAFhKJbuuz8eeeu5hxWR+a3bOhuPytyV18X81m2H/Hx/58PxyFvPjaX77i94FewnIAzNvrv/FrtOPjMWd9z9jM8tP7Y7Hvv4Z1r3p7pZc1uuj9kPbYrl3XPP+Nzijrtj1ylnxb67/zaky+g6n4XF8PV6sfK0U2LqbWfGxGteEePPWRf93XOxdM+9sefW22PhG7ekftzVdr11z46pd50TK099Y4y/6IXRWzUTSw/ujH1//EssfOeHseent0X0+6M+kw4REABS/AgLgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUgQEgBQBASBFQABIERAAUv4HT9VG3cyB7JUAAAAASUVORK5CYII='

    MINIMIZE_EMPTY = b'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Uk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADsQAAA7EAZUrDhsAAASUSURBVHic7d2xDYAwEARBjOi/ZVMDG2BhZiq4bPXRjznnAQBPnasHAPBNAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkByrR7Ab8zVA35mrB7A/lwgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJA4qEUb/HgCDbjAgEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEguQG2twaCdhkURQAAAABJRU5ErkJggg=='
    CONTROL_MINIMIZED = b'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Uk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADsQAAA7EAZUrDhsAAASbSURBVHic7d2xEQIxEARBniIL5R/axQExMAaqR90RrDd11l0z834AwJeeuwcAcE8CAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQPLaPYAzrLV2TzjKzOyewAFcIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQOKhFD/hwRH8HxcIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAMkHux4L4VnDqLkAAAAASUVORK5CYII='

    MAXIMIZE_EMPTY = b'iVBORw0KGgoAAAANSUhEUgAAAZAAAAFACAYAAACSgSrjAAAABGdBTUEAALGPC/xhBQAACklpQ0NQc1JHQiBJRUM2MTk2Ni0yLjEAAEiJnVN3WJP3Fj7f92UPVkLY8LGXbIEAIiOsCMgQWaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKgKLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec5/zOec8PgBESJpHmomoAOVKFPDrYH49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28AAgBw1S4kEsfh/4O6UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0ST4FANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcCgL0FAHaOWJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2XS9IzFLiV0Bp38vDg4iHiwmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryMAgQAEE7P79pf5eXWA3DHAbB1v2upWwDaVgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0lYqG9MOOLPv8z4W/gi372/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHiNLFcLBWK8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y0nYAQH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESggSqwQQcMwRSswA6cwR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqgEZrhELTBMTgN5+ASXIHrcBcGYBiewhi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJhSDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1cQPqQ28ggMor8irxHMZSBslED1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqOY4DRMQ5mjNlhXIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hMWEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+TSCQOyZLkTgohJZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BPkvvJw+S3FDrFiOJMCaIkUqSUEko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQL1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/pdLoJ3YMeRZfQl9Jr6Afp5+mD9HcMDYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Yb1VYKvYqfBWRyhKVOpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7OUndSj1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L57Ex2Bfsbdi97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqtZq1+rTfaetq+2mLtcu0W7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02PreekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGoEctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxrPGFiaTLbpMSkxeS+Kc2Ua5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW2pZ8ywWWTZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p0in1U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTDqcSpw+lXZxtnoXOd8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt2W3U3cw9xX2r+00umxvJXcM970H08PdY4nHM452nm6fC85DnL152Xlle+70eT7OcJp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+Hvqa+It89viN+1n6Zfgf8nvs7+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsGLww+FUIMCQ1ZH3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjgR2yIuB9pGZkX+X0UKSoyqi7qUbRTdHF09yzWrORZ+2e9jvGPqYy5O9tqtnJ2Z6xqbFJsY+ybuIC4qriBeIf4RfGXEnQTJAntieTE2MQ9ieNzAudsmjOc5JpUlnRjruXcorkX5unOy553PFk1WZB8OIWYEpeyP+WDIEJQLxhP5aduTR0T8oSbhU9FvqKNolGxt7hKPJLmnVaV9jjdO31D+miGT0Z1xjMJT1IreZEZkrkj801WRNberM/ZcdktOZSclJyjUg1plrQr1zC3KLdPZisrkw3keeZtyhuTh8r35CP5c/PbFWyFTNGjtFKuUA4WTC+oK3hbGFt4uEi9SFrUM99m/ur5IwuCFny9kLBQuLCz2Lh4WfHgIr9FuxYji1MXdy4xXVK6ZHhp8NJ9y2jLspb9UOJYUlXyannc8o5Sg9KlpUMrglc0lamUycturvRauWMVYZVkVe9ql9VbVn8qF5VfrHCsqK74sEa45uJXTl/VfPV5bdra3kq3yu3rSOuk626s91m/r0q9akHV0IbwDa0b8Y3lG19tSt50oXpq9Y7NtM3KzQM1YTXtW8y2rNvyoTaj9nqdf13LVv2tq7e+2Sba1r/dd3vzDoMdFTve75TsvLUreFdrvUV99W7S7oLdjxpiG7q/5n7duEd3T8Wej3ulewf2Re/ranRvbNyvv7+yCW1SNo0eSDpw5ZuAb9qb7Zp3tXBaKg7CQeXBJ9+mfHvjUOihzsPcw83fmX+39QjrSHkr0jq/dawto22gPaG97+iMo50dXh1Hvrf/fu8x42N1xzWPV56gnSg98fnkgpPjp2Snnp1OPz3Umdx590z8mWtdUV29Z0PPnj8XdO5Mt1/3yfPe549d8Lxw9CL3Ytslt0utPa49R35w/eFIr1tv62X3y+1XPK509E3rO9Hv03/6asDVc9f41y5dn3m978bsG7duJt0cuCW69fh29u0XdwruTNxdeo94r/y+2v3qB/oP6n+0/rFlwG3g+GDAYM/DWQ/vDgmHnv6U/9OH4dJHzEfVI0YjjY+dHx8bDRq98mTOk+GnsqcTz8p+Vv9563Or59/94vtLz1j82PAL+YvPv655qfNy76uprzrHI8cfvM55PfGm/K3O233vuO+638e9H5ko/ED+UPPR+mPHp9BP9z7nfP78L/eE8/stRzjPAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADsQAAA7EAZUrDhsAAATaSURBVHic7dyxTYMxGEVR/ygV46RmMEZgITagZhxaswBB4hb5QnLOBK+wdGUXPvbeCwD+6ml6AAD/k4AAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJCcpgfwMPb0gAdzTA/g/rmBAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAInPFLllb2utz+kRw85rrdfpEfATAeGWfay13qdHDPuaHgCXeMICIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASA5TQ+AX7ystZ6nRww7Tw+AS4699/QGHoODdl3H9ADunycsABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIPEbL9ficz+4M24gACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQPINJnIPa2RJfiUAAAAASUVORK5CYII='
    CONTROL_MAXIMIZED = b'iVBORw0KGgoAAAANSUhEUgAAAZAAAAFACAYAAACSgSrjAAAABGdBTUEAALGPC/xhBQAACklpQ0NQc1JHQiBJRUM2MTk2Ni0yLjEAAEiJnVN3WJP3Fj7f92UPVkLY8LGXbIEAIiOsCMgQWaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKgKLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec5/zOec8PgBESJpHmomoAOVKFPDrYH49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28AAgBw1S4kEsfh/4O6UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0ST4FANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcCgL0FAHaOWJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2XS9IzFLiV0Bp38vDg4iHiwmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryMAgQAEE7P79pf5eXWA3DHAbB1v2upWwDaVgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0lYqG9MOOLPv8z4W/gi372/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHiNLFcLBWK8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y0nYAQH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESggSqwQQcMwRSswA6cwR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqgEZrhELTBMTgN5+ASXIHrcBcGYBiewhi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJhSDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1cQPqQ28ggMor8irxHMZSBslED1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqOY4DRMQ5mjNlhXIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hMWEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+TSCQOyZLkTgohJZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BPkvvJw+S3FDrFiOJMCaIkUqSUEko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQL1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/pdLoJ3YMeRZfQl9Jr6Afp5+mD9HcMDYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Yb1VYKvYqfBWRyhKVOpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7OUndSj1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L57Ex2Bfsbdi97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqtZq1+rTfaetq+2mLtcu0W7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02PreekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGoEctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxrPGFiaTLbpMSkxeS+Kc2Ua5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW2pZ8ywWWTZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p0in1U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTDqcSpw+lXZxtnoXOd8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt2W3U3cw9xX2r+00umxvJXcM970H08PdY4nHM452nm6fC85DnL152Xlle+70eT7OcJp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+Hvqa+It89viN+1n6Zfgf8nvs7+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsGLww+FUIMCQ1ZH3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjgR2yIuB9pGZkX+X0UKSoyqi7qUbRTdHF09yzWrORZ+2e9jvGPqYy5O9tqtnJ2Z6xqbFJsY+ybuIC4qriBeIf4RfGXEnQTJAntieTE2MQ9ieNzAudsmjOc5JpUlnRjruXcorkX5unOy553PFk1WZB8OIWYEpeyP+WDIEJQLxhP5aduTR0T8oSbhU9FvqKNolGxt7hKPJLmnVaV9jjdO31D+miGT0Z1xjMJT1IreZEZkrkj801WRNberM/ZcdktOZSclJyjUg1plrQr1zC3KLdPZisrkw3keeZtyhuTh8r35CP5c/PbFWyFTNGjtFKuUA4WTC+oK3hbGFt4uEi9SFrUM99m/ur5IwuCFny9kLBQuLCz2Lh4WfHgIr9FuxYji1MXdy4xXVK6ZHhp8NJ9y2jLspb9UOJYUlXyannc8o5Sg9KlpUMrglc0lamUycturvRauWMVYZVkVe9ql9VbVn8qF5VfrHCsqK74sEa45uJXTl/VfPV5bdra3kq3yu3rSOuk626s91m/r0q9akHV0IbwDa0b8Y3lG19tSt50oXpq9Y7NtM3KzQM1YTXtW8y2rNvyoTaj9nqdf13LVv2tq7e+2Sba1r/dd3vzDoMdFTve75TsvLUreFdrvUV99W7S7oLdjxpiG7q/5n7duEd3T8Wej3ulewf2Re/ranRvbNyvv7+yCW1SNo0eSDpw5ZuAb9qb7Zp3tXBaKg7CQeXBJ9+mfHvjUOihzsPcw83fmX+39QjrSHkr0jq/dawto22gPaG97+iMo50dXh1Hvrf/fu8x42N1xzWPV56gnSg98fnkgpPjp2Snnp1OPz3Umdx590z8mWtdUV29Z0PPnj8XdO5Mt1/3yfPe549d8Lxw9CL3Ytslt0utPa49R35w/eFIr1tv62X3y+1XPK509E3rO9Hv03/6asDVc9f41y5dn3m978bsG7duJt0cuCW69fh29u0XdwruTNxdeo94r/y+2v3qB/oP6n+0/rFlwG3g+GDAYM/DWQ/vDgmHnv6U/9OH4dJHzEfVI0YjjY+dHx8bDRq98mTOk+GnsqcTz8p+Vv9563Or59/94vtLz1j82PAL+YvPv655qfNy76uprzrHI8cfvM55PfGm/K3O233vuO+638e9H5ko/ED+UPPR+mPHp9BP9z7nfP78L/eE8/stRzjPAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADsQAAA7EAZUrDhsAAATySURBVHic7dwxdQJBGEbRTU4aNKwGWgxgBzmool0No4GSGAhFXpEh7L0Kvu6dmeL/GGM8FgD4pc/ZAwD4nwQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIDka/YA9mFd19kTdmWMMXsCO+AFAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACSOKfKyLpfLcjweZ8+Yatu25Xq9zp4BPxIQXtbpdFrO5/PsGVMdDofZE+ApX1gAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACRfswfAM7fbbbnf77NnTLVt2+wJ8NTHGOMxewTvb13X2RN2ZYwxewI74AsLgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASFzj5U847gfvxwsEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASL4BtZMh1u+lxDAAAAAASUVORK5CYII='

    RESTORE_EMPTY = b'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Uk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAWwSURBVHic7d1BahxXFEDR17FDbA+9Hw+ziOwhq0kg0wy9iAyzHw9tTeTOJAGBEZGu2vWrinNAIzWtV0WJS334/Mv1eh0AeK4fVg8AwDEJCACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAiYAAkAgIAImAAJAICACJgACQCAgAyevVA0D0aWberB5ip+5m5v3qITg/AeGo3s3MT6uH2CkrC2zCg8ZRfV09wI65N2xCQABIBASAREAASAQEgERAAEgEBIBEQABIbCTk7D7OzN8z82r1IC90PzMfZuaX1YPAfwSEs/trZv5cPcSN3I2AsCOWsDi7o795PHSma+EEBASAREAASAQEgERAAEgEBIBEQABIBASAxEZCtnLrM8zfPvFzf8zMbzf8u9+DM8w5JAFhK6vOMP/x3589sxLAIXlw2Ypzuh/n3nBIAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAYiMhe+MMczgIAWFvnnSG+eVy2WCUl7ler84w59QsYbE3R3/zeOhM1wLfEBAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBgeO4Xz0APPR69QDAzMz8+j+/v5+ZD1sMAk8lILAPv68eAJ7LEhYAiYAAkAgIAImAAJAICACJgACQCAgAiYDA+fi/ZhM2EsI+fLnhd93d8LvgUQLCIV2v19Uj3Nq71QPAc3nVBSAREAASAQEgERAAEgEBIBEQABIBASAREPbmTOd+n+la4Bs2ErI3P8/Mm5l5tXqQF3KGOad3OeGOXvbp88y8XT3ETn0ZO9E5IEtYACQCAkAiIAAkAgJAIiAAJAICQCIgACQCwlY8a49zbzgkO9HZyueZ+bp6iJ1yhjmHZCc6AIlXZwASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASD5BzTqM+5elp7eAAAAAElFTkSuQmCC'
    CONTROL_RESTORE = b'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Uk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAXmSURBVHic7d1BTiJbGIDRaukEXYczN+DMNThzLx1di1twDc7YgDOHrEGQQL/ZS79EO+3XPorCc6YQ+KtSyQc3ubnflsvlzwEAPuhk7AEAmCYBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEg+T72AFBcXFwM6/V67DEO0nw+H56ensYegy9AQJikl5eX4fX1dewxDtJutxt7BL4IS1hM0smJR/c97g374kkDIBEQABIBASAREAASAQEgERAAEgEBILGRkKN2fX09XF5eDtvtduxR/spsNhsWi8Xw8PAw9ijwLwHhqF1dXQ03Nzdjj/Ep5vO5gHBQLGFx1Kb+z+NXx3QtHAcBASAREAASAQEgERAAEgEBIBEQABIBASCxkZC9+OwzzFer1R+978ePH8Pd3d2nfe//wRnmTJWAsBdjnWG+2WyGzWaz9+/9CGeYM1WWsNgL53S/z71hqjy5ACQCAkAiIAAkAgJAIiAAJAICQCIgACQ2EnJQnGEO0yEgHBRnmMN0WMLioEz9n8evjula4C0CAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAAJAICQCIgACQCAkAiIAAkAgJAIiAwEbPZbOwR4D++jz0AMAz39/e/fX02mw2LxWJP08CfERA4ALe3t2OPAB9mCQuAREAASAQEgERAAEgEBIBEQABIBASAREDgyOx2u7FH4IuwkRAOwOnp6ad91nw+/7TPgt8REDgAz8/PY48AH2YJC4BEQABIBASAREAASAQEgERAAEgEBIBEQDgox3Tu9zFdC7zFRkIOyuPj47Ber4ftdjv2KH/FGeZ8Bd+Wy+XPsYfg+J2fnw+r1WrsMQ7S6empnehMkiUsABIBASAREAASAQEgERAAEgEBIBEQABIBYS+c0/0+94apshOdvTg7OxtOTvxeeYszzJkqO9EBSPwkBCAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQABIBASAREAASAQEgERAAEgEBIBEQAJJ/AKsTfu0qNqrxAAAAAElFTkSuQmCC'

    return CONTROL_MINIMIZED, CONTROL_RESTORE, CONTROL_MAXIMIZED, CONTROL_CLOSE, CLOSE_EMPTY, MAXIMIZE_EMPTY, MINIMIZE_EMPTY, RESTORE_EMPTY


def CLERA_CONTROLS():
    global CONTROL_MINIMIZED, CONTROL_RESTORE, CONTROL_MAXIMIZED

    CLOSE_EMPTY = b''
    CONTROL_CLOSE = b''
    
    MINIMIZE_EMPTY = b'iVBORw0KGgoAAAANSUhEUgAAAGIAAABiCAMAAACce/Y8AAAACXBIWXMAAC4jAAAuIwF4pT92AAADAFBMVEX6xTf5xjf5xDb6xD/9xTf7xjj3xzf6xjP1yTP/wzX/wUT3yyv9xTT9yDn3xUD8xDX/xS/+xjjWnhD4wzT+wj7+xDf6xy73yS/aoBT7wkj/wjn/yjv4xz39xjD/xD3/xEX+yCSlilr9xDr/xyz/yDr9w0DZpQfbnQvdnhb/v0X3yDL6xzj6xTrSniD/yTPZpBbnrRz/xyf6yC77w0PPogX6wirtsyT+xj6ogUzWoB7/xkL6wDripxjNoSPSpxfvyj//yijeohPNnxbUnQHUmwvSny3QnznTogP6uhr6yDT/xSbzvC74xijSoRLpshvxuhbYoSTPnArRmhaXgFvRpQawkET6wjT6yjnzxDj/wyzWoRHRlgz/uzLfpQ3jqxPKojjjoQeKhoK8iEfzyzf3vzD/wD7NmSffpRzkrw2jg2X9vUS9nFTKoizcoAjUqAn1x0HXoAPwySz7yiv1yDn4wEW+nUL5vynuryPLnU7npgjRox3HmjvPpSj4uifIpzLLpRzyzTD+zTPxuS2tiVb2vDmagXz+vjnUpyPFkVLInTDHniPdmyGuk2TVnS57cXb/wx74wznlryXhqh3RpD7dqAj3si/VpDLrqRrXnhvJl0m+l0PZmw/EokjWoC+UeE6oiFn0vCGsk0/wtyTLn0D4wFCeg1PamAzurg3rtRW4k0ninQj4tzijhmm1jVzbnTf8xSuvkDn/x0awjkrywij9yUOad0qriVr7xFP8vhrMoSq7kjjzsxm9kTvNmzm6mDXKoQ/DmjX0xi26lEvFlj22jlClh2HjmxWoj0P/wS26j1CNeGqUiHDJmi68mUnHnT6xi0OMdUWQeU3yw0fNqjyoiV27i1ixi1b4tiGiekW1kk+tiFeuhzqGbUDhpiuYgkyfey20kl+mjGCuimX/y0DZliLblz2xhjm6mSKviSrHokqShH32zz60kjW7lSKtlFiqiTmDblryqiaJd1rMpFbrohzkniXImlbJoVmjiEypfUrkvw+9jC23kzt2c3rIoCdHcExTCwq0AAABAHRSTlP///////////////////////////////////////////9N/////////////////////////////0///////////////////////////////////0//T///////////////T07///////9Q/////////////////////////////////3n/UP//////////Tv///////////////////5vf//////90////////YP///4v/YP//z4f//97//6L///9y/7Xcac7//v//T1HEm7DSb8T//63Tvv/glP+tUfy4v8D/Wf/////L4uFr/7v/3Fd1/1n////q+Ov///DnifAAzYJCZgAAC91JREFUaN682HdUU1keB/CXAukJaRBIAA0QAqEbQCABEzpIZ0IETGDoTakiTUZAEBBFRXp3ERGwDMIqKuo4DghnxjL2ujrqcXWn7+yZbcd9D7AhOuCL+/3jvXNS7ufc+8q99wc8X2iWziRpOZSQkAX/7zmwkB9FT00N3Phhy0wGBwdv3rz5+9n2nslJFRFJSweu9jWPVUmlDo2N1dXVjebm5lVVVZVjY+O/371wGzYRHf204/6WlJRWZaE438EBIhwcHMTi1FTlhtbWlJSu8bv/3QqHCPnx1mh8CxhjPp8FnYzBA4slkbBobm4sFssSOn//5N77+/IeYnKg41xzgbuE3xIR0cKXiEQNVrm5uXbTsdohYtHA9mksSaFybPzuha0fQIT80nGuyaMtEGyJxkrYYWdXUuIbK6Og0RQKkyKL9fUFHRHYHVpgW5tH8+N7FxZLTE5d3rIlZb1HTWMjS7S9JJbCZDLRVKqhIZUKng2hgB/JSrYnsCLi4z12p3R1XPxlUURIz/iY0t28kSbJ6y3xpZPYJIAuIAkEakg6HewJaLDZMrQh21AWW/Lbb1+18C2dC7+/1b4IIuRsV05rZbx5oyj3iA+bBDVMRwIAoAYgkXQqFY2GhksGBU1lJ/f/nMAP9xNvyBmfvyPzECGfj4+lFlq6pin8O21XbBQAoACQSAACIRAgEAAVNChgDKkyGXRxHOMir/XmpbnWVaSOtl9YEDE5cr8rZ0O+32qrzlUGBtYrAQSJzSYhkAISOFIIJBJqHrosMgp4oKJlkeU6uj5evXWu+d+2dt1tXwARcmu0wN3cLS3Px0eDqJ7l4qI+J8BboeBWTUxMNPAj4us9nty7/UfEprPnmna3mbN6jyyUQCCIRA2QiMwNjI8/UTB6cfL9xPKO5kfV1fy8Y9tWaBDNyGvXurgg/iAxMVkcjpER/pDJrr/v2WMs6Ru+/T4ipGNw/f6HDyXXDAx8Fkvg8XG7GvgtLb/eHH4Psfxvo1WBX/FF3QcsbIY4ZBQKZUYkvj0wbwYA1OXqZDJZXmvPLGrYF5Hg/u977yQmL/dVih32NExYaNie9l4swUHZU3FFDVHB9TvPX3wHMTXSV+nH4yk6N240HZI/W0tGMVat2rYNPSdzCR0dJtEU+xkYbBiJ65ubFpXg8caD/hrx9H6K0i+dZ2t7YOVpbJbLwgniNJGRgQ1j2zv19+6J2Plr6U/zESGPpZZpbneSgQ+M2myS77i61uXfmIfYdLYvP9x49S4TmATwp35FOq+ib/htoqdvtyWNtxflCLcXtaROXvoO5fH2ucTU/ZTd4Wn+todRAMzUfueTyLNUpvTMIaaujtYHu1mts9A6DZfIzDQoUrS4uf/n4pvEQFdOfbBxt4XF0NCHNo2czcZMA4siSbB7a89PrxNJVwocXKNyI+1RGRlwicxMe/vIn6NcE0aHXycGBgsSInojy51QBAJcYmWmPThJNURYFsx2A5i5YZsCjaOu6eOztQmmcK/Fykx8skncsX3Gd5qGXxEPBkEiz0tFhA0+GY/3ymsJXD/wirjcVyNJ8584pJ2tjULCJehAdrb+4YljLfz9Z66/IKIHm2okkiINkMhWAYHMzl52SKMoir9//cgLorRZHL5aIbMP48hrGQy4BJcrl6uHmcVapdHabrTPENEdOWKaqBttxuHIzVRBqMvl8lpZkcTNvXl4htjUtWGNZ6ItR56RoaUbFweX0NMjEDIysjgaClde6vIZ4ilE+G/kyE+rigAnj6zDFlauvJ0jM8TVVGlQwi4TDV1NTRRDRwcugcGQyaamGKZJckJwxdHrEDE5CBKifrzqCVFQReUwRCSdS5V6WpXpq4ogEqcJrkmyFc1ZvBwiBjanSsPtTD4CYWeZLy6FiJGmYiEvwIihq2ljg2LgcHAJNBqFwmIxRLxJp0JYfBwiLoNE3TrHOJUT+HWJwuIz17cCzzsKQoWJPo5luppaWigj+ASTuYyMxZpi9I189gpDT/wTJG5CxBLVE45G1nuFzrtBIvpcpTA0YAnDCWOqGgKHmyGMypcEeAo9brwkjFRO6M0Qnz4Hoje7h4YGrNBflmWKxaKMNDRUNFAIo3LrgHTPmllizccneCChvTYrJoaDgk/gcCiQwKrrJ1t7pafv/6iEySuixpMXYKANElisKggNDYjI4ugnG3il/d+IHHG+pT/xkBOKTCAQTLW14RJ4vGYmgaCOOtSPjm0MbjsOPt1j4vxwK5xjmcqJMmaRW7D7Y5A4UyX2U6zTK+eagYS3KghdkOCgGE5EuyDzaeKLj0Q46eEUQYFHoTftwcpCP1ERU4fLtbGx0cXjVUDYgISZzNC2Tlr/DTRffAkSq4uYeqomdNidPGn9KYhY2qyU8rpxOB2upqYmUSUEOC0guBSLbs/8nZ9MLw8g4tiEygm0rr9nvvL8zDqqNVW4+pphpJOFxQFbhiNcAlwFYLS0ap1sdXnCqr9Or6Oel+YUhkqOUcu5FrogoQ+X0GdgQMKMS4nlCQsPvljTKp3Dc5l6ehiMpiaXC5dwBNsxDePYE+2cT377ySzxg9KZJloHfWXjrSrisL1MBBLnX+wvcgqlkm5HPYS3FsEbAX/ZjMEISPYo33C/k1/P7i/A27ZYKrFyYiC8CVreAtgEFyQEKCc7ml/xwZd7vS+qpKyEMqewMIIW1hv+FgaDIZmVle2gSY8+eUn8WJXPYpWUhYVpqYbwJtWWlVjSpKde23dfecRPT8x45nLpEjoWLpHx7M/Zy74bShRWtJ59rXrwoImftuZfMSBBocAlYmIuZS8zC+CFFp/qeaMGciIwSDGkxamlUOESYep0CsZ3R1Bhwfk3KjmfgwTP/3SYGnyCIwfQtv7hQRWznXhZj/rL+hPVeV7WK8xq4RJOjBU+AXXmHv+4Oqeq9mCzR3VU7xFrFRB61p2JPHOP0rdqg6WbH+0DDQ4ZLhGH37a3LvTE1+1vVzivPNq3J8qLcxj2m1b/SJ3nmoIr89RpkzbvbzFWlJGni5UAkr7Ypkkk6F90Or5fEXRSeWPeavOXD/nGadvLBAI1gE4H1D6grgaoCQBk8s+uQudTpfMSSSPrPeLNt0Ot0+lq7EUXiehIAZuNjN1eE6/85vI7Kv+fHo+PD3aw80WC/VAjLZ5Q+9+kH7N6+wX1Ttv5Buf8ReuDioAg/YnerNK8ZIQTq7S0treBvlPd9wd4ZmEUDwdEBwLtYNBmIDm6WbW1hZsm6gfa1Z3HO5eUdDhISEh/UpMwOck1ZdGkqKio+ucW+GfEks7oCwUKgf1BanoSbjKICoy6+zyU4Lze2dI5OcC2W39/f+QJzgn5W3x8jIqKxMSE2Rl0dJSAQFJS0lhViYXH1HS9rPL69ab29sk61jFtUjEfjz3pdTt8iIjZScUNpTlVapWVHjsiBVXM+fh8wECMHd0KZWVlWSBWsLeP0HlsFTP1y5djX+ee20PUHGvmpuzF03SjbcprRVX0PMW2b18CBNu3SxobG4MmsNjBgIdHRZB/grWxvLyVqjWnwIndlc6+NZPPNhM7U2zxvNNSYpnGdLNaYb1GiBVLJNGt4A8Ls7YG2qFqJZdSnqCuHhtle+Y98fPdmUeyP1fvdQ2Y5GfqcFAM2CkQ8/FRgAIeIJAFAnYeQUFBc1XVmJip0zWCnHIun9tA0qy9ReieyW6uukKxGSs2bxYDxndREboVeioqKoLM1i1Tpx9bphHQvvPNe5LXHjx6l73YTXdGlJ/figVlprKColJSqamamppcqalSUpw8AsrrTRf4r8jIiFWPTqv4/uAIOSsoQje9nOwaFB0Y6K4W57fIG92KsgUrMqYUODtHz06fdq7Zgsx1IJmPDlVM1gWBGTOEJk0yKJ86dfXq2tpFZn4Gk2zSJYSCgoJ0Ay6/PLQpmILVLElJR3YGBFhaWs6QEJKQ0AABdQkgEAIBff0AS90zG0IpXpOTFHrkTOniyTU1dnZ5ISYmJvv376+vt82JX1xR8e3QNgsL6qwssggN3XR2Z5VdHhjY2dnV2/47s+dAqAUxmomzArE+KhQCgCwqr4+iDAAA5Yd+YHnm7/cAAAAASUVORK5CYII='
    CONTROL_MINIMIZED = b'iVBORw0KGgoAAAANSUhEUgAAAGIAAABiCAMAAACce/Y8AAAACXBIWXMAAC4jAAAuIwF4pT92AAADAFBMVEX6xTf6xTn5wzz7xjz6xjT6xTv+xDf7xD36xTP9xTaXWQWcXQz9xz35xDn8yDT4xDL6xDaUVgP5xjeYVxL3yTD9xUybWRv3wy/iqjGaWBuaWRT6yC6xcyD/yC/+xzj/wjT9wz3/xT39yTr8xj/2wjP/wzr6wzX8xjfUnRjWoBD3xUH/wTmqj1v/yjranwf+wDHaoxL3yDvxzDPVnQ36yyv5xi77yTXBnE7+wUb1vS/VmyPOny3+xi//vjeijXj/xCzirB/ZnhjNoDThnwb1yim0jjfSowndmRPToCP3xj33wDD7w0Tzy0PMmh3enBXPpTT1zSn/wj//v0j+x0Tkmgn2txTZoRzhohn9ujLPnR/Oojv3xyr6xD7/wD7/vUH3wETIoSHurR70uR/VoBjOnEv4xzfzxzz8xDHapwXSph36xEDgogX7xzWXVRj0xTnxzEzwuS7+winMnD3nsB3RoAnGnS/anAj3vzz/yi3osyTNo0rVnS/6vx/Woi/FmUDFoUq1diL5wjqRdUn/w0mcXwXzsSjRnBGNdGH6xzbzyEH+xyf3wzKzmG2xkEb+xB6vlGLztSf/vBy5l0r7zzPzyTT/xEP/yTTkqBrqpiH3sxjcphzDlyyRgXCylF3/yUPwwzj/vU7/wVG7ml3stirjrQzZlQvHnz7/vS/xrAq6l2WUekWwk27HozDOlzDUmhHstBH6yUCnop/4zUCNTwK+mEjEoFvcoDf3zDL1wz3ZlxzLpSbUpxHlpAfqpwW0kGFdXGK+kCSrj1PGjSe8mUWpiVDqxUG1kUC3kDaRUgrOqiqyllrnrzXtvCvonhbAl162m1i5okv7xT64fBqqhTX+zD6Sd0mukVCIb0ePbzndlSubej/xrDDSnT26kjnGmSiYgEGrmXatkm+eeyurhS2lZhKulZKneyTLmgn0pxvlzz6AaDbxtEW5m122nj2qbQ//wluhYB7lnTW2kkCedT+ojG/GmDCdfmK4lR3GnUKehDf/y1vVqUh+XlEAxTlHcExHcEzUMR3qAAABAHRSTlP//////////////////////////////////////////////////////////07//////////////////////0////////9P///////////////////////////////////////////////////////////+////////////////////dP////9P/////1Cd/13///////////////9Oef/////c////////uMlp//////9P//+0/////////////06vi/zdx/9p2f//zv/////9////e/9fVVLb/6D////fi/+xzb//UE////+c/4z//////+v/5Me4/eXa///j/wAAkbI9EwAADY5JREFUaN6s2AtQUmsCwPGTIon4QKWsSERFFPBBEooiqGikmCJ6S/GRiqJYxmiiZvnIZ6WZXtMs3czStSzTu5k9rHVvtnPNaupqtTdrvT1vzdzebVM79+5M+334uK7ZCtF/nIFxOOd3vu9wzncU+ahuf5pqG0zt7T4i6nyI5+hYXTU4NtYEy8pqahobe/v3O8VqOnMTPF71g/7+a7WFhe1RUXw+v7NTFBWVlJR0rb//3fvibVoTPN6xn5uagiUOiVTGej+/b0DOzn4gZ+fGxtSA+A8fHt3bpg3B4z24f38jn88JSHRgMrOzofDNepifM5NJTU0d6uvrvP/u/a1tX0isqB487hkSwqAyy8upjEafzNzc1nQPj6tXr7bmZvr4wN93MakMP+eugUfFP30Bwas+dC1pi+fKELB7n9x0IZlCwcEQm/GIQo/0XB8Gs+v8+TVbCvrf39KUcHQ8WdsuynfoConwyWwVwv3evOkEdmyPkCsrTcy22xNBOI/WTB+Gr4NnflTB20e3NCJ4x/qvu7dnSSS+DWUUhGhjg5CFE6PAbQeZmSGIkAIYNEWY2bDGkxO1ubC26p4GhOPlgqx4gUAgz0wn69qDEASHgzOF2NsDDxo4HAWHwaApFErzuvTMRqpSkBr/YfaBILMOwb1QlHpO3ia1sGk2JNqDvYGRIBORJyLaY3AUSDSH57T6MASpfZ21VcVqEY4Xagv4AYz1R7rzKtxkyQo4/+AsI3AkcJdgDKrzDd7i0Bgi8YACwaTkre6WM871ZX1/Rw2C96DWvRAQ5/N2bdrEIh9IVs0POLfwVCAInDTExKSSTMbhMPZoMFPfBRph9uzZldcmV8aLCgeP/jQX4Xi5r69PUh5RRudy6XZ6tB07kBmZqUIQDAgNwuNRaDu6lRWxhloekBrf9Ikxg+C9uz4U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'

    MAXIMIZE_EMPTY = RESTORE_EMPTY = b'iVBORw0KGgoAAAANSUhEUgAAAGIAAABiCAMAAACce/Y8AAAACXBIWXMAAC4jAAAuIwF4pT92AAADAFBMVEU66kk460g66kY27Eo760o96E837Ec56Ug87Us17kM360s27E466Uw/5lI350Y660M66ko46Ec37UQ+50036koy8EQw8UMZuiQ96Eo96Ec96Uc+6Eoz7UkNxBw+6kYVwiEWzB8Ovh0bvCI/704z6kM670pE5UlQelc2qD1C6lISuBsOuxwayScY0iMurDhTiFY76Uk/6EYlszIXxSQLyRY65kUczSobvy4PwR4auSwUvSAevSdanl887Ug47jlA7Ewdsysety486kJD50k36T8y8D4VvC8e1ysTyCBkbmAUwB1A6UFB50Mz60A870Uk1DIlsDoTxCMguCgIxhU3nkY46lBE5E847kgy4z45708q2jM08kMp1zc25ENWmFossDAMwRU6o0gotzI76k8/60o76EU+7Tsu8zxFkFMp7joUvyMUvSciui8w7EhB7EYv5kEtqUUYtygftiQvs0FA5FUv60xA7k4+40M78UE69Ucw4T0l3jccwig7pUExrj0xsTsg4TE17z8w7k416Eo38kgw7j8GySUv2T0s3Tw28VYjyi8u6DofxisfuDxEmUkmsydKilUXtCA7rEU46Fc35Uw5qUNG60ZF4FA940433kEQzicy9T4i0S4m5TREoUoK0xxjdmAe3CwcsCAkrysw7ldL40tUmls08EsRwTIR3icysTwstDwqrTBVl1lE71Utszw7pUlRfFk6qT44+Uk3kUoKwSg0pjNTel1JkEs0mEEupkVVdFVJmlMIzxkqsTc+8k81sD1ApEku4TNA6jktrzVFnk9FkD8EvhRsZW9XgmBCh01Ji1Bcl19TkVQzpDU0skMduDE8pkVllGhCrUcm8y5ThVhB9VBSjF1FgU5HokxSo0tEoFJNgE5Pg1c9lkkU2CJbeVVEj1Ay0Tc8rEU6qz5OnlAKxi8m6jVUkVVFk0yFkIJ3l3RJ3kY8tEQu+zwa5iJOhlZFj1FsmWwWwSE/jUxZdlksqTlnlWhcmmCFjIUYxCQ75zmAjIBecWtHcExHcEwlZmLnAAABAHRSTlP///////////////////////////////////////////////////9Q/////////07///////////////9N////////////////T///////////////////////////T///////////////////////////T////////////////v///////////////////////////3L/////////////Tv//////av///5v/////hc96T/////9lU///Wv//vf/Mov//3sn//07/vNzB/+ew35Z6YP+2/6LctlLe/4z//8+v/3ndiPz/0GNQTf/l//95W1S+z6/woeq/4//94wAAO1GidwAADFNJREFUaN682QdQU3keB/AHhCQQCEkogUAuNAmEIhASQiIQDFJCQmgCQliKoaOg0qUIEuFoAq4oXdaK2DhFrIMVQXEta9uzru6trnuurrN7t3d7N9z/BVHEBuR535nMCzPwPvPev/+AxqabuSBfKDIPzrT/bgyazi/5b6IfvXuh4eLF3bvhD5zfR/959aenCBH+mwbOp9wLO+Lg7EVOTyOTzUF4GRkJvaVNzy49eqo0MTw88N+RkYbdx+KbShMyeOlcc0XIIfzNuxysi4s7//Ovq0+VIehHv/vqq+Uh5ryiIq6ZGYdDpVKDg4NpHA7HTBFOMJPT7/rs0jcvZ0n4H701ktK4nMfjkRmNNCbTjt0ukURJQSQSCZttF8wxs7X163cLauoc3fZ0FgQADh909uLxzBkM89pqqbSqKjLT0hKFQkEYDJEYGVkVJWHbMYVcckhCaVP8t9tmSgz7/zZysbPEmQ+egVf7sMWYIkO5zwGxsMjNxYKAK4oYU1hVXVuU4VxiHX/s99GXMyLofQ33imNDOKGh3FppjLGnJwqLRaFUVFRVwQU8BwRhIBhCQVYt7XbUYCZzmXPJyb/NgNj04M7F+uJdyznH71e2qO/Z40kgYkBUQBT3B8HjiRgIaAIrUcxKiZ+Zm7ND8bHRQ9Mk/AcOH2wUUkNDTdurCm8MLtLD4/Vy4Zu7g8C3hx8EJsE3bJ5gcP/+1J6u4340r1jrK+unRQz3NYQ58IQcF/uVeM/c1Xo4HAajpwleEgZuZsyroCAi+AGFFQgSxQbJbcn3W5leu6ytv705DcL/t6Fir2CX0K7n8gj17Gw1RTRhQhFoSnA4NRONMg+Pgkg2zdXVte726BefIoYfjBwr5nNcep5fi44w/DSx8BXhocOS1rotq4s/9mTux4m5X+9KSPBa5lq9UdvGU0Ws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'
    CONTROL_RESTORE = b'iVBORw0KGgoAAAANSUhEUgAAAGIAAABiCAMAAACce/Y8AAAACXBIWXMAAC4jAAAuIwF4pT92AAADAFBMVEU66kk37Eo+6Eg17Uk66kcMcgg77EoNcwU56UgCfAI66Us27UMHdgYFeAYJdQUKdAY87kwPcQc96E4McQs37E037UU650cAeQA46Ec37EcMcgwcuyMPcgcMcwkRdQox8UIbuCo96kMAdgACcQEUviQ17E867EI470s65kcz70QLbgMBfgIEdgIKegcWxCM/60oq2DYMeAkWwiERwCA+500+5lILcAQ150YCbwE57jkXyCUNxB096UcCgQIOvhw56k8hwC4Nuhlbg2AEcwIv60o+704ftycKyBZG5Uo45EYcryE98EQlsS04pzoDgwU07kAatCQ7pEUMbQpB5kQ180YfzSwWzCUWuiEXqR0FhQg/6EJE50lC6lIy8j4z60EQ0x8ftDARbww16UIlsDofvSgQwRtcnWE660QaoxwEdAM/5FI54EUr7jwtrT4qvjEw7lFG408550Az5EEh0iwOwi8g1i8YvS8R0CA9lUUori4ysDtApk0syjcFigc18Fcu4TouqEYcvytibWIh3zMUyxsZ2SdflWIitCc86FACeQcOfQtB7Uwv2j4hyCwu9j0ewyoVtx1KjVMurTVeeGMJxRUotTIqwTQx0DwWcxETegxC51I6oEZHmk8k5TMhuDEJcwsQihJVllgqujFF60Uv5kE99Uo5m0Y/40QGySRBkVQs6DkUui86q0UAdwYVnhYFawE9808q0zVNpVMr3jQT3ikvqDo46Fc9qkl1d24/6zpE4FAx3j1LnlMKwRQfuDwstDpF71JEo1I6rkBJqUhUj1lPqVZeimc4+EhclmFThVwqtj0PcRMy6ztArUljk2g+rEVXh2FWhVdgeWZSi1MMaAgIkw43rUlOo1VBp1FMgE1ieGNHo0k3sEIm8y5OkFk+jkBQkFZej2dhh2gEkAhTol1Zll9G3UMa5yVnlmwy5DVApU1lamlanF5dkFxemWWFkIIquzQw/TsvmzVXfGQvqTpolGt3mHKEjYRodGxjemNie2qKkIp+lIIA6kpHcExHcEwdak1LAAABAHRSTlP///////////////////////////////////////////////////////////////////////////////////////9j//////////////////////////////////////////////9O//////////////////////////9j////////Y////2T///////////////9k////////////////////////////////////////hf////+XZP///9H/////2N1R4Mam/8r/8f//s3r03fKMTf//yZWm/nz80f/y/2iRvP9ynP//tv/tTfJWgVDX//32+OFN6fPcrZdi/wAASEFlZAAAEHtJREFUaN6s1wlY0+cdB/A/AUICSkAgCQRDTIJEQg6SAiEkICJHOAMRwiF3UCRQuUEKE6IOx42IgKCuIiJKwYrHEBXtVKT1wuoqOOdqtzlrO5/WbT2253HvPwdEEiHYfZ+HJ+H5k/eT9/eeQK8Nzecg636tzCYQgz/3GjLkj14o2u49nWpt/XAu3/zr7//478v/E/FCce/uQHl3dV7aQQKVKpUSCASZ7PDh9vGKwTvXTr38xQRo/8dXk5Mf9kQPVrQflFGpBFWCarftORMRHf3ohx/+8/KXEIqZu6GhYvCta5qlvr5ZWT4+Pkwmh8Plcn2V4TKZ3OKaT6/9ZdM7Eop7ryYHxEGytTJpSwuHyY+LLSopYcMpKfk4No7PBJA/v/hE5uCjG7dfvgOhmJkuP9MeVCMjtEgJzY1s9shYYWFGBhKJhFAoPL6wcIxdFAsYqpTUXjEYfe32UokXip8mWx9VtItlMllNY4ccIWCZIK2sXFwCA61AkEjwisQXbh+LbWw+CBM939z4dkmE4ufW8ugKQlZwMLWRLRKwWCwk0sTE3t7EBAkHgiAUhIQlKORvRXwwQvwTaXnXvlgC0fZqurUneps4qyy1Qb7i8uV6CI8CsQdRtg/i5YUHChKZFCIpHCnhUwER3aO/I5C+YS4/I87y2RscV9QgP3nSCjQHWRkZqXoANw+/wiT8Tp4UODGRezq1bCcnaFvErVMGEYqfJ4/ukXGzgstGsPWBKMjWFm4MECh4mFHqICE8+AX0Igmf4tTU1LSrjAmIiAvXDSAUPz2JPsgM3pv6LNduRU6OLYiRMibKQPPi7OxsHBXl7d33PJZTs7b00te6xZpPKH6c7IlI4waffvY4WS8Rn03TR3ivLmA3kkhpYEA+X5hY9/229sNBpJrK8/s3suxTnJxUhLJQKkIcSRJp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'
    CONTROL_MAXIMIZED = b''

    return CONTROL_MINIMIZED, CONTROL_RESTORE, CONTROL_MAXIMIZED, CONTROL_CLOSE, CLOSE_EMPTY, MAXIMIZE_EMPTY, MINIMIZE_EMPTY, RESTORE_EMPTY


def INIT_WIDGET(ID, widget):
    if ID == None or ID == '':
        ID = ID_COUNT_DEFAULT[0]
        ID_COUNT_DEFAULT[0] += 1

    WIDGET_ID_SAFE[ID] = widget
    return WIDGET_ID_SAFE[ID]


def INIT_ITEM(self, item):
    item_type, label, func, icon, tooltip, statustip, shortcut = item

    if icon != None:
        icon = init_image(icon)

    Action = QAction(QIcon(icon), label, self)
    Action.triggered.connect(func)

    Action.setStatusTip(statustip)
    Action.setToolTip(tooltip)
    if shortcut != None:
        Action.setShortcut(shortcut)

    return Action

def init_spacing(layout, spacing):
    if spacing != None:
        layout.setSpacing(spacing)

def init_content_margin(layout, content_margin):
    is_set = False
    if content_margin != None:
        if type(content_margin) != int:
            if len(content_margin) == 4:
                left, top, right, bottom = content_margin
                layout.setContentsMargins(left, top, right, bottom)
                is_set = True
            elif len(content_margin) == 2:
                top_bottom, left_right = content_margin
                layout.setContentsMargins(
                    left_right, top_bottom, left_right, top_bottom)
                is_set = True
            else:
                ...
        else:
            layout.setContentsMargins(
                content_margin, content_margin, content_margin, content_margin)
            is_set = True
    return is_set


def init_image(data):
    format = type(data)

    if format == bytes:
        image = QImage()
        byte_array = QByteArray.fromBase64(data)
        image.loadFromData(byte_array, 'PNG')
        return QPixmap.fromImage(image)
    elif format == str:
        return QPixmap(get_path(data))

def set_size_policy(widget, sizepolicy):
    policy = {
        'fixed'     : QSizePolicy.Fixed,
        'expand'    : QSizePolicy.Expanding
    }

    def init_single_policy(sizepolicy):
        if sizepolicy == SIZE_POLICY_EXPAND or sizepolicy == SIZE_POLICY_FIXED:
            return (policy[sizepolicy], policy[sizepolicy])

    if type(sizepolicy) == sample_tuple:
        if len(sizepolicy) == 2:
            horizontal_policy, vertical_policy = sizepolicy

            if horizontal_policy != None and vertical_policy != None:
                horizontal = horizontal_policy.lower()
                vertical = vertical_policy.lower()

                try:
                    vertical = policy[vertical]
                    horizontal = policy[horizontal]
                except:
                    raise ValueError(sizepolicy)
        elif len(sizepolicy) == 1:
            horizontal, vertical = init_single_policy(sizepolicy)
        else:
            ...
            # raise an error
    elif type(sizepolicy) == sample_string:
        horizontal, vertical = init_single_policy(sizepolicy)
    
    try:
        widget.setSizePolicy(horizontal, vertical)
    except:
        ...
        # raise an error

def set_widget(lyt, grid, widget, grid_pos_x, grid_pos_y):
    gridy, gridx = grid  # vertical (y) and horizontal (x) occupy rule for grid widgets

    if type(lyt) != sample_list and type(lyt) != sample_string:
        if grid_pos_x != None and grid_pos_y != None:
            if gridx != None and gridy != None:
                lyt.addWidget(widget, grid_pos_x, grid_pos_y, gridy, gridx)
            else:
                lyt.addWidget(widget, grid_pos_x, grid_pos_y)
        else:
            lyt.addWidget(widget)
    else:
        if len(lyt) == 2:
            lyt, _type = lyt

            if _type == 'addWidget':
                lyt.addWidget(widget)
            elif _type == 'addPermanentWidget':
                lyt.addPermanentWidget(widget)
            else:
                ...
        elif len(lyt) == 3:
            layout, pre_widget, _type = lyt
            if _type == 'replaceWidget':
                layout.replaceWidget(pre_widget, widget)


def set_style(widget, css, reset):
    if css != None:
        css = get_style_check(css)  # check for css errors
        get_css = widget.styleSheet()

        if reset == False:
            if len(get_css) != 0:
                def temp_handle(css):
                    container = []
                    css = css.split('}')
                    for item in css:
                        item = item.split('{')
                        container.append(item)

                    return container

                get_css = temp_handle(get_css)
                css = temp_handle(css)

                def make_changes(old, new):
                    for item in old:
                        old[old.index(item)] = item.split(':')

                    for item in new:
                        new[new.index(item)] = item.split(':')

                    space = [' ']
                    if space in old:
                        old.remove(space)
                    elif space in new:
                        new.remove(space)

                    for old_item in old:
                        for new_item in new:
                            if old_item[0].strip() == new_item[0].strip() and len(old_item[0].strip()) != 0:
                                old_item[1] = new_item[1]
                                new.remove(new_item)

                    for new_item in new:
                        old.append(new_item)

                    for items in old:
                        old[old.index(items)] = ':'.join(items)

                    return '; '.join(old)

                for already in get_css:
                    for new_css in css:
                        if len(new_css) == 1:
                            if ':' not in already[0] and len(already[0]) != 0:
                                get_property = already[1].split(';')
                                new_property = new_css[0].split(';')
                                already[1] = make_changes(
                                    get_property, new_property)
                                # already[1] = already[1] + ' ' + new_css[0] + ' '
                        else:
                            if already[0].strip() == new_css[0].strip():
                                get_property = already[1].split(';')
                                new_property = new_css[1].split(';')
                                already[1] = make_changes(
                                    get_property, new_property)
                else:
                    # print(get_css, new_css)
                    for item in get_css:
                        get_css[get_css.index(item)] = '{'.join(item)
                    else:
                        new_css = '}'.join(get_css)
                        # print(new_css)

                widget.setStyleSheet(new_css)
            else:
                widget.setStyleSheet(css)
        else:
            widget.setStyleSheet(css)


def make_alignment(widget, alignments):
    def alignCheck(widget_alignment):
        alignment = widget_alignment.lower()

        alignment_map = {
            center      : Qt.AlignCenter,
            right       : Qt.AlignRight,
            left        : Qt.AlignLeft,
            top         : Qt.AlignTop,
            bottom      : Qt.AlignBottom,
            hcenter     : Qt.AlignHCenter,
            vcenter     : Qt.AlignVCenter,
            justify     : Qt.AlignJustify
        }
        
        try:
            align = alignment_map[alignment]
        except:
            ...
            # raise an error

        return align

    align = alignCheck(alignments)
    widget.setAlignment(align)


def get_parent(identifier):
    inspector = inspect.stack()[2][4]
    result = str(inspector).lower().replace(' ', '')

    if (identifier not in result and f"{ELEM_TYPE_TAB}({identifier.removeprefix('=')}" not in result and 
        ELEM_TYPE_SCROLL_AREA not in result and ELEM_TYPE_STACKED not in result):
        return True
    else:
        return False

def get_filter(value):
    # split_markers = ['), (', ') ,(', ') , (', '),(']
    # for split_marker in split_markers:
    #     if split_marker in value:
    #         value = value.replace(split_marker, FILTER_SPLIT_MARKER)
    # "(Python: *.py) , (Bash: *.sh, *.cmd)"
    # value = value.replace('(', '').replace(')', '')
    
    value = value.split(')')
    value = [item.split('(') for item in value]

    result = [
        item 
            for items in range(len(value)) 
                for item in value[items] 
                    if len(item) != 0 and item.strip() != ','
            ]
    value = FILTER_SPLIT_MARKER.join(result)
    
    def init_filter(filter):
        filter = filter.split(':')
        filter_type = filter[0].strip()
        extensions = filter[1]
        extensions = extensions.split(',')
        filter_extensions = ''
        for extension in extensions:
            filter_extensions += extension.strip() + ' '
        else:
            filter_extensions = filter_extensions[:-1]

        return f'{filter_type} ({filter_extensions})'

    if FILTER_SPLIT_MARKER in value:
        filters = value.split(FILTER_SPLIT_MARKER)
        file_filter = ''
        for filter in filters:
            filter = init_filter(filter)
            file_filter += filter + ' ;; '
        else:
            file_filter = file_filter[:-4]
    else:
        file_filter = init_filter(value)

    return file_filter


def check_func(property):
    # IMPROVE LATER
    if type(property) == type(list()):
        widget_type = property[0]
    elif type(property) == type(str()):
        widget_type = ''
    else:
        widget_type = property()[0]
        property = property()

    return widget_type, property


def process_request(allowed: list = None, widget_type: None = None):
    if type(allowed) == sample_list:
        for values in allowed:
            if values in widget_type:
                return True
        else:
            return False

    elif type(allowed) == sample_string:
        if allowed in widget_type:
            return True
        else:
            return False


def add_list_items(widget, list_items):

    for items in list_items:
        NotRequired, label, icon = items

        if icon != None:
            icon_path = init_image(icon)

        list_widget_item = QListWidgetItem(QIcon(icon_path), label)
        widget.addItem(list_widget_item)


def add_select_option(widget, options):
    for option in options:
        item_type = option[0].lower()

        if item_type == ELEM_TYPE_OPTION:
            option_value = str(option[1])
            option_icon = option[2]

            # print(type(option_value))

            if ELEM_TYPE_INPUT in str(type(option_value)).lower():
                widget.setLineEdit(option_value)
            else:
                widget.addItem(option_value)
                icon_index = widget.count()-1

                if option_icon != None:
                    widget.setItemIcon(
                        icon_index, QIcon(init_image(option_icon)))


def add_tabs(tab_widget, tabs):
    def init_tab(tab):
        elem_type, layout, name, icon = tab

        if elem_type == ELEM_TYPE_TAB:
            if icon != None:
                icon = QIcon(init_image(icon))
            else:
                icon = QIcon(icon)

            tab_widget.addTab(layout, icon, name)

    if type(tabs[0]) == sample_list:
        for tab in tabs:
            init_tab(tab)
    elif type(tabs[0]) == sample_string:
        init_tab(tabs)


def add_stacks(stack_widget, stacks):
    def init_stack(stack):
        widget, layout = stack
        stack_widget.addWidget(widget)
        
    if type(stacks[0]) == sample_list:
        for stack in stacks:
            init_stack(stack)
    else:
        init_stack(stacks)


def get_path(href):
    return path.abspath(href)


# PRE-DEFINED WIDGETS
PRE_DEFINED_WIDGETS = []
PRE_WIDGETS_COUNT = [0]

# All the Pre-Defined Widget Method List
METHOD_COPY = []
METHOD_CUT = []
METHOD_PASTE = []
METHOD_UNDO = []
METHOD_REDO = []


def PRE_INIT(MethodType, MethodItem):
    for item in MethodItem:
        try:
            item = item.split(':')
            pre_id = item[0]
            target_id = item[1]

            pre_widget = WIDGET_ID_SAFE[pre_id]
            target_widget = WIDGET_ID_SAFE[target_id]

            if pre_widget.isChecked():
                if MethodType == PRE_INIT_COPY:
                    pre_widget.clicked.connect(
                        target_widget.copy())
                elif MethodType == PRE_INIT_CUT:
                    pre_widget.clicked.connect(
                        target_widget.cut())
                elif MethodType == PRE_INIT_PASTE:
                    pre_widget.clicked.connect(
                        target_widget.paste())
                elif MethodType == PRE_INIT_UNDO:
                    pre_widget.clicked.connect(
                        target_widget.undo())
                elif MethodType == PRE_INIT_REDO:
                    pre_widget.clicked.connect(
                        target_widget.redo())
                pre_widget.toggle()
        except:
            if pre_widget.isChecked():
                pre_widget.toggle()


def action_copy():
    PRE_INIT(PRE_INIT_COPY, METHOD_COPY)


def action_cut():
    PRE_INIT(PRE_INIT_CUT, METHOD_CUT)


def action_paste():
    PRE_INIT(PRE_INIT_PASTE, METHOD_PASTE)


def action_undo():
    PRE_INIT(PRE_INIT_UNDO, METHOD_UNDO)


def action_redo():
    PRE_INIT(PRE_INIT_REDO, METHOD_REDO)


def pre_widget_process(widget_type):
    id = widget_type + str(PRE_WIDGETS_COUNT[0])
    PRE_WIDGETS_COUNT[0] += 1

    return ELEM_TYPE_BUTTON, id


def sample_func(): ...


sample_string = type(str())

sample_list = type(list())

sample_function = type(sample_func)

sample_integer = type(int())

sample_tuple = type(tuple())

control_close_style = 'margin-right: 4px;'
general_control_style = '''
    max-height: 18px; 
    max-width: 18px; 
    border-radius: 9px; 
    margin-left: 4px;
'''

def fusion_style(minimize, maximize, close):
    # default_fusion_style = f'margin-right: 4px; {general_control_style}'
    
    minimize.style(general_control_style)
    maximize.style(general_control_style)
    close.style(general_control_style + control_close_style)


def windows_style(minimize, maximize, close):
    default_window_style = 'button [ max-width: 40px; border: 0]'

    minimize.style(default_window_style)

    maximize.style(default_window_style)

    close.style(default_window_style)


def clera_style(minimize, maximize, close):
    # default_clera_style = f'{general_control_style}'
    
    minimize.style(general_control_style)
    maximize.style(general_control_style)
    close.style(general_control_style + control_close_style)

def append_items(append_list, item):
    append_list.append(item)

COLORS = {
    'red'       : Qt.red,
    'black'     : Qt.black,
    'white'     : Qt.white,
    'gray'      : Qt.gray,
    'green'     : Qt.green,
    'blue'      : Qt.blue,
    'cyan'      : Qt.cyan,
    'magenta'   : Qt.magenta,
    'yellow'    : Qt.yellow,
}

def get_color(value):
    if 'rgb' in value:
        rgb = [0, 0, 0]
        new_color = value.lower()
        new_color = value.replace('(', '').replace(')', '')
        new_color = new_color.replace('rgba', 'rgb')
        color = new_color.removeprefix('rgb') 
        color = color.split(',')

        for _index in range(len(color)):
            if _index <= 2:
                rgb[_index] = int(color[_index])
        else:
            rgb = rgb[0:3]
            red, green, blue = rgb
            color = QColor(red, green, blue)
    else:
        try:
            color = COLORS[value]
        except:
            color = None

    return color


def INIT_FORMAT(elements):
    format = QTextCharFormat()
    KEYS = elements.keys()
    if 'color' in KEYS:
        color = get_color(elements['color'])
        if color != None:
            format.setForeground(color)

    if 'background' in KEYS:
        background = get_color(elements['background'])
        if background != None:
            format.setBackground(background)
            
    return format

def r(list: list = None):
    if list != None:
        return '|'.join([fr'\b{list[i]}\b' for i in range(len(list))])

def encode(path):
    path = str(path)
    
    if os.path.isfile(path):
        with open(path, 'rb') as image:
            BASE_64 = base64.b64encode(image.read())

        return BASE_64

def decode(byte, path: str = 'image.png', write: bool = False):
    BASE_64 = base64.b64decode(byte)
    
    if write == True:
        with open(path, 'wb') as image:
                image.write(BASE_64)

    return BASE_64