"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import datapoint as components_datapoint
from dataclasses_json import Undefined, dataclass_json
from honeyhive import utils
from typing import List, Optional


@dataclasses.dataclass
class GetDatapointsRequest:
    project: str = dataclasses.field(metadata={'query_param': { 'field_name': 'project', 'style': 'form', 'explode': True }})
    r"""Project name to filter datapoints"""
    datapoint_ids: Optional[List[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'datapoint_ids', 'style': 'form', 'explode': True }})
    r"""List of datapoint ids to fetch"""
    dataset_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'dataset_name', 'style': 'form', 'explode': True }})
    r"""Name of the dataset to get datapoints from"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetDatapointsResponseBody:
    r"""Successful response"""
    datapoints: Optional[List[components_datapoint.Datapoint]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datapoints'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class GetDatapointsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: Optional[GetDatapointsResponseBody] = dataclasses.field(default=None)
    r"""Successful response"""
    

