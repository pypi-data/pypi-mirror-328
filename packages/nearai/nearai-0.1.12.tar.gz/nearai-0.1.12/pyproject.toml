[project]
name = "nearai"
version = "0.1.12"
description = "Near AI CLI"
authors = [{name = "Support", email = "support@near.ai"}]
readme = "README.md"
requires-python = ">=3.9,<3.12"

dependencies = [
    "backoff>=2.2.1,<3.0.0",
    "base58==2.1.1",
    "boto3>=1.34.100,<2.0.0",
    "boto3-stubs>=1.34.147,<2.0.0",
    "cryptography>=43.0.0",
    "datasets>=2.20.0,<3.0.0",
    "ed25519>=1.5,<2.0",
    "fastapi>=0.111.0,<0.112.0",
    "fire>=0.6.0,<0.7.0",
    "jinja2>=3.1.4,<4.0.0",
    "litellm>=1.60.5,<2.0.0",
    "mypy-boto3>=1.34.147,<2.0.0",
    "mypy-boto3-s3>=1.34.138,<2.0.0",
    "openai>=1.61.1,<2.0.0",
    "pandas-stubs>=2.2.2.240603,<3.0.0",
    "peft>=0.10.0,<0.11.0",
    "psutil>=5.9.5,<6.0.0",
    "pydantic>=2.7.1,<3.0.0",
    "pydantic-core>=2.18.4,<3.0.0",
    "pymysql>=1.1.0,<2.0.0",
    "pynacl>=1.5.0,<2.0.0",
    "requests>=2.31.0,<3.0.0",
    "setuptools>=69.5.1,<70.0.0",
    "tabulate>=0.9.0,<0.10.0",
    "tenacity>=8.2.3,<9.0.0",
    "tensorboardX>=2.6.2.2,<3.0.0",
    "torch>=2.2.2,<3.0.0",
    "tqdm>=4.66.4,<5.0.0",
    "transformers>=4.40.2,<5.0.0",
    "types-cffi>=1.16.0.20240331,<2.0.0",
    "types-colorama>=0.4.15.20240311,<0.5.0",
    "types-psutil>=6.0.0.20240621,<7.0.0",
    "types-pygments>=2.18.0.20240506,<3.0.0",
    "types-pyyaml>=6.0.12.20240724,<7.0.0",
    "types-redis>=4.6.0.20240425,<5.0.0",
    "types-regex>=2024.5.15.20240519,<2025.0.0",
    "types-setuptools>=71.1.0.20240724,<72.0.0",
    "types-ujson>=5.10.0.20240515,<6.0.0",
    "alembic>=1.13.2,<2.0.0",
    "fireworks-ai>=0.15.7,<0.16.0",
    "typer>=0.12.5,<0.13.0",
    "uvicorn>=0.32.0,<0.33.0",
    "tweepy>=4.14.0,<5.0.0",
    "rich>=13.7.0",
    "poetry (>=2.0.1,<3.0.0)",
    "py-near>=1.1.50,<2.0.0",
    "loguru>=0.7.2,<0.8.0",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
backoff = "^2.2.1"
base58 = "2.1.1"
boto3 = "^1.35.70"
boto3-stubs = "^1.35.70"
cryptography = "^43.0.0"
datasets = "^2.20.0"
ed25519 = "^1.5"
fabric = { version = "^3.2.2", optional = true }
fastapi = "^0.111.0"
fastapi-cli = { version = "^0.0.4", optional = true }
fire = "^0.6.0"
flask = { version = "^3.0.3", optional = true }
gunicorn = { version = "^22.0.0", optional = true }
jinja2 = "^3.1.4"
lean-dojo = { version = "^2.1.3", optional = true }
litellm = "^1.60.5"
mypy-boto3 = "^1.35.70"
mypy-boto3-s3 = "^1.35.70"
openai = "^1.61.1"
pandas-stubs = "^2.2.2.240603"
peft = "^0.10.0"
psutil = "^5.9.5"
pydantic = "^2.7.1"
pydantic-core = "^2.18.4"
pymysql = "^1.1.0"
pynacl = "^1.5.0"
python-dotenv = { version = "^1.0.1", optional = true }
requests = "^2.31.0"
setuptools = "^69.5.1"
shortuuid = { version = "^1.0.0", optional = true }
sqlmodel = { version = "^0.0.21", optional = true }
tabulate = "^0.9.0"
tenacity = "^8.2.3"
tensorboardX = "^2.6.2.2"
torch = "^2.2.2"
torchao = { version = "^0.3.1", optional = true }
torchtune = { version = "^0.2.0", optional = true }
tqdm = "^4.66.4"
transformers = "^4.40.2"
types-cffi = "^1.16.0.20240331"
types-colorama = "^0.4.15.20240311"
types-psutil = "^6.0.0.20240621"
types-pygments = "^2.18.0.20240506"
types-pyyaml = "^6.0.12.20240724"
types-redis = "^4.6.0.20240425"
types-regex = "^2024.5.15.20240519"
types-setuptools = "^71.1.0.20240724"
types-ujson = "^5.10.0.20240515"
vllm = { version = "^0.5.3", optional = true }
alembic = "^1.13.2"
python-docx = { version = "^1.1.2", optional = true }
openpyxl = { version = "^3.1.5", optional = true }
python-pptx = { version = "^1.0.2", optional = true }
pypdf = { version = "^4.3.1", optional = true }
chardet = { version = "^5.2.0", optional = true }
apscheduler = { version = "^3.10.4", optional = true }
fireworks-ai = "^0.15.7"
typer = "^0.12.5"
uvicorn = "^0.32.0"
tweepy = { version = "^4.14.0" }
rich = "^13.7.0"
py-near = "^1.1.50"
loguru = "^0.7.2"

[project.optional-dependencies]
# Experiment platform
explatform = ["flask", "fabric", "gunicorn", "requests", "shortuuid"]
hub = [
    "cryptography",
    "fastapi-cli",
    "fastapi",
    "python-dotenv",
    "sqlmodel",
    "python-docx",
    "openpyxl",
    "python-pptx",
    "pypdf",
    "chardet",
    "shortuuid",
    "apscheduler",
    "tweepy"
]
torch = ["torch", "torchao", "torchtune"]
vllm = ["vllm", "torch"]
lean = ["lean-dojo"]
docs = [
    "mkdocs>=1.6.0",
    "pillow>=10.4.0",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocstrings>=0.25.2",
    "mkdocstrings-python>=1.10.7",
    "mkdocs-redirects>=1.2.1",
    "mkdocs-embed-external-markdown>=3.0.2",
    "mkdocs-exclude>=1.0.2",
    "mkdocs-material[imaging]>=9.5.31",
    "mkdocs-simple-hooks>=0.1.5",
]

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.0"
ruff = "^0.5.2"
commitizen = "^3.29.0"
types-openpyxl = "^3.1.5.20240822"
types-urllib3 = "^1.26.25.14"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
pillow = "^10.4.0"
mkdocs-minify-plugin = "^0.8.0"
mkdocstrings = "^0.25.2"
mkdocstrings-python = "^1.10.7"
mkdocs-redirects = "^1.2.1"
mkdocs-embed-external-markdown = "^3.0.2"
mkdocs-exclude = "^1.0.2"
mkdocs-material = { extras = ["imaging"], version = "^9.5.31" }
mkdocs-simple-hooks = "^0.1.5"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-random-order = "^1.1.1"
pytest-xdist = "^3.6.1"

[tool.pytest.ini_options]
addopts = "-n auto"
timeout = 300
norecursedirs = ["hub", "dist", "docs"]
markers = [
  "integration: mark test as integration test",
]


[project.scripts]
nearai = "nearai.cli:main"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver2"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["nearai"]
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "venv",
    "openapi_client",
]
extend-exclude = ["hub/tests", "./*/projects", "./*/examples"]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D",  # pydocstyle
]
ignore = [
    "B008", # do not perform calls in argument defaults
    "C901", # too complex
    "C408", # dict() constructor
    "C417", # enforce list comprehension
    "W191", # indentation contains tabs
    "D401", # imperative mood
    "D100", # Missing docstring module
    "D101", # Missing docstring in public class
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pydocstyle]
ignore = []
match-dir = "(?!aws_runner/ts_runner/python_runtime).*"

[tool.mypy]
strict = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
mypy_path = "typings"
exclude = [
    "tests",
    "venv",
    ".venv",
    ".vscode",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "nearai/openapi_client",
    "py_near",
]

[[tool.mypy.overrides]]
module = [
    "base58.*",
    "pytz.*",
    "litellm.*",
    "boto3.*",
    "tenacity.*",
    'datasets.*',
    'fire.*',
    'tqdm.*',
    'fabric.*',
    'tabulate.*',
    'requests.*',
    'tensorboardX.*',
    'pymysql.*',
    'torchtune.*',
    'torchao.*',
    'fireworks.*',
    'apscheduler.*',
    "ed25519.*",
    "numpy.*",
    "nacl.*",
    "nacl.signing.*",
    "openai.*",
    "openai.types.*",
    "openai.types.beta.*",
    "openai.types.beta.threads.*",
    "openai.types.beta.vector_store.*",
    "openai.types.file_object.*",
    "psutil.*",
    "sqlalchemy.*",
    "alembic.*",
    "sqlmodel.*",
    "docx.*",
    "pptx.*",
    "pypdf.*",
    "chardet.*",
    "botocore.*",
    "shortuuid.*",
    "py_near.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "hub.api.v1.models"
implicit_reexport = true
ignore_errors = true