[build-system]
requires = [
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "srepkg"
version = "0.1.8"
description = "Repackages apps to restrict installation into isolated env"
authors = [
    { name = "Duane Goodner", email = "dmgoodner@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
keywords = [
    "solo repackage",
    "command line",
    "command line interface",
    "dependencies",
    "dependency",
    "dependency conflict",
    "dependency conflicts",
    "entry point",
    "entry points",
    "install",
    "isolated environment",
    "isolation",
    "packaging",
    "pip",
    "virtual environment",

]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "build>=1.0.0",
    "entry_points_txt>=0.2.1",
    "packaging>=22.0",
    "pkginfo>=1.9.0",
    "requests>=2.28.0",
    "yaspin>=2.2.0",
    "wheel>=0.37.0"
]

[project.optional-dependencies]
test = ["pytest>=7.0", "pytest-mock>=3.0", "coverage>=7.0", "pytest-cov>=4.0", "wheel"]


[project.urls]
Documentation = "https://duanegoodner.github.io/srepkg/"
Repository = "https://github.com/duanegoodner/srepkg"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[project.scripts]
srepkg = "srepkg.srepkg:main"

[tool.pytest.ini_options]
pythonpath = "src"
norecursedirs = ["test/package_test_cases"]

[tool.setuptools.package-data]
srepkg = ["repackaging_components/**/*"]

[tool.coverage.run]
omit = ["*/test/*"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "if __name__ == \"__main__\":",
    "@(abc\\.)?abstractmethod",
    "@contextmanager"
]
[tool.coverage.xml]
output = "coverage.xml"


