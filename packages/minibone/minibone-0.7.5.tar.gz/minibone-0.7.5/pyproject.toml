# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

# https://packaging.python.org/en/latest/specifications/core-metadata/

[project]
name = "minibone"
version = "0.7.5"
description = "Small boiler plate with tools for multithreading."
keywords = ["multithreading", "task", "job", "background"]
authors = [
    {name = "Erick Romero", email = "erick@gjrlabs.com"}
]
license = {file = "LICENSE"}
readme = "README.md"

# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries",
]
requires-python = ">=3.0"
dependencies = ["aiofiles", "pyyaml", "requests", "tomlkit"]

[project.urls]
"Homepage" = "https://github.com/erromu/minibone/"
"Bug Tracker" = "https://github.com/erromu/minibone/issues"
"Issues" = "https://github.com/erromu/minibone/issues"
"Documentation" = "https://www.gjrlabs.com"
"Repository" = "https://github.com/erromu/minibone.git"
#"Changelog" = ""

[tool.ruff]
# Set the maximum line length to 79.
line-length = 120

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["E501"]
