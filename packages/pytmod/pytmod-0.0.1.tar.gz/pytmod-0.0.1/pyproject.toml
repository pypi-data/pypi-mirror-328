[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pytmod"
description = "Time modulated wave solver"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE.txt" }
keywords = ["time-modulated", "electromagnetism", "optics"]
authors = [{ email = "benjamin.vial84@gmail.com" }, { name = "Benjamin Vial" }]
classifiers = [
  "Development Status :: 1 - Planning",
  "Programming Language :: Python",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Utilities",
]
dependencies = [
  "numpy>=1.20.0",
  "scipy >= 1.10.0",
  "matplotlib >= 3.7.0",
  "scikit-image >= 0.19.3",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "pytest-datadir",
  "pytest-sugar",
  "pytest-xdist[psutil]",
  "coverage",
]
doc = [
  "sphinx",
  "shibuya",
  "sphinx-gallery",
  "memory_profiler",
  "sphinx-autoapi",
  "myst-parser",
  "sphinx_design",
  "sphinxcontrib-bibtex",
  "sphinxcontrib-video",
  "pandas",
  "linkify-it-py",
  "sphinx-tabs",
  "sphinx-togglebutton",
  "numpydoc",
  "sphinx-multiversion",
]
dev = ["hatch", "pre-commit", "nox", "uv", "hatch-vcs", "ipython"]

[project.urls]
Homepage = "https://bvial.info/pytmod"
Documentation = "https://bvial.info/pytmod"
Repository = "https://github.com/benvial/pytmod"
Issues = "https://github.com/benvial/pytmod/issues"

[tool.setuptools.packages.find]
where = ["."]

[tool.ruff.lint]
extend-select = [
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "EM", # flake8-errmsg
  "EXE", # flake8-executable
  "FURB", # refurb
  "G", # flake8-logging-format
  "I", # isort
  "ICN", # flake8-import-conventions
  "NPY", # NumPy specific rules
  "PD", # pandas-vet
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL", # pylint
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP", # pyupgrade
  "YTT", # flake8-2020

]
ignore = [
  "ISC001", # Conflicts with formatter
  "PLR09", # Too many <...>
  "PLR2004", # Magic value used in comparison

]
typing-modules = ["mypackage._compat.typing"]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[tool.uv]
dev-dependencies = ["pytmod[dev]"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "pytmod/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts = "--cov=pytmod --cov-report html --cov-report term --cov-report xml --cov-report html"
