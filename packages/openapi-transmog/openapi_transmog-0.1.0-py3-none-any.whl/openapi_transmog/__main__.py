from argparse import ArgumentParser
from json import loads
from pathlib import Path
from sys import stderr

from .schema import generate_code

parser = ArgumentParser('python -m openapi-transmog')
parser.add_argument(
    'schema', type=Path,
    help="the .json file. Should be OpenAPI 3.")

parser_interp = parser.add_argument_group(
    'HTTP interpolation',
    "You may reference a environmental variable such as '$TOKEN', which will be fetched at runtime. (Be careful not to hardcode the token!)"
)

parser_interp.add_argument(
    '--auth',
    nargs=2, metavar=('user', 'password'),
    help='HTTP basic authentication'
)
parser_interp.add_argument(
    '--cookie', '-C', default=[],
    nargs=2, metavar=('key', 'value'),
    action='append',
    help='Cookie (you may define multiple)'
)
parser_interp.add_argument(
    '--param', '-P', default=[],
    nargs=2, metavar=('key', 'value'),
    action='append',
    help='Parameter (you may define multiple; they will override)'
)
parser_interp.add_argument(
    '--header', '-H', default=[],
    nargs=2, metavar=('key', 'value'),
    action='append',
    help='HTTP header (you may define multiple)'
)


HEADER = '''\
"""
This code was automatically generated by https://github.com/yunruse/openapi-transmog.
"""

from typing import TypedDict, Literal
from os.path import expandvars

from requests import request

from dotenv import load_dotenv
load_dotenv()
'''


if __name__ == '__main__':
    args = parser.parse_args()
    # print(args, file=stderr)
    schema = loads(args.schema.read_text())

    print(HEADER)
    print(generate_code(
        schema,
        params=dict(args.param) or None,
        headers=dict(args.header) or None,
        cookies=dict(args.cookie) or None,
        auth=args.auth,
    ))
