stages:          # List of stages for jobs, and their order of execution
  - package

workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/

# Check that version specificied in pyproject.toml matches tag
test-version:
  stage: package
  image: ubuntu
  script:
    - cat pyproject.toml | grep ${CI_COMMIT_TAG:1}

build-job:
  stage: package
  image: python
  script:
    - pip install --upgrade build
    - python -m build
  artifacts: 
    paths: 
      - dist/
  needs:
    - job: test-version

deploy-job:
  stage: package
  image: python

  # Publishing with trusted provider. Example from: https://docs.pypi.org/trusted-publishers/using-a-publisher/#gitlab-cicd
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi

  script:
    # Install dependencies
    - apt update && apt install -y jq
    - python -m pip install -U twine id

    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    - oidc_token=$(python -m id PYPI)

    # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")

    - twine upload -u __token__ -p "${api_token}" dist/*
  needs:
    - job: build-job
      artifacts: true
