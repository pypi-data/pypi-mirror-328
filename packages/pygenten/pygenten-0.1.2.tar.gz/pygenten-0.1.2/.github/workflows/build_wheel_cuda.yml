# An attempt at a workflow for building a python wheel for cuda.  The cuda-toolkit action doesn't ever seem to work,
# but it needs to happen in the manylinux container anyway.  And manually installing the cuda toolkit doesn't work either.

name: Build python wheels - cuda

on:
  workflow_dispatch

jobs:
    
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2

      # - uses: Jimver/cuda-toolkit@v0.2.16
      #   id: cuda-toolkit
      #   with:
      #     cuda: '12.5.0'
      #     log-file-suffix: '${{matrix.os}}.txt'
      #     linux-local-args: '["--toolkit"]'
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        with:
          output-dir: dist
        env:
          CIBW_BUILD: cp38-manylinux_x86_64
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_ALL_LINUX: "wget https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-repo-rhel7-10.2.89-1.x86_64.rpm && rpm -i cuda-repo-*.rpm && yum install -y openblas-devel cuda"
          CIBW_CONFIG_SETTINGS: "cmake.define.ENABLE_PYTHON_EMBED=OFF cmake.define.PYGENTEN_CUDA=ON"

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
